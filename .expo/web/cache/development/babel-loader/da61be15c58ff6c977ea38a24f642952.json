{"ast":null,"code":"'use strict';\n\nimport NativeAnimatedHelper from \"../NativeAnimatedHelper\";\nvar NativeAnimatedAPI = NativeAnimatedHelper.API;\nimport invariant from 'fbjs/lib/invariant';\nvar _uniqueId = 1;\n\nvar AnimatedNode = function () {\n  var _proto = AnimatedNode.prototype;\n\n  _proto.__attach = function __attach() {};\n\n  _proto.__detach = function __detach() {\n    if (this.__isNative && this.__nativeTag != null) {\n      NativeAnimatedHelper.API.dropAnimatedNode(this.__nativeTag);\n      this.__nativeTag = undefined;\n    }\n  };\n\n  _proto.__getValue = function __getValue() {};\n\n  _proto.__getAnimatedValue = function __getAnimatedValue() {\n    return this.__getValue();\n  };\n\n  _proto.__addChild = function __addChild(child) {};\n\n  _proto.__removeChild = function __removeChild(child) {};\n\n  _proto.__getChildren = function __getChildren() {\n    return [];\n  };\n\n  function AnimatedNode() {\n    this._listeners = {};\n  }\n\n  _proto.__makeNative = function __makeNative() {\n    if (!this.__isNative) {\n      throw new Error('This node cannot be made a \"native\" animated node');\n    }\n\n    if (this.hasListeners()) {\n      this._startListeningToNativeValueUpdates();\n    }\n  };\n\n  _proto.addListener = function addListener(callback) {\n    var id = String(_uniqueId++);\n    this._listeners[id] = callback;\n\n    if (this.__isNative) {\n      this._startListeningToNativeValueUpdates();\n    }\n\n    return id;\n  };\n\n  _proto.removeListener = function removeListener(id) {\n    delete this._listeners[id];\n\n    if (this.__isNative && !this.hasListeners()) {\n      this._stopListeningForNativeValueUpdates();\n    }\n  };\n\n  _proto.removeAllListeners = function removeAllListeners() {\n    this._listeners = {};\n\n    if (this.__isNative) {\n      this._stopListeningForNativeValueUpdates();\n    }\n  };\n\n  _proto.hasListeners = function hasListeners() {\n    return !!Object.keys(this._listeners).length;\n  };\n\n  _proto._startListeningToNativeValueUpdates = function _startListeningToNativeValueUpdates() {\n    var _this = this;\n\n    if (this.__nativeAnimatedValueListener && !this.__shouldUpdateListenersForNewNativeTag) {\n      return;\n    }\n\n    if (this.__shouldUpdateListenersForNewNativeTag) {\n      this.__shouldUpdateListenersForNewNativeTag = false;\n\n      this._stopListeningForNativeValueUpdates();\n    }\n\n    NativeAnimatedAPI.startListeningToAnimatedNodeValue(this.__getNativeTag());\n    this.__nativeAnimatedValueListener = NativeAnimatedHelper.nativeEventEmitter.addListener('onAnimatedValueUpdate', function (data) {\n      if (data.tag !== _this.__getNativeTag()) {\n        return;\n      }\n\n      _this._onAnimatedValueUpdateReceived(data.value);\n    });\n  };\n\n  _proto._onAnimatedValueUpdateReceived = function _onAnimatedValueUpdateReceived(value) {\n    this.__callListeners(value);\n  };\n\n  _proto.__callListeners = function __callListeners(value) {\n    for (var _key in this._listeners) {\n      this._listeners[_key]({\n        value: value\n      });\n    }\n  };\n\n  _proto._stopListeningForNativeValueUpdates = function _stopListeningForNativeValueUpdates() {\n    if (!this.__nativeAnimatedValueListener) {\n      return;\n    }\n\n    this.__nativeAnimatedValueListener.remove();\n\n    this.__nativeAnimatedValueListener = null;\n    NativeAnimatedAPI.stopListeningToAnimatedNodeValue(this.__getNativeTag());\n  };\n\n  _proto.__getNativeTag = function __getNativeTag() {\n    var _this$__nativeTag;\n\n    NativeAnimatedHelper.assertNativeAnimatedModule();\n    invariant(this.__isNative, 'Attempt to get native tag from node not marked as \"native\"');\n    var nativeTag = (_this$__nativeTag = this.__nativeTag) !== null && _this$__nativeTag !== void 0 ? _this$__nativeTag : NativeAnimatedHelper.generateNewNodeTag();\n\n    if (this.__nativeTag == null) {\n      this.__nativeTag = nativeTag;\n      NativeAnimatedHelper.API.createAnimatedNode(nativeTag, this.__getNativeConfig());\n      this.__shouldUpdateListenersForNewNativeTag = true;\n    }\n\n    return nativeTag;\n  };\n\n  _proto.__getNativeConfig = function __getNativeConfig() {\n    throw new Error('This JS animated node type cannot be used as native animated node');\n  };\n\n  _proto.toJSON = function toJSON() {\n    return this.__getValue();\n  };\n\n  return AnimatedNode;\n}();\n\nexport default AnimatedNode;\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/Users/garethcozens/Documents/repo/cloudratha/react-native-web-nx-demo/node_modules/react-native-web/dist/vendor/react-native/Animated/nodes/AnimatedNode.js"],"names":["NativeAnimatedAPI","NativeAnimatedHelper","_uniqueId","AnimatedNode","_proto","id","String","Object","_this","data","value","invariant","nativeTag","_this$__nativeTag"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nvar NativeAnimatedAPI = NativeAnimatedHelper.API;\nimport invariant from 'fbjs/lib/invariant';\nvar _uniqueId = 1; // Note(vjeux): this would be better as an interface but flow doesn't\n// support them yet\n\nvar AnimatedNode = /*#__PURE__*/function () {\n  var _proto = AnimatedNode.prototype;\n\n  _proto.__attach = function __attach() {};\n\n  _proto.__detach = function __detach() {\n    if (this.__isNative && this.__nativeTag != null) {\n      NativeAnimatedHelper.API.dropAnimatedNode(this.__nativeTag);\n      this.__nativeTag = undefined;\n    }\n  };\n\n  _proto.__getValue = function __getValue() {};\n\n  _proto.__getAnimatedValue = function __getAnimatedValue() {\n    return this.__getValue();\n  };\n\n  _proto.__addChild = function __addChild(child) {};\n\n  _proto.__removeChild = function __removeChild(child) {};\n\n  _proto.__getChildren = function __getChildren() {\n    return [];\n  }\n  /* Methods and props used by native Animated impl */\n  ;\n\n  function AnimatedNode() {\n    this._listeners = {};\n  }\n\n  _proto.__makeNative = function __makeNative() {\n    if (!this.__isNative) {\n      throw new Error('This node cannot be made a \"native\" animated node');\n    }\n\n    if (this.hasListeners()) {\n      this._startListeningToNativeValueUpdates();\n    }\n  }\n  /**\n   * Adds an asynchronous listener to the value so you can observe updates from\n   * animations.  This is useful because there is no way to\n   * synchronously read the value because it might be driven natively.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#addlistener\n   */\n  ;\n\n  _proto.addListener = function addListener(callback) {\n    var id = String(_uniqueId++);\n    this._listeners[id] = callback;\n\n    if (this.__isNative) {\n      this._startListeningToNativeValueUpdates();\n    }\n\n    return id;\n  }\n  /**\n   * Unregister a listener. The `id` param shall match the identifier\n   * previously returned by `addListener()`.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#removelistener\n   */\n  ;\n\n  _proto.removeListener = function removeListener(id) {\n    delete this._listeners[id];\n\n    if (this.__isNative && !this.hasListeners()) {\n      this._stopListeningForNativeValueUpdates();\n    }\n  }\n  /**\n   * Remove all registered listeners.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#removealllisteners\n   */\n  ;\n\n  _proto.removeAllListeners = function removeAllListeners() {\n    this._listeners = {};\n\n    if (this.__isNative) {\n      this._stopListeningForNativeValueUpdates();\n    }\n  };\n\n  _proto.hasListeners = function hasListeners() {\n    return !!Object.keys(this._listeners).length;\n  };\n\n  _proto._startListeningToNativeValueUpdates = function _startListeningToNativeValueUpdates() {\n    var _this = this;\n\n    if (this.__nativeAnimatedValueListener && !this.__shouldUpdateListenersForNewNativeTag) {\n      return;\n    }\n\n    if (this.__shouldUpdateListenersForNewNativeTag) {\n      this.__shouldUpdateListenersForNewNativeTag = false;\n\n      this._stopListeningForNativeValueUpdates();\n    }\n\n    NativeAnimatedAPI.startListeningToAnimatedNodeValue(this.__getNativeTag());\n    this.__nativeAnimatedValueListener = NativeAnimatedHelper.nativeEventEmitter.addListener('onAnimatedValueUpdate', function (data) {\n      if (data.tag !== _this.__getNativeTag()) {\n        return;\n      }\n\n      _this._onAnimatedValueUpdateReceived(data.value);\n    });\n  };\n\n  _proto._onAnimatedValueUpdateReceived = function _onAnimatedValueUpdateReceived(value) {\n    this.__callListeners(value);\n  };\n\n  _proto.__callListeners = function __callListeners(value) {\n    for (var _key in this._listeners) {\n      this._listeners[_key]({\n        value: value\n      });\n    }\n  };\n\n  _proto._stopListeningForNativeValueUpdates = function _stopListeningForNativeValueUpdates() {\n    if (!this.__nativeAnimatedValueListener) {\n      return;\n    }\n\n    this.__nativeAnimatedValueListener.remove();\n\n    this.__nativeAnimatedValueListener = null;\n    NativeAnimatedAPI.stopListeningToAnimatedNodeValue(this.__getNativeTag());\n  };\n\n  _proto.__getNativeTag = function __getNativeTag() {\n    var _this$__nativeTag;\n\n    NativeAnimatedHelper.assertNativeAnimatedModule();\n    invariant(this.__isNative, 'Attempt to get native tag from node not marked as \"native\"');\n    var nativeTag = (_this$__nativeTag = this.__nativeTag) !== null && _this$__nativeTag !== void 0 ? _this$__nativeTag : NativeAnimatedHelper.generateNewNodeTag();\n\n    if (this.__nativeTag == null) {\n      this.__nativeTag = nativeTag;\n      NativeAnimatedHelper.API.createAnimatedNode(nativeTag, this.__getNativeConfig());\n      this.__shouldUpdateListenersForNewNativeTag = true;\n    }\n\n    return nativeTag;\n  };\n\n  _proto.__getNativeConfig = function __getNativeConfig() {\n    throw new Error('This JS animated node type cannot be used as native animated node');\n  };\n\n  _proto.toJSON = function toJSON() {\n    return this.__getValue();\n  };\n\n  return AnimatedNode;\n}();\n\nexport default AnimatedNode;"]},"metadata":{},"sourceType":"module"}