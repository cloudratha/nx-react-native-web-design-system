{"ast":null,"code":"'use strict';\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { AnimatedEvent, attachNativeEvent } from \"./AnimatedEvent\";\nimport AnimatedAddition from \"./nodes/AnimatedAddition\";\nimport AnimatedDiffClamp from \"./nodes/AnimatedDiffClamp\";\nimport AnimatedDivision from \"./nodes/AnimatedDivision\";\nimport AnimatedInterpolation from \"./nodes/AnimatedInterpolation\";\nimport AnimatedModulo from \"./nodes/AnimatedModulo\";\nimport AnimatedMultiplication from \"./nodes/AnimatedMultiplication\";\nimport AnimatedNode from \"./nodes/AnimatedNode\";\nimport AnimatedProps from \"./nodes/AnimatedProps\";\nimport AnimatedSubtraction from \"./nodes/AnimatedSubtraction\";\nimport AnimatedTracking from \"./nodes/AnimatedTracking\";\nimport AnimatedValue from \"./nodes/AnimatedValue\";\nimport AnimatedValueXY from \"./nodes/AnimatedValueXY\";\nimport DecayAnimation from \"./animations/DecayAnimation\";\nimport SpringAnimation from \"./animations/SpringAnimation\";\nimport TimingAnimation from \"./animations/TimingAnimation\";\nimport createAnimatedComponent from \"./createAnimatedComponent\";\n\nvar add = function add(a, b) {\n  return new AnimatedAddition(a, b);\n};\n\nvar subtract = function subtract(a, b) {\n  return new AnimatedSubtraction(a, b);\n};\n\nvar divide = function divide(a, b) {\n  return new AnimatedDivision(a, b);\n};\n\nvar multiply = function multiply(a, b) {\n  return new AnimatedMultiplication(a, b);\n};\n\nvar modulo = function modulo(a, modulus) {\n  return new AnimatedModulo(a, modulus);\n};\n\nvar diffClamp = function diffClamp(a, min, max) {\n  return new AnimatedDiffClamp(a, min, max);\n};\n\nvar _combineCallbacks = function _combineCallbacks(callback, config) {\n  if (callback && config.onComplete) {\n    return function () {\n      config.onComplete && config.onComplete.apply(config, arguments);\n      callback && callback.apply(void 0, arguments);\n    };\n  } else {\n    return callback || config.onComplete;\n  }\n};\n\nvar maybeVectorAnim = function maybeVectorAnim(value, config, anim) {\n  if (value instanceof AnimatedValueXY) {\n    var configX = _objectSpread({}, config);\n\n    var configY = _objectSpread({}, config);\n\n    for (var key in config) {\n      var _config$key = config[key],\n          x = _config$key.x,\n          y = _config$key.y;\n\n      if (x !== undefined && y !== undefined) {\n        configX[key] = x;\n        configY[key] = y;\n      }\n    }\n\n    var aX = anim(value.x, configX);\n    var aY = anim(value.y, configY);\n    return parallel([aX, aY], {\n      stopTogether: false\n    });\n  }\n\n  return null;\n};\n\nvar spring = function spring(value, config) {\n  var _start = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n\n    if (configuration.toValue instanceof AnimatedNode) {\n      singleValue.track(new AnimatedTracking(singleValue, configuration.toValue, SpringAnimation, singleConfig, callback));\n    } else {\n      singleValue.animate(new SpringAnimation(singleConfig), callback);\n    }\n  };\n\n  return maybeVectorAnim(value, config, spring) || {\n    start: function start(callback) {\n      _start(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations: iterations\n      });\n\n      _start(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\n\nvar timing = function timing(value, config) {\n  var _start2 = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n\n    if (configuration.toValue instanceof AnimatedNode) {\n      singleValue.track(new AnimatedTracking(singleValue, configuration.toValue, TimingAnimation, singleConfig, callback));\n    } else {\n      singleValue.animate(new TimingAnimation(singleConfig), callback);\n    }\n  };\n\n  return maybeVectorAnim(value, config, timing) || {\n    start: function start(callback) {\n      _start2(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations: iterations\n      });\n\n      _start2(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\n\nvar decay = function decay(value, config) {\n  var _start3 = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n    singleValue.animate(new DecayAnimation(singleConfig), callback);\n  };\n\n  return maybeVectorAnim(value, config, decay) || {\n    start: function start(callback) {\n      _start3(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations: iterations\n      });\n\n      _start3(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\n\nvar sequence = function sequence(animations) {\n  var current = 0;\n  return {\n    start: function start(callback) {\n      var onComplete = function onComplete(result) {\n        if (!result.finished) {\n          callback && callback(result);\n          return;\n        }\n\n        current++;\n\n        if (current === animations.length) {\n          callback && callback(result);\n          return;\n        }\n\n        animations[current].start(onComplete);\n      };\n\n      if (animations.length === 0) {\n        callback && callback({\n          finished: true\n        });\n      } else {\n        animations[current].start(onComplete);\n      }\n    },\n    stop: function stop() {\n      if (current < animations.length) {\n        animations[current].stop();\n      }\n    },\n    reset: function reset() {\n      animations.forEach(function (animation, idx) {\n        if (idx <= current) {\n          animation.reset();\n        }\n      });\n      current = 0;\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error('Loops run using the native driver cannot contain Animated.sequence animations');\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return false;\n    }\n  };\n};\n\nvar parallel = function parallel(animations, config) {\n  var doneCount = 0;\n  var hasEnded = {};\n  var stopTogether = !(config && config.stopTogether === false);\n  var result = {\n    start: function start(callback) {\n      if (doneCount === animations.length) {\n        callback && callback({\n          finished: true\n        });\n        return;\n      }\n\n      animations.forEach(function (animation, idx) {\n        var cb = function cb(endResult) {\n          hasEnded[idx] = true;\n          doneCount++;\n\n          if (doneCount === animations.length) {\n            doneCount = 0;\n            callback && callback(endResult);\n            return;\n          }\n\n          if (!endResult.finished && stopTogether) {\n            result.stop();\n          }\n        };\n\n        if (!animation) {\n          cb({\n            finished: true\n          });\n        } else {\n          animation.start(cb);\n        }\n      });\n    },\n    stop: function stop() {\n      animations.forEach(function (animation, idx) {\n        !hasEnded[idx] && animation.stop();\n        hasEnded[idx] = true;\n      });\n    },\n    reset: function reset() {\n      animations.forEach(function (animation, idx) {\n        animation.reset();\n        hasEnded[idx] = false;\n        doneCount = 0;\n      });\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error('Loops run using the native driver cannot contain Animated.parallel animations');\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return false;\n    }\n  };\n  return result;\n};\n\nvar delay = function delay(time) {\n  return timing(new AnimatedValue(0), {\n    toValue: 0,\n    delay: time,\n    duration: 0,\n    useNativeDriver: false\n  });\n};\n\nvar stagger = function stagger(time, animations) {\n  return parallel(animations.map(function (animation, i) {\n    return sequence([delay(time * i), animation]);\n  }));\n};\n\nvar loop = function loop(animation, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$iterations = _ref.iterations,\n      iterations = _ref$iterations === void 0 ? -1 : _ref$iterations,\n      _ref$resetBeforeItera = _ref.resetBeforeIteration,\n      resetBeforeIteration = _ref$resetBeforeItera === void 0 ? true : _ref$resetBeforeItera;\n\n  var isFinished = false;\n  var iterationsSoFar = 0;\n  return {\n    start: function start(callback) {\n      var restart = function restart(result) {\n        if (result === void 0) {\n          result = {\n            finished: true\n          };\n        }\n\n        if (isFinished || iterationsSoFar === iterations || result.finished === false) {\n          callback && callback(result);\n        } else {\n          iterationsSoFar++;\n          resetBeforeIteration && animation.reset();\n          animation.start(restart);\n        }\n      };\n\n      if (!animation || iterations === 0) {\n        callback && callback({\n          finished: true\n        });\n      } else {\n        if (animation._isUsingNativeDriver()) {\n          animation._startNativeLoop(iterations);\n        } else {\n          restart();\n        }\n      }\n    },\n    stop: function stop() {\n      isFinished = true;\n      animation.stop();\n    },\n    reset: function reset() {\n      iterationsSoFar = 0;\n      isFinished = false;\n      animation.reset();\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error('Loops run using the native driver cannot contain Animated.loop animations');\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return animation._isUsingNativeDriver();\n    }\n  };\n};\n\nfunction forkEvent(event, listener) {\n  if (!event) {\n    return listener;\n  } else if (event instanceof AnimatedEvent) {\n    event.__addListener(listener);\n\n    return event;\n  } else {\n    return function () {\n      typeof event === 'function' && event.apply(void 0, arguments);\n      listener.apply(void 0, arguments);\n    };\n  }\n}\n\nfunction unforkEvent(event, listener) {\n  if (event && event instanceof AnimatedEvent) {\n    event.__removeListener(listener);\n  }\n}\n\nvar event = function event(argMapping, config) {\n  var animatedEvent = new AnimatedEvent(argMapping, config);\n\n  if (animatedEvent.__isNative) {\n    return animatedEvent;\n  } else {\n    return animatedEvent.__getHandler();\n  }\n};\n\nexport default {\n  Value: AnimatedValue,\n  ValueXY: AnimatedValueXY,\n  Interpolation: AnimatedInterpolation,\n  Node: AnimatedNode,\n  decay: decay,\n  timing: timing,\n  spring: spring,\n  add: add,\n  subtract: subtract,\n  divide: divide,\n  multiply: multiply,\n  modulo: modulo,\n  diffClamp: diffClamp,\n  delay: delay,\n  sequence: sequence,\n  parallel: parallel,\n  stagger: stagger,\n  loop: loop,\n  event: event,\n  createAnimatedComponent: createAnimatedComponent,\n  attachNativeEvent: attachNativeEvent,\n  forkEvent: forkEvent,\n  unforkEvent: unforkEvent,\n  Event: AnimatedEvent,\n  __PropsOnlyForTests: AnimatedProps\n};\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/Users/garethcozens/Documents/repo/cloudratha/react-native-web-nx-demo/node_modules/react-native-web/dist/vendor/react-native/Animated/AnimatedImplementation.js"],"names":["keys","Object","symbols","i","arguments","source","ownKeys","_defineProperty","key","value","enumerable","configurable","writable","obj","add","subtract","divide","multiply","modulo","diffClamp","_combineCallbacks","callback","config","maybeVectorAnim","configX","_objectSpread","configY","_config$key","x","y","aX","anim","aY","parallel","stopTogether","spring","_start","singleValue","singleConfig","configuration","start","stop","reset","_startNativeLoop","iterations","_isUsingNativeDriver","timing","_start2","decay","_start3","sequence","current","onComplete","result","animations","finished","idx","animation","doneCount","hasEnded","cb","endResult","delay","toValue","duration","useNativeDriver","stagger","time","loop","_ref","_temp","_ref$iterations","_ref$resetBeforeItera","resetBeforeIteration","isFinished","iterationsSoFar","restart","event","listener","animatedEvent","Value","ValueXY","Interpolation","Node","createAnimatedComponent","attachNativeEvent","forkEvent","unforkEvent","Event","__PropsOnlyForTests"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { AnimatedEvent, attachNativeEvent } from './AnimatedEvent';\nimport AnimatedAddition from './nodes/AnimatedAddition';\nimport AnimatedDiffClamp from './nodes/AnimatedDiffClamp';\nimport AnimatedDivision from './nodes/AnimatedDivision';\nimport AnimatedInterpolation from './nodes/AnimatedInterpolation';\nimport AnimatedModulo from './nodes/AnimatedModulo';\nimport AnimatedMultiplication from './nodes/AnimatedMultiplication';\nimport AnimatedNode from './nodes/AnimatedNode';\nimport AnimatedProps from './nodes/AnimatedProps';\nimport AnimatedSubtraction from './nodes/AnimatedSubtraction';\nimport AnimatedTracking from './nodes/AnimatedTracking';\nimport AnimatedValue from './nodes/AnimatedValue';\nimport AnimatedValueXY from './nodes/AnimatedValueXY';\nimport DecayAnimation from './animations/DecayAnimation';\nimport SpringAnimation from './animations/SpringAnimation';\nimport TimingAnimation from './animations/TimingAnimation';\nimport createAnimatedComponent from './createAnimatedComponent';\n\nvar add = function add(a, b) {\n  return new AnimatedAddition(a, b);\n};\n\nvar subtract = function subtract(a, b) {\n  return new AnimatedSubtraction(a, b);\n};\n\nvar divide = function divide(a, b) {\n  return new AnimatedDivision(a, b);\n};\n\nvar multiply = function multiply(a, b) {\n  return new AnimatedMultiplication(a, b);\n};\n\nvar modulo = function modulo(a, modulus) {\n  return new AnimatedModulo(a, modulus);\n};\n\nvar diffClamp = function diffClamp(a, min, max) {\n  return new AnimatedDiffClamp(a, min, max);\n};\n\nvar _combineCallbacks = function _combineCallbacks(callback, config) {\n  if (callback && config.onComplete) {\n    return function () {\n      config.onComplete && config.onComplete.apply(config, arguments);\n      callback && callback.apply(void 0, arguments);\n    };\n  } else {\n    return callback || config.onComplete;\n  }\n};\n\nvar maybeVectorAnim = function maybeVectorAnim(value, config, anim) {\n  if (value instanceof AnimatedValueXY) {\n    var configX = _objectSpread({}, config);\n\n    var configY = _objectSpread({}, config);\n\n    for (var key in config) {\n      var _config$key = config[key],\n          x = _config$key.x,\n          y = _config$key.y;\n\n      if (x !== undefined && y !== undefined) {\n        configX[key] = x;\n        configY[key] = y;\n      }\n    }\n\n    var aX = anim(value.x, configX);\n    var aY = anim(value.y, configY); // We use `stopTogether: false` here because otherwise tracking will break\n    // because the second animation will get stopped before it can update.\n\n    return parallel([aX, aY], {\n      stopTogether: false\n    });\n  }\n\n  return null;\n};\n\nvar spring = function spring(value, config) {\n  var _start = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n\n    if (configuration.toValue instanceof AnimatedNode) {\n      singleValue.track(new AnimatedTracking(singleValue, configuration.toValue, SpringAnimation, singleConfig, callback));\n    } else {\n      singleValue.animate(new SpringAnimation(singleConfig), callback);\n    }\n  };\n\n  return maybeVectorAnim(value, config, spring) || {\n    start: function start(callback) {\n      _start(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations: iterations\n      });\n\n      _start(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\n\nvar timing = function timing(value, config) {\n  var _start2 = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n\n    if (configuration.toValue instanceof AnimatedNode) {\n      singleValue.track(new AnimatedTracking(singleValue, configuration.toValue, TimingAnimation, singleConfig, callback));\n    } else {\n      singleValue.animate(new TimingAnimation(singleConfig), callback);\n    }\n  };\n\n  return maybeVectorAnim(value, config, timing) || {\n    start: function start(callback) {\n      _start2(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations: iterations\n      });\n\n      _start2(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\n\nvar decay = function decay(value, config) {\n  var _start3 = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n    singleValue.animate(new DecayAnimation(singleConfig), callback);\n  };\n\n  return maybeVectorAnim(value, config, decay) || {\n    start: function start(callback) {\n      _start3(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations: iterations\n      });\n\n      _start3(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\n\nvar sequence = function sequence(animations) {\n  var current = 0;\n  return {\n    start: function start(callback) {\n      var onComplete = function onComplete(result) {\n        if (!result.finished) {\n          callback && callback(result);\n          return;\n        }\n\n        current++;\n\n        if (current === animations.length) {\n          callback && callback(result);\n          return;\n        }\n\n        animations[current].start(onComplete);\n      };\n\n      if (animations.length === 0) {\n        callback && callback({\n          finished: true\n        });\n      } else {\n        animations[current].start(onComplete);\n      }\n    },\n    stop: function stop() {\n      if (current < animations.length) {\n        animations[current].stop();\n      }\n    },\n    reset: function reset() {\n      animations.forEach(function (animation, idx) {\n        if (idx <= current) {\n          animation.reset();\n        }\n      });\n      current = 0;\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error('Loops run using the native driver cannot contain Animated.sequence animations');\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return false;\n    }\n  };\n};\n\nvar parallel = function parallel(animations, config) {\n  var doneCount = 0; // Make sure we only call stop() at most once for each animation\n\n  var hasEnded = {};\n  var stopTogether = !(config && config.stopTogether === false);\n  var result = {\n    start: function start(callback) {\n      if (doneCount === animations.length) {\n        callback && callback({\n          finished: true\n        });\n        return;\n      }\n\n      animations.forEach(function (animation, idx) {\n        var cb = function cb(endResult) {\n          hasEnded[idx] = true;\n          doneCount++;\n\n          if (doneCount === animations.length) {\n            doneCount = 0;\n            callback && callback(endResult);\n            return;\n          }\n\n          if (!endResult.finished && stopTogether) {\n            result.stop();\n          }\n        };\n\n        if (!animation) {\n          cb({\n            finished: true\n          });\n        } else {\n          animation.start(cb);\n        }\n      });\n    },\n    stop: function stop() {\n      animations.forEach(function (animation, idx) {\n        !hasEnded[idx] && animation.stop();\n        hasEnded[idx] = true;\n      });\n    },\n    reset: function reset() {\n      animations.forEach(function (animation, idx) {\n        animation.reset();\n        hasEnded[idx] = false;\n        doneCount = 0;\n      });\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error('Loops run using the native driver cannot contain Animated.parallel animations');\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return false;\n    }\n  };\n  return result;\n};\n\nvar delay = function delay(time) {\n  // Would be nice to make a specialized implementation\n  return timing(new AnimatedValue(0), {\n    toValue: 0,\n    delay: time,\n    duration: 0,\n    useNativeDriver: false\n  });\n};\n\nvar stagger = function stagger(time, animations) {\n  return parallel(animations.map(function (animation, i) {\n    return sequence([delay(time * i), animation]);\n  }));\n};\n\nvar loop = function loop(animation, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$iterations = _ref.iterations,\n      iterations = _ref$iterations === void 0 ? -1 : _ref$iterations,\n      _ref$resetBeforeItera = _ref.resetBeforeIteration,\n      resetBeforeIteration = _ref$resetBeforeItera === void 0 ? true : _ref$resetBeforeItera;\n\n  var isFinished = false;\n  var iterationsSoFar = 0;\n  return {\n    start: function start(callback) {\n      var restart = function restart(result) {\n        if (result === void 0) {\n          result = {\n            finished: true\n          };\n        }\n\n        if (isFinished || iterationsSoFar === iterations || result.finished === false) {\n          callback && callback(result);\n        } else {\n          iterationsSoFar++;\n          resetBeforeIteration && animation.reset();\n          animation.start(restart);\n        }\n      };\n\n      if (!animation || iterations === 0) {\n        callback && callback({\n          finished: true\n        });\n      } else {\n        if (animation._isUsingNativeDriver()) {\n          animation._startNativeLoop(iterations);\n        } else {\n          restart(); // Start looping recursively on the js thread\n        }\n      }\n    },\n    stop: function stop() {\n      isFinished = true;\n      animation.stop();\n    },\n    reset: function reset() {\n      iterationsSoFar = 0;\n      isFinished = false;\n      animation.reset();\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error('Loops run using the native driver cannot contain Animated.loop animations');\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return animation._isUsingNativeDriver();\n    }\n  };\n};\n\nfunction forkEvent(event, listener) {\n  if (!event) {\n    return listener;\n  } else if (event instanceof AnimatedEvent) {\n    event.__addListener(listener);\n\n    return event;\n  } else {\n    return function () {\n      typeof event === 'function' && event.apply(void 0, arguments);\n      listener.apply(void 0, arguments);\n    };\n  }\n}\n\nfunction unforkEvent(event, listener) {\n  if (event && event instanceof AnimatedEvent) {\n    event.__removeListener(listener);\n  }\n}\n\nvar event = function event(argMapping, config) {\n  var animatedEvent = new AnimatedEvent(argMapping, config);\n\n  if (animatedEvent.__isNative) {\n    return animatedEvent;\n  } else {\n    return animatedEvent.__getHandler();\n  }\n};\n/**\n * The `Animated` library is designed to make animations fluid, powerful, and\n * easy to build and maintain. `Animated` focuses on declarative relationships\n * between inputs and outputs, with configurable transforms in between, and\n * simple `start`/`stop` methods to control time-based animation execution.\n * If additional transforms are added, be sure to include them in\n * AnimatedMock.js as well.\n *\n * See https://reactnative.dev/docs/animated.html\n */\n\n\nexport default {\n  /**\n   * Standard value class for driving animations.  Typically initialized with\n   * `new Animated.Value(0);`\n   *\n   * See https://reactnative.dev/docs/animated.html#value\n   */\n  Value: AnimatedValue,\n\n  /**\n   * 2D value class for driving 2D animations, such as pan gestures.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html\n   */\n  ValueXY: AnimatedValueXY,\n\n  /**\n   * Exported to use the Interpolation type in flow.\n   *\n   * See https://reactnative.dev/docs/animated.html#interpolation\n   */\n  Interpolation: AnimatedInterpolation,\n\n  /**\n   * Exported for ease of type checking. All animated values derive from this\n   * class.\n   *\n   * See https://reactnative.dev/docs/animated.html#node\n   */\n  Node: AnimatedNode,\n\n  /**\n   * Animates a value from an initial velocity to zero based on a decay\n   * coefficient.\n   *\n   * See https://reactnative.dev/docs/animated.html#decay\n   */\n  decay: decay,\n\n  /**\n   * Animates a value along a timed easing curve. The Easing module has tons of\n   * predefined curves, or you can use your own function.\n   *\n   * See https://reactnative.dev/docs/animated.html#timing\n   */\n  timing: timing,\n\n  /**\n   * Animates a value according to an analytical spring model based on\n   * damped harmonic oscillation.\n   *\n   * See https://reactnative.dev/docs/animated.html#spring\n   */\n  spring: spring,\n\n  /**\n   * Creates a new Animated value composed from two Animated values added\n   * together.\n   *\n   * See https://reactnative.dev/docs/animated.html#add\n   */\n  add: add,\n\n  /**\n   * Creates a new Animated value composed by subtracting the second Animated\n   * value from the first Animated value.\n   *\n   * See https://reactnative.dev/docs/animated.html#subtract\n   */\n  subtract: subtract,\n\n  /**\n   * Creates a new Animated value composed by dividing the first Animated value\n   * by the second Animated value.\n   *\n   * See https://reactnative.dev/docs/animated.html#divide\n   */\n  divide: divide,\n\n  /**\n   * Creates a new Animated value composed from two Animated values multiplied\n   * together.\n   *\n   * See https://reactnative.dev/docs/animated.html#multiply\n   */\n  multiply: multiply,\n\n  /**\n   * Creates a new Animated value that is the (non-negative) modulo of the\n   * provided Animated value.\n   *\n   * See https://reactnative.dev/docs/animated.html#modulo\n   */\n  modulo: modulo,\n\n  /**\n   * Create a new Animated value that is limited between 2 values. It uses the\n   * difference between the last value so even if the value is far from the\n   * bounds it will start changing when the value starts getting closer again.\n   *\n   * See https://reactnative.dev/docs/animated.html#diffclamp\n   */\n  diffClamp: diffClamp,\n\n  /**\n   * Starts an animation after the given delay.\n   *\n   * See https://reactnative.dev/docs/animated.html#delay\n   */\n  delay: delay,\n\n  /**\n   * Starts an array of animations in order, waiting for each to complete\n   * before starting the next. If the current running animation is stopped, no\n   * following animations will be started.\n   *\n   * See https://reactnative.dev/docs/animated.html#sequence\n   */\n  sequence: sequence,\n\n  /**\n   * Starts an array of animations all at the same time. By default, if one\n   * of the animations is stopped, they will all be stopped. You can override\n   * this with the `stopTogether` flag.\n   *\n   * See https://reactnative.dev/docs/animated.html#parallel\n   */\n  parallel: parallel,\n\n  /**\n   * Array of animations may run in parallel (overlap), but are started in\n   * sequence with successive delays.  Nice for doing trailing effects.\n   *\n   * See https://reactnative.dev/docs/animated.html#stagger\n   */\n  stagger: stagger,\n\n  /**\n   * Loops a given animation continuously, so that each time it reaches the\n   * end, it resets and begins again from the start.\n   *\n   * See https://reactnative.dev/docs/animated.html#loop\n   */\n  loop: loop,\n\n  /**\n   * Takes an array of mappings and extracts values from each arg accordingly,\n   * then calls `setValue` on the mapped outputs.\n   *\n   * See https://reactnative.dev/docs/animated.html#event\n   */\n  event: event,\n\n  /**\n   * Make any React component Animatable.  Used to create `Animated.View`, etc.\n   *\n   * See https://reactnative.dev/docs/animated.html#createanimatedcomponent\n   */\n  createAnimatedComponent: createAnimatedComponent,\n\n  /**\n   * Imperative API to attach an animated value to an event on a view. Prefer\n   * using `Animated.event` with `useNativeDrive: true` if possible.\n   *\n   * See https://reactnative.dev/docs/animated.html#attachnativeevent\n   */\n  attachNativeEvent: attachNativeEvent,\n\n  /**\n   * Advanced imperative API for snooping on animated events that are passed in\n   * through props. Use values directly where possible.\n   *\n   * See https://reactnative.dev/docs/animated.html#forkevent\n   */\n  forkEvent: forkEvent,\n  unforkEvent: unforkEvent,\n\n  /**\n   * Expose Event class, so it can be used as a type for type checkers.\n   */\n  Event: AnimatedEvent,\n  __PropsOnlyForTests: AnimatedProps\n};"]},"metadata":{},"sourceType":"module"}