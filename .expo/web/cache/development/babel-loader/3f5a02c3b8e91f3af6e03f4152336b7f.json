{"ast":null,"code":"import { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport Dimensions from \"../Dimensions\";\nvar DeviceInfo = {\n  Dimensions: {\n    get windowPhysicalPixels() {\n      var _Dimensions$get = Dimensions.get('window'),\n          width = _Dimensions$get.width,\n          height = _Dimensions$get.height,\n          fontScale = _Dimensions$get.fontScale,\n          scale = _Dimensions$get.scale;\n\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale: scale,\n        fontScale: fontScale\n      };\n    },\n\n    get screenPhysicalPixels() {\n      var _Dimensions$get2 = Dimensions.get('screen'),\n          width = _Dimensions$get2.width,\n          height = _Dimensions$get2.height,\n          fontScale = _Dimensions$get2.fontScale,\n          scale = _Dimensions$get2.scale;\n\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale: scale,\n        fontScale: fontScale\n      };\n    }\n\n  },\n\n  get locale() {\n    if (canUseDOM) {\n      if (navigator.languages) {\n        return navigator.languages[0];\n      } else {\n        return navigator.language;\n      }\n    }\n  },\n\n  get totalMemory() {\n    return canUseDOM ? navigator.deviceMemory : undefined;\n  },\n\n  get userAgent() {\n    return canUseDOM ? navigator.userAgent : '';\n  }\n\n};\nexport default DeviceInfo;\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/Users/garethcozens/Documents/repo/cloudratha/react-native-web-nx-demo/node_modules/react-native-web/dist/exports/DeviceInfo/index.js"],"names":["DeviceInfo","Dimensions","_Dimensions$get","width","height","fontScale","scale","_Dimensions$get2","navigator","canUseDOM"],"mappings":"AAQA,SAAA,SAAA,QAAA,+BAAA;AACA,OAAA,UAAA;AACA,IAAIA,UAAU,GAAG;AACfC,EAAAA,UAAU,EAAE;AACV,QAAA,oBAAA,GAA2B;AACzB,UAAIC,eAAe,GAAGD,UAAU,CAAVA,GAAAA,CAAtB,QAAsBA,CAAtB;AAAA,UACIE,KAAK,GAAGD,eAAe,CAD3B,KAAA;AAAA,UAEIE,MAAM,GAAGF,eAAe,CAF5B,MAAA;AAAA,UAGIG,SAAS,GAAGH,eAAe,CAH/B,SAAA;AAAA,UAIII,KAAK,GAAGJ,eAAe,CAJ3B,KAAA;;AAMA,aAAO;AACLC,QAAAA,KAAK,EAAEA,KAAK,GADP,KAAA;AAELC,QAAAA,MAAM,EAAEA,MAAM,GAFT,KAAA;AAGLE,QAAAA,KAAK,EAHA,KAAA;AAILD,QAAAA,SAAS,EAJX;AAAO,OAAP;AARQ,KAAA;;AAgBV,QAAA,oBAAA,GAA2B;AACzB,UAAIE,gBAAgB,GAAGN,UAAU,CAAVA,GAAAA,CAAvB,QAAuBA,CAAvB;AAAA,UACIE,KAAK,GAAGI,gBAAgB,CAD5B,KAAA;AAAA,UAEIH,MAAM,GAAGG,gBAAgB,CAF7B,MAAA;AAAA,UAGIF,SAAS,GAAGE,gBAAgB,CAHhC,SAAA;AAAA,UAIID,KAAK,GAAGC,gBAAgB,CAJ5B,KAAA;;AAMA,aAAO;AACLJ,QAAAA,KAAK,EAAEA,KAAK,GADP,KAAA;AAELC,QAAAA,MAAM,EAAEA,MAAM,GAFT,KAAA;AAGLE,QAAAA,KAAK,EAHA,KAAA;AAILD,QAAAA,SAAS,EAJX;AAAO,OAAP;AAxBW;;AACH,GADG;;AAkCf,MAAA,MAAA,GAAa;AACX,QAAA,SAAA,EAAe;AACb,UAAIG,SAAS,CAAb,SAAA,EAAyB;AACvB,eAAOA,SAAS,CAATA,SAAAA,CAAP,CAAOA,CAAP;AADF,OAAA,MAEO;AACL,eAAOA,SAAS,CAAhB,QAAA;AAEH;AACF;AA1Cc,GAAA;;AA4Cf,MAAA,WAAA,GAAkB;AAEhB,WAAOC,SAAS,GAAGD,SAAS,CAAZ,YAAA,GAAhB,SAAA;AA9Ca,GAAA;;AAiDf,MAAA,SAAA,GAAgB;AACd,WAAOC,SAAS,GAAGD,SAAS,CAAZ,SAAA,GAAhB,EAAA;AAlDJ;;AAAiB,CAAjB;AAsDA,eAAA,UAAA","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport Dimensions from '../Dimensions';\nvar DeviceInfo = {\n  Dimensions: {\n    get windowPhysicalPixels() {\n      var _Dimensions$get = Dimensions.get('window'),\n          width = _Dimensions$get.width,\n          height = _Dimensions$get.height,\n          fontScale = _Dimensions$get.fontScale,\n          scale = _Dimensions$get.scale;\n\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale: scale,\n        fontScale: fontScale\n      };\n    },\n\n    get screenPhysicalPixels() {\n      var _Dimensions$get2 = Dimensions.get('screen'),\n          width = _Dimensions$get2.width,\n          height = _Dimensions$get2.height,\n          fontScale = _Dimensions$get2.fontScale,\n          scale = _Dimensions$get2.scale;\n\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale: scale,\n        fontScale: fontScale\n      };\n    }\n\n  },\n\n  get locale() {\n    if (canUseDOM) {\n      if (navigator.languages) {\n        return navigator.languages[0];\n      } else {\n        return navigator.language;\n      }\n    }\n  },\n\n  get totalMemory() {\n    // $FlowIssue deviceMemory not defined in navigator\n    return canUseDOM ? navigator.deviceMemory : undefined;\n  },\n\n  get userAgent() {\n    return canUseDOM ? navigator.userAgent : '';\n  }\n\n};\nexport default DeviceInfo;"]},"metadata":{},"sourceType":"module"}