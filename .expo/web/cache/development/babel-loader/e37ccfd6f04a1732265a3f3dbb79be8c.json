{"ast":null,"code":"import ExecutionEnvironment from 'fbjs/lib/ExecutionEnvironment';\nvar doLeftAndRightSwapInRTL = true;\nvar isPreferredLanguageRTL = false;\nvar isRTLAllowed = true;\nvar isRTLForced = false;\n\nvar isRTL = function isRTL() {\n  if (isRTLForced) {\n    return true;\n  }\n\n  return isRTLAllowed && isPreferredLanguageRTL;\n};\n\nvar onDirectionChange = function onDirectionChange() {\n  if (ExecutionEnvironment.canUseDOM) {\n    if (document.documentElement && document.documentElement.setAttribute) {\n      document.documentElement.setAttribute('dir', isRTL() ? 'rtl' : 'ltr');\n    }\n  }\n};\n\nvar I18nManager = {\n  allowRTL: function allowRTL(bool) {\n    isRTLAllowed = bool;\n    onDirectionChange();\n  },\n  forceRTL: function forceRTL(bool) {\n    isRTLForced = bool;\n    onDirectionChange();\n  },\n  getConstants: function getConstants() {\n    return {\n      doLeftAndRightSwapInRTL: doLeftAndRightSwapInRTL,\n      isRTL: isRTL()\n    };\n  },\n  setPreferredLanguageRTL: function setPreferredLanguageRTL(bool) {\n    isPreferredLanguageRTL = bool;\n    onDirectionChange();\n  },\n  swapLeftAndRightInRTL: function swapLeftAndRightInRTL(bool) {\n    doLeftAndRightSwapInRTL = bool;\n  }\n};\nexport default I18nManager;\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/Users/garethcozens/Documents/repo/cloudratha/react-native-web-nx-demo/node_modules/react-native-web/dist/exports/I18nManager/index.js"],"names":["doLeftAndRightSwapInRTL","isPreferredLanguageRTL","isRTLAllowed","isRTLForced","isRTL","onDirectionChange","ExecutionEnvironment","document","I18nManager","allowRTL","forceRTL","getConstants","setPreferredLanguageRTL","swapLeftAndRightInRTL"],"mappings":"AASA,OAAA,oBAAA,MAAA,+BAAA;AACA,IAAIA,uBAAuB,GAA3B,IAAA;AACA,IAAIC,sBAAsB,GAA1B,KAAA;AACA,IAAIC,YAAY,GAAhB,IAAA;AACA,IAAIC,WAAW,GAAf,KAAA;;AAEA,IAAIC,KAAK,GAAG,SAAA,KAAA,GAAiB;AAC3B,MAAA,WAAA,EAAiB;AACf,WAAA,IAAA;AAGF;;AAAA,SAAOF,YAAY,IAAnB,sBAAA;AALF,CAAA;;AAQA,IAAIG,iBAAiB,GAAG,SAAA,iBAAA,GAA6B;AACnD,MAAIC,oBAAoB,CAAxB,SAAA,EAAoC;AAClC,QAAIC,QAAQ,CAARA,eAAAA,IAA4BA,QAAQ,CAARA,eAAAA,CAAhC,YAAA,EAAuE;AACrEA,MAAAA,QAAQ,CAARA,eAAAA,CAAAA,YAAAA,CAAAA,KAAAA,EAA6CH,KAAK,KAAA,KAAA,GAAlDG,KAAAA;AAEH;AACF;AAND,CAAA;;AAQA,IAAIC,WAAW,GAAG;AAChBC,EAAAA,QAAQ,EAAE,SAAA,QAAA,CAAA,IAAA,EAAwB;AAChCP,IAAAA,YAAY,GAAZA,IAAAA;AACAG,IAAAA,iBAAiB;AAHH,GAAA;AAKhBK,EAAAA,QAAQ,EAAE,SAAA,QAAA,CAAA,IAAA,EAAwB;AAChCP,IAAAA,WAAW,GAAXA,IAAAA;AACAE,IAAAA,iBAAiB;AAPH,GAAA;AAShBM,EAAAA,YAAY,EAAE,SAAA,YAAA,GAAwB;AACpC,WAAO;AACLX,MAAAA,uBAAuB,EADlB,uBAAA;AAELI,MAAAA,KAAK,EAAEA,KAFT;AAAO,KAAP;AAVc,GAAA;AAehBQ,EAAAA,uBAAuB,EAAE,SAAA,uBAAA,CAAA,IAAA,EAAuC;AAC9DX,IAAAA,sBAAsB,GAAtBA,IAAAA;AACAI,IAAAA,iBAAiB;AAjBH,GAAA;AAmBhBQ,EAAAA,qBAAqB,EAAE,SAAA,qBAAA,CAAA,IAAA,EAAqC;AAC1Db,IAAAA,uBAAuB,GAAvBA,IAAAA;AApBJ;AAAkB,CAAlB;AAuBA,eAAA,WAAA","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport ExecutionEnvironment from 'fbjs/lib/ExecutionEnvironment';\nvar doLeftAndRightSwapInRTL = true;\nvar isPreferredLanguageRTL = false;\nvar isRTLAllowed = true;\nvar isRTLForced = false;\n\nvar isRTL = function isRTL() {\n  if (isRTLForced) {\n    return true;\n  }\n\n  return isRTLAllowed && isPreferredLanguageRTL;\n};\n\nvar onDirectionChange = function onDirectionChange() {\n  if (ExecutionEnvironment.canUseDOM) {\n    if (document.documentElement && document.documentElement.setAttribute) {\n      document.documentElement.setAttribute('dir', isRTL() ? 'rtl' : 'ltr');\n    }\n  }\n};\n\nvar I18nManager = {\n  allowRTL: function allowRTL(bool) {\n    isRTLAllowed = bool;\n    onDirectionChange();\n  },\n  forceRTL: function forceRTL(bool) {\n    isRTLForced = bool;\n    onDirectionChange();\n  },\n  getConstants: function getConstants() {\n    return {\n      doLeftAndRightSwapInRTL: doLeftAndRightSwapInRTL,\n      isRTL: isRTL()\n    };\n  },\n  setPreferredLanguageRTL: function setPreferredLanguageRTL(bool) {\n    isPreferredLanguageRTL = bool;\n    onDirectionChange();\n  },\n  swapLeftAndRightInRTL: function swapLeftAndRightInRTL(bool) {\n    doLeftAndRightSwapInRTL = bool;\n  }\n};\nexport default I18nManager;"]},"metadata":{},"sourceType":"module"}