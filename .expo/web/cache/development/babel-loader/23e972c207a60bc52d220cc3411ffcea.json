{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.usePropsWithComponentTheme = usePropsWithComponentTheme;\n\nvar _usePropsResolution = require(\"./usePropsResolution\");\n\nfunction usePropsWithComponentTheme(localTheme, propsReceived) {\n  return (0, _usePropsResolution.usePropsResolutionWithComponentTheme)(localTheme, propsReceived);\n}\n\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/Users/garethcozens/Documents/repo/cloudratha/react-native-web-nx-demo/node_modules/native-base/lib/commonjs/hooks/useThemeProps/usePropsWithComponentTheme.js"],"names":["Object","value","exports","_usePropsResolution","require"],"mappings":"AAAAA,MAAM,CAANA,cAAAA,CAAAA,OAAAA,EAAAA,YAAAA,EAA2C;AAACC,EAAAA,KAAK,EAAjDD;AAA2C,CAA3CA;AAAyDE,OAAO,CAAPA,0BAAAA,GAAAA,0BAAAA;;AAA8D,IAAIC,mBAAmB,GAACC,OAAxB,wBAAA;;AAAwD,SAAA,0BAAA,CAAA,UAAA,EAAA,aAAA,EAA6D;AAAC,SAAM,CAAC,GAAED,mBAAmB,CAAtB,oCAAA,EAAA,UAAA,EAAN,aAAM,CAAN;AAA8F","sourcesContent":["Object.defineProperty(exports,\"__esModule\",{value:true});exports.usePropsWithComponentTheme=usePropsWithComponentTheme;var _usePropsResolution=require(\"./usePropsResolution\");function usePropsWithComponentTheme(localTheme,propsReceived){return(0,_usePropsResolution.usePropsResolutionWithComponentTheme)(localTheme,propsReceived);}\n//# sourceMappingURL=usePropsWithComponentTheme.js.map"]},"metadata":{},"sourceType":"script"}