{"ast":null,"code":"function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nimport invariant from 'fbjs/lib/invariant';\n\nvar Share = function () {\n  function Share() {}\n\n  Share.share = function share(content, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    invariant(typeof content === 'object' && content !== null, 'Content to share must be a valid object');\n    invariant(typeof content.url === 'string' || typeof content.message === 'string', 'At least one of URL and message is required');\n    invariant(typeof options === 'object' && options !== null, 'Options must be a valid object');\n    invariant(!content.title || typeof content.title === 'string', 'Invalid title: title should be a string.');\n\n    if (window.navigator.share !== undefined) {\n      return window.navigator.share({\n        title: content.title,\n        text: content.message,\n        url: content.url\n      });\n    } else {\n      return Promise.reject(new Error('Share is not supported in this browser'));\n    }\n  };\n\n  _createClass(Share, null, [{\n    key: \"sharedAction\",\n    get: function get() {\n      return 'sharedAction';\n    }\n  }, {\n    key: \"dismissedAction\",\n    get: function get() {\n      return 'dismissedAction';\n    }\n  }]);\n\n  return Share;\n}();\n\nexport default Share;","map":{"version":3,"sources":["/Users/garethcozens/Documents/repo/cloudratha/react-native-web-nx-demo/node_modules/react-native-web/dist/exports/Share/index.js"],"names":["i","props","descriptor","Object","_defineProperties","Constructor","Share","options","invariant","content","window","title","text","url","Promise","_createClass","key","get"],"mappings":"AAAA,SAAA,iBAAA,CAAA,MAAA,EAAA,KAAA,EAA0C;AAAE,OAAK,IAAIA,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGC,KAAK,CAAzB,MAAA,EAAkCD,CAAlC,EAAA,EAAuC;AAAE,QAAIE,UAAU,GAAGD,KAAK,CAAtB,CAAsB,CAAtB;AAA2BC,IAAAA,UAAU,CAAVA,UAAAA,GAAwBA,UAAU,CAAVA,UAAAA,IAAxBA,KAAAA;AAAwDA,IAAAA,UAAU,CAAVA,YAAAA,GAAAA,IAAAA;AAAgC,QAAI,WAAJ,UAAA,EAA2BA,UAAU,CAAVA,QAAAA,GAAAA,IAAAA;AAA4BC,IAAAA,MAAM,CAANA,cAAAA,CAAAA,MAAAA,EAA8BD,UAAU,CAAxCC,GAAAA,EAAAA,UAAAA;AAA8D;AAE7T;;AAAA,SAAA,YAAA,CAAA,WAAA,EAAA,UAAA,EAAA,WAAA,EAA4D;AAAE,MAAA,UAAA,EAAgBC,iBAAiB,CAACC,WAAW,CAAZ,SAAA,EAAjBD,UAAiB,CAAjBA;AAAsD,MAAA,WAAA,EAAiBA,iBAAiB,CAAA,WAAA,EAAjBA,WAAiB,CAAjBA;AAA6C,SAAA,WAAA;AAWlM;;AAAA,OAAA,SAAA,MAAA,oBAAA;;AAEA,IAAIE,KAAK,GAAgB,YAAY;AACnC,WAAA,KAAA,GAAiB,CAEjBA;;AAAAA,EAAAA,KAAK,CAALA,KAAAA,GAAc,SAAA,KAAA,CAAA,OAAA,EAAA,OAAA,EAAiC;AAC7C,QAAIC,OAAO,KAAK,KAAhB,CAAA,EAAwB;AACtBA,MAAAA,OAAO,GAAPA,EAAAA;AAGFC;;AAAAA,IAAAA,SAAS,CAAC,OAAA,OAAA,KAAA,QAAA,IAA+BC,OAAO,KAAvC,IAAA,EAATD,yCAAS,CAATA;AACAA,IAAAA,SAAS,CAAC,OAAOC,OAAO,CAAd,GAAA,KAAA,QAAA,IAAmC,OAAOA,OAAO,CAAd,OAAA,KAApC,QAAA,EAATD,6CAAS,CAATA;AACAA,IAAAA,SAAS,CAAC,OAAA,OAAA,KAAA,QAAA,IAA+BD,OAAO,KAAvC,IAAA,EAATC,gCAAS,CAATA;AACAA,IAAAA,SAAS,CAAC,CAACC,OAAO,CAAR,KAAA,IAAkB,OAAOA,OAAO,CAAd,KAAA,KAAnB,QAAA,EAATD,0CAAS,CAATA;;AAEA,QAAIE,MAAM,CAANA,SAAAA,CAAAA,KAAAA,KAAJ,SAAA,EAA0C;AACxC,aAAOA,MAAM,CAANA,SAAAA,CAAAA,KAAAA,CAAuB;AAC5BC,QAAAA,KAAK,EAAEF,OAAO,CADc,KAAA;AAE5BG,QAAAA,IAAI,EAAEH,OAAO,CAFe,OAAA;AAG5BI,QAAAA,GAAG,EAAEJ,OAAO,CAHd;AAA8B,OAAvBC,CAAP;AADF,KAAA,MAMO;AACL,aAAOI,OAAO,CAAPA,MAAAA,CAAe,IAAA,KAAA,CAAtB,wCAAsB,CAAfA,CAAP;AAEH;AAnBDR,GAAAA;;AAyBAS,EAAAA,YAAY,CAAA,KAAA,EAAA,IAAA,EAAc,CAAC;AACzBC,IAAAA,GAAG,EADsB,cAAA;AAEzBC,IAAAA,GAAG,EAAE,SAAA,GAAA,GAAe;AAClB,aAAA,cAAA;AAHsB;AAAC,GAAD,EAUvB;AACDD,IAAAA,GAAG,EADF,iBAAA;AAEDC,IAAAA,GAAG,EAAE,SAAA,GAAA,GAAe;AAClB,aAAA,iBAAA;AAbJF;AAUG,GAVuB,CAAd,CAAZA;;AAiBA,SAAA,KAAA;AA7CF,CAAyB,EAAzB;;AAgDA,eAAA,KAAA","sourcesContent":["function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport invariant from 'fbjs/lib/invariant';\n\nvar Share = /*#__PURE__*/function () {\n  function Share() {}\n\n  Share.share = function share(content, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    invariant(typeof content === 'object' && content !== null, 'Content to share must be a valid object');\n    invariant(typeof content.url === 'string' || typeof content.message === 'string', 'At least one of URL and message is required');\n    invariant(typeof options === 'object' && options !== null, 'Options must be a valid object');\n    invariant(!content.title || typeof content.title === 'string', 'Invalid title: title should be a string.');\n\n    if (window.navigator.share !== undefined) {\n      return window.navigator.share({\n        title: content.title,\n        text: content.message,\n        url: content.url\n      });\n    } else {\n      return Promise.reject(new Error('Share is not supported in this browser'));\n    }\n  }\n  /**\n   * The content was successfully shared.\n   */\n  ;\n\n  _createClass(Share, null, [{\n    key: \"sharedAction\",\n    get: function get() {\n      return 'sharedAction';\n    }\n    /**\n     * The dialog has been dismissed.\n     * @platform ios\n     */\n\n  }, {\n    key: \"dismissedAction\",\n    get: function get() {\n      return 'dismissedAction';\n    }\n  }]);\n\n  return Share;\n}();\n\nexport default Share;"]},"metadata":{},"sourceType":"module"}