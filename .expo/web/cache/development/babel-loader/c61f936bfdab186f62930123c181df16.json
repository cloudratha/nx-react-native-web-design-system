{"ast":null,"code":"import { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport invariant from 'fbjs/lib/invariant';\nvar dimensions = {\n  window: {\n    fontScale: 1,\n    height: 0,\n    scale: 1,\n    width: 0\n  },\n  screen: {\n    fontScale: 1,\n    height: 0,\n    scale: 1,\n    width: 0\n  }\n};\nvar listeners = {};\n\nvar Dimensions = function () {\n  function Dimensions() {}\n\n  Dimensions.get = function get(dimension) {\n    invariant(dimensions[dimension], \"No dimension set for key \" + dimension);\n    return dimensions[dimension];\n  };\n\n  Dimensions.set = function set(initialDimensions) {\n    if (initialDimensions) {\n      if (canUseDOM) {\n        invariant(false, 'Dimensions cannot be set in the browser');\n      } else {\n        if (initialDimensions.screen != null) {\n          dimensions.screen = initialDimensions.screen;\n        }\n\n        if (initialDimensions.window != null) {\n          dimensions.window = initialDimensions.window;\n        }\n      }\n    }\n  };\n\n  Dimensions._update = function _update() {\n    if (!canUseDOM) {\n      return;\n    }\n\n    var win = window;\n    var docEl = win.document.documentElement;\n    dimensions.window = {\n      fontScale: 1,\n      height: docEl.clientHeight,\n      scale: win.devicePixelRatio || 1,\n      width: docEl.clientWidth\n    };\n    dimensions.screen = {\n      fontScale: 1,\n      height: win.screen.height,\n      scale: win.devicePixelRatio || 1,\n      width: win.screen.width\n    };\n\n    if (Array.isArray(listeners['change'])) {\n      listeners['change'].forEach(function (handler) {\n        return handler(dimensions);\n      });\n    }\n  };\n\n  Dimensions.addEventListener = function addEventListener(type, handler) {\n    var _this = this;\n\n    listeners[type] = listeners[type] || [];\n    listeners[type].push(handler);\n    return {\n      remove: function remove() {\n        _this.removeEventListener(type, handler);\n      }\n    };\n  };\n\n  Dimensions.removeEventListener = function removeEventListener(type, handler) {\n    if (Array.isArray(listeners[type])) {\n      listeners[type] = listeners[type].filter(function (_handler) {\n        return _handler !== handler;\n      });\n    }\n  };\n\n  return Dimensions;\n}();\n\nexport { Dimensions as default };\n\nif (canUseDOM) {\n  Dimensions._update();\n\n  window.addEventListener('resize', Dimensions._update, false);\n}","map":{"version":3,"sources":["/Users/garethcozens/Documents/repo/cloudratha/react-native-web-nx-demo/node_modules/react-native-web/dist/exports/Dimensions/index.js"],"names":["dimensions","window","fontScale","height","scale","width","screen","listeners","Dimensions","invariant","initialDimensions","win","docEl","Array","handler","_this","remove","_handler"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport invariant from 'fbjs/lib/invariant';\nvar dimensions = {\n  window: {\n    fontScale: 1,\n    height: 0,\n    scale: 1,\n    width: 0\n  },\n  screen: {\n    fontScale: 1,\n    height: 0,\n    scale: 1,\n    width: 0\n  }\n};\nvar listeners = {};\n\nvar Dimensions = /*#__PURE__*/function () {\n  function Dimensions() {}\n\n  Dimensions.get = function get(dimension) {\n    invariant(dimensions[dimension], \"No dimension set for key \" + dimension);\n    return dimensions[dimension];\n  };\n\n  Dimensions.set = function set(initialDimensions) {\n    if (initialDimensions) {\n      if (canUseDOM) {\n        invariant(false, 'Dimensions cannot be set in the browser');\n      } else {\n        if (initialDimensions.screen != null) {\n          dimensions.screen = initialDimensions.screen;\n        }\n\n        if (initialDimensions.window != null) {\n          dimensions.window = initialDimensions.window;\n        }\n      }\n    }\n  };\n\n  Dimensions._update = function _update() {\n    if (!canUseDOM) {\n      return;\n    }\n\n    var win = window;\n    var docEl = win.document.documentElement;\n    dimensions.window = {\n      fontScale: 1,\n      height: docEl.clientHeight,\n      scale: win.devicePixelRatio || 1,\n      width: docEl.clientWidth\n    };\n    dimensions.screen = {\n      fontScale: 1,\n      height: win.screen.height,\n      scale: win.devicePixelRatio || 1,\n      width: win.screen.width\n    };\n\n    if (Array.isArray(listeners['change'])) {\n      listeners['change'].forEach(function (handler) {\n        return handler(dimensions);\n      });\n    }\n  };\n\n  Dimensions.addEventListener = function addEventListener(type, handler) {\n    var _this = this;\n\n    listeners[type] = listeners[type] || [];\n    listeners[type].push(handler);\n    return {\n      remove: function remove() {\n        _this.removeEventListener(type, handler);\n      }\n    };\n  };\n\n  Dimensions.removeEventListener = function removeEventListener(type, handler) {\n    if (Array.isArray(listeners[type])) {\n      listeners[type] = listeners[type].filter(function (_handler) {\n        return _handler !== handler;\n      });\n    }\n  };\n\n  return Dimensions;\n}();\n\nexport { Dimensions as default };\n\nif (canUseDOM) {\n  Dimensions._update();\n\n  window.addEventListener('resize', Dimensions._update, false);\n}"]},"metadata":{},"sourceType":"module"}