{"ast":null,"code":"function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport View from \"../View\";\nimport React from 'react';\n\nfunction RefreshControl(props) {\n  var colors = props.colors,\n      enabled = props.enabled,\n      onRefresh = props.onRefresh,\n      progressBackgroundColor = props.progressBackgroundColor,\n      progressViewOffset = props.progressViewOffset,\n      refreshing = props.refreshing,\n      size = props.size,\n      tintColor = props.tintColor,\n      title = props.title,\n      titleColor = props.titleColor,\n      rest = _objectWithoutPropertiesLoose(props, [\"colors\", \"enabled\", \"onRefresh\", \"progressBackgroundColor\", \"progressViewOffset\", \"refreshing\", \"size\", \"tintColor\", \"title\", \"titleColor\"]);\n\n  return React.createElement(View, rest);\n}\n\n_c = RefreshControl;\nexport default RefreshControl;\n\nvar _c;\n\n$RefreshReg$(_c, \"RefreshControl\");\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/Users/garethcozens/Documents/repo/cloudratha/react-native-web-nx-demo/node_modules/react-native-web/dist/exports/RefreshControl/index.js"],"names":["source","target","sourceKeys","Object","i","key","excluded","RefreshControl","colors","props","enabled","onRefresh","progressBackgroundColor","progressViewOffset","refreshing","size","tintColor","title","titleColor","rest","_objectWithoutPropertiesLoose","React"],"mappings":"AAAA,SAAA,6BAAA,CAAA,MAAA,EAAA,QAAA,EAAyD;AAAE,MAAIA,MAAM,IAAV,IAAA,EAAoB,OAAA,EAAA;AAAW,MAAIC,MAAM,GAAV,EAAA;AAAiB,MAAIC,UAAU,GAAGC,MAAM,CAANA,IAAAA,CAAjB,MAAiBA,CAAjB;AAAsC,MAAA,GAAA,EAAA,CAAA;;AAAY,OAAKC,CAAC,GAAN,CAAA,EAAYA,CAAC,GAAGF,UAAU,CAA1B,MAAA,EAAmCE,CAAnC,EAAA,EAAwC;AAAEC,IAAAA,GAAG,GAAGH,UAAU,CAAhBG,CAAgB,CAAhBA;AAAqB,QAAIC,QAAQ,CAARA,OAAAA,CAAAA,GAAAA,KAAJ,CAAA,EAAgC;AAAUL,IAAAA,MAAM,CAANA,GAAM,CAANA,GAAcD,MAAM,CAApBC,GAAoB,CAApBA;AAA6B;;AAAA,SAAA,MAAA;AAWnS;;AAAA,OAAA,IAAA;AACA,OAAA,KAAA,MAAA,OAAA;;AAEA,SAAA,cAAA,CAAA,KAAA,EAA+B;AAC7B,MAAIO,MAAM,GAAGC,KAAK,CAAlB,MAAA;AAAA,MACIC,OAAO,GAAGD,KAAK,CADnB,OAAA;AAAA,MAEIE,SAAS,GAAGF,KAAK,CAFrB,SAAA;AAAA,MAGIG,uBAAuB,GAAGH,KAAK,CAHnC,uBAAA;AAAA,MAIII,kBAAkB,GAAGJ,KAAK,CAJ9B,kBAAA;AAAA,MAKIK,UAAU,GAAGL,KAAK,CALtB,UAAA;AAAA,MAMIM,IAAI,GAAGN,KAAK,CANhB,IAAA;AAAA,MAOIO,SAAS,GAAGP,KAAK,CAPrB,SAAA;AAAA,MAQIQ,KAAK,GAAGR,KAAK,CARjB,KAAA;AAAA,MASIS,UAAU,GAAGT,KAAK,CATtB,UAAA;AAAA,MAUIU,IAAI,GAAGC,6BAA6B,CAAA,KAAA,EAAQ,CAAA,QAAA,EAAA,SAAA,EAAA,WAAA,EAAA,yBAAA,EAAA,oBAAA,EAAA,YAAA,EAAA,MAAA,EAAA,WAAA,EAAA,OAAA,EAVhD,YAUgD,CAAR,CAVxC;;AAYA,SAAoBC,KAAK,CAALA,aAAAA,CAAAA,IAAAA,EAApB,IAAoBA,CAApB;;;KAbOd,c;AAgBT,eAAA,cAAA","sourcesContent":["function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport View from '../View';\nimport React from 'react';\n\nfunction RefreshControl(props) {\n  var colors = props.colors,\n      enabled = props.enabled,\n      onRefresh = props.onRefresh,\n      progressBackgroundColor = props.progressBackgroundColor,\n      progressViewOffset = props.progressViewOffset,\n      refreshing = props.refreshing,\n      size = props.size,\n      tintColor = props.tintColor,\n      title = props.title,\n      titleColor = props.titleColor,\n      rest = _objectWithoutPropertiesLoose(props, [\"colors\", \"enabled\", \"onRefresh\", \"progressBackgroundColor\", \"progressViewOffset\", \"refreshing\", \"size\", \"tintColor\", \"title\", \"titleColor\"]);\n\n  return /*#__PURE__*/React.createElement(View, rest);\n}\n\nexport default RefreshControl;"]},"metadata":{},"sourceType":"module"}