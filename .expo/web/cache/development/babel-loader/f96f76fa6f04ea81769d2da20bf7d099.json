{"ast":null,"code":"'use strict';\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { useMemo, useRef } from 'react';\nimport pick from \"../../modules/pick\";\nimport useMergeRefs from \"../../modules/useMergeRefs\";\nimport usePressEvents from \"../../modules/usePressEvents\";\nvar forwardPropsList = {\n  accessibilityDisabled: true,\n  accessibilityLabel: true,\n  accessibilityLiveRegion: true,\n  accessibilityRole: true,\n  accessibilityState: true,\n  accessibilityValue: true,\n  children: true,\n  disabled: true,\n  focusable: true,\n  nativeID: true,\n  onBlur: true,\n  onFocus: true,\n  onLayout: true,\n  testID: true\n};\n\nvar pickProps = function pickProps(props) {\n  return pick(props, forwardPropsList);\n};\n\nfunction TouchableWithoutFeedback(props, forwardedRef) {\n  var delayPressIn = props.delayPressIn,\n      delayPressOut = props.delayPressOut,\n      delayLongPress = props.delayLongPress,\n      disabled = props.disabled,\n      focusable = props.focusable,\n      onLongPress = props.onLongPress,\n      onPress = props.onPress,\n      onPressIn = props.onPressIn,\n      onPressOut = props.onPressOut,\n      rejectResponderTermination = props.rejectResponderTermination;\n  var hostRef = useRef(null);\n  var pressConfig = useMemo(function () {\n    return {\n      cancelable: !rejectResponderTermination,\n      disabled: disabled,\n      delayLongPress: delayLongPress,\n      delayPressStart: delayPressIn,\n      delayPressEnd: delayPressOut,\n      onLongPress: onLongPress,\n      onPress: onPress,\n      onPressStart: onPressIn,\n      onPressEnd: onPressOut\n    };\n  }, [disabled, delayPressIn, delayPressOut, delayLongPress, onLongPress, onPress, onPressIn, onPressOut, rejectResponderTermination]);\n  var pressEventHandlers = usePressEvents(hostRef, pressConfig);\n  var element = React.Children.only(props.children);\n  var children = [element.props.children];\n  var supportedProps = pickProps(props);\n  supportedProps.accessibilityDisabled = disabled;\n  supportedProps.focusable = !disabled && focusable !== false;\n  supportedProps.ref = useMergeRefs(forwardedRef, hostRef, element.ref);\n\n  var elementProps = _extends(supportedProps, pressEventHandlers);\n\n  return React.cloneElement.apply(React, [element, elementProps].concat(children));\n}\n\nvar MemoedTouchableWithoutFeedback = React.memo(React.forwardRef(TouchableWithoutFeedback));\nMemoedTouchableWithoutFeedback.displayName = 'TouchableWithoutFeedback';\nexport default MemoedTouchableWithoutFeedback;","map":{"version":3,"sources":["/Users/garethcozens/Documents/repo/cloudratha/react-native-web-nx-demo/node_modules/react-native-web/dist/exports/TouchableWithoutFeedback/index.js"],"names":["forwardPropsList","accessibilityDisabled","accessibilityLabel","accessibilityLiveRegion","accessibilityRole","accessibilityState","accessibilityValue","children","disabled","focusable","nativeID","onBlur","onFocus","onLayout","testID","pickProps","pick","delayPressIn","props","delayPressOut","delayLongPress","onLongPress","onPress","onPressIn","onPressOut","rejectResponderTermination","hostRef","useRef","pressConfig","useMemo","cancelable","delayPressStart","delayPressEnd","onPressStart","onPressEnd","pressEventHandlers","usePressEvents","element","React","supportedProps","useMergeRefs","elementProps","MemoedTouchableWithoutFeedback"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport * as React from 'react';\nimport { useMemo, useRef } from 'react';\nimport pick from '../../modules/pick';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport usePressEvents from '../../modules/usePressEvents';\nvar forwardPropsList = {\n  accessibilityDisabled: true,\n  accessibilityLabel: true,\n  accessibilityLiveRegion: true,\n  accessibilityRole: true,\n  accessibilityState: true,\n  accessibilityValue: true,\n  children: true,\n  disabled: true,\n  focusable: true,\n  nativeID: true,\n  onBlur: true,\n  onFocus: true,\n  onLayout: true,\n  testID: true\n};\n\nvar pickProps = function pickProps(props) {\n  return pick(props, forwardPropsList);\n};\n\nfunction TouchableWithoutFeedback(props, forwardedRef) {\n  var delayPressIn = props.delayPressIn,\n      delayPressOut = props.delayPressOut,\n      delayLongPress = props.delayLongPress,\n      disabled = props.disabled,\n      focusable = props.focusable,\n      onLongPress = props.onLongPress,\n      onPress = props.onPress,\n      onPressIn = props.onPressIn,\n      onPressOut = props.onPressOut,\n      rejectResponderTermination = props.rejectResponderTermination;\n  var hostRef = useRef(null);\n  var pressConfig = useMemo(function () {\n    return {\n      cancelable: !rejectResponderTermination,\n      disabled: disabled,\n      delayLongPress: delayLongPress,\n      delayPressStart: delayPressIn,\n      delayPressEnd: delayPressOut,\n      onLongPress: onLongPress,\n      onPress: onPress,\n      onPressStart: onPressIn,\n      onPressEnd: onPressOut\n    };\n  }, [disabled, delayPressIn, delayPressOut, delayLongPress, onLongPress, onPress, onPressIn, onPressOut, rejectResponderTermination]);\n  var pressEventHandlers = usePressEvents(hostRef, pressConfig);\n  var element = React.Children.only(props.children);\n  var children = [element.props.children];\n  var supportedProps = pickProps(props);\n  supportedProps.accessibilityDisabled = disabled;\n  supportedProps.focusable = !disabled && focusable !== false;\n  supportedProps.ref = useMergeRefs(forwardedRef, hostRef, element.ref);\n  var elementProps = Object.assign(supportedProps, pressEventHandlers);\n  return /*#__PURE__*/React.cloneElement.apply(React, [element, elementProps].concat(children));\n}\n\nvar MemoedTouchableWithoutFeedback = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(TouchableWithoutFeedback));\nMemoedTouchableWithoutFeedback.displayName = 'TouchableWithoutFeedback';\nexport default MemoedTouchableWithoutFeedback;"]},"metadata":{},"sourceType":"module"}