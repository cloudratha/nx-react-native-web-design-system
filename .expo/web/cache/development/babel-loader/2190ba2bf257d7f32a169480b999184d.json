{"ast":null,"code":"import isSelectionValid from \"../../modules/isSelectionValid\";\nvar keyName = '__reactResponderId';\n\nfunction getEventPath(domEvent) {\n  if (domEvent.type === 'selectionchange') {\n    var target = window.getSelection().anchorNode;\n    return composedPathFallback(target);\n  } else {\n    var path = domEvent.composedPath != null ? domEvent.composedPath() : composedPathFallback(domEvent.target);\n    return path;\n  }\n}\n\nfunction composedPathFallback(target) {\n  var path = [];\n\n  while (target != null && target !== document.body) {\n    path.push(target);\n    target = target.parentNode;\n  }\n\n  return path;\n}\n\nfunction getResponderId(node) {\n  if (node != null) {\n    return node[keyName];\n  }\n\n  return null;\n}\n\nexport function setResponderId(node, id) {\n  if (node != null) {\n    node[keyName] = id;\n  }\n}\nexport function getResponderPaths(domEvent) {\n  var idPath = [];\n  var nodePath = [];\n  var eventPath = getEventPath(domEvent);\n\n  for (var i = 0; i < eventPath.length; i++) {\n    var node = eventPath[i];\n    var id = getResponderId(node);\n\n    if (id != null) {\n      idPath.push(id);\n      nodePath.push(node);\n    }\n  }\n\n  return {\n    idPath: idPath,\n    nodePath: nodePath\n  };\n}\nexport function getLowestCommonAncestor(pathA, pathB) {\n  var pathALength = pathA.length;\n  var pathBLength = pathB.length;\n\n  if (pathALength === 0 || pathBLength === 0 || pathA[pathALength - 1] !== pathB[pathBLength - 1]) {\n    return null;\n  }\n\n  var itemA = pathA[0];\n  var indexA = 0;\n  var itemB = pathB[0];\n  var indexB = 0;\n\n  if (pathALength - pathBLength > 0) {\n    indexA = pathALength - pathBLength;\n    itemA = pathA[indexA];\n    pathALength = pathBLength;\n  }\n\n  if (pathBLength - pathALength > 0) {\n    indexB = pathBLength - pathALength;\n    itemB = pathB[indexB];\n    pathBLength = pathALength;\n  }\n\n  var depth = pathALength;\n\n  while (depth--) {\n    if (itemA === itemB) {\n      return itemA;\n    }\n\n    itemA = pathA[indexA++];\n    itemB = pathB[indexB++];\n  }\n\n  return null;\n}\nexport function hasTargetTouches(target, touches) {\n  if (!touches || touches.length === 0) {\n    return false;\n  }\n\n  for (var i = 0; i < touches.length; i++) {\n    var node = touches[i].target;\n\n    if (node != null) {\n      if (target.contains(node)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\nexport function hasValidSelection(domEvent) {\n  if (domEvent.type === 'selectionchange') {\n    return isSelectionValid();\n  }\n\n  return domEvent.type === 'select';\n}\nexport function isPrimaryPointerDown(domEvent) {\n  var altKey = domEvent.altKey,\n      button = domEvent.button,\n      buttons = domEvent.buttons,\n      ctrlKey = domEvent.ctrlKey,\n      type = domEvent.type;\n  var isTouch = type === 'touchstart' || type === 'touchmove';\n  var isPrimaryMouseDown = type === 'mousedown' && (button === 0 || buttons === 1);\n  var isPrimaryMouseMove = type === 'mousemove' && buttons === 1;\n  var noModifiers = altKey === false && ctrlKey === false;\n\n  if (isTouch || isPrimaryMouseDown && noModifiers || isPrimaryMouseMove && noModifiers) {\n    return true;\n  }\n\n  return false;\n}\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/Users/garethcozens/Documents/repo/cloudratha/react-native-web-nx-demo/node_modules/react-native-web/dist/modules/useResponderEvents/utils.js"],"names":["keyName","domEvent","target","window","composedPathFallback","path","document","node","idPath","nodePath","eventPath","getEventPath","i","id","getResponderId","pathALength","pathA","pathBLength","pathB","itemA","indexA","itemB","indexB","depth","touches","isSelectionValid","altKey","button","buttons","ctrlKey","type","isTouch","isPrimaryMouseDown","isPrimaryMouseMove","noModifiers"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport isSelectionValid from '../../modules/isSelectionValid';\nvar keyName = '__reactResponderId';\n\nfunction getEventPath(domEvent) {\n  // The 'selectionchange' event always has the 'document' as the target.\n  // Use the anchor node as the initial target to reconstruct a path.\n  // (We actually only need the first \"responder\" node in practice.)\n  if (domEvent.type === 'selectionchange') {\n    var target = window.getSelection().anchorNode;\n    return composedPathFallback(target);\n  } else {\n    var path = domEvent.composedPath != null ? domEvent.composedPath() : composedPathFallback(domEvent.target);\n    return path;\n  }\n}\n\nfunction composedPathFallback(target) {\n  var path = [];\n\n  while (target != null && target !== document.body) {\n    path.push(target);\n    target = target.parentNode;\n  }\n\n  return path;\n}\n/**\n * Retrieve the responderId from a host node\n */\n\n\nfunction getResponderId(node) {\n  if (node != null) {\n    return node[keyName];\n  }\n\n  return null;\n}\n/**\n * Store the responderId on a host node\n */\n\n\nexport function setResponderId(node, id) {\n  if (node != null) {\n    node[keyName] = id;\n  }\n}\n/**\n * Filter the event path to contain only the nodes attached to the responder system\n */\n\nexport function getResponderPaths(domEvent) {\n  var idPath = [];\n  var nodePath = [];\n  var eventPath = getEventPath(domEvent);\n\n  for (var i = 0; i < eventPath.length; i++) {\n    var node = eventPath[i];\n    var id = getResponderId(node);\n\n    if (id != null) {\n      idPath.push(id);\n      nodePath.push(node);\n    }\n  }\n\n  return {\n    idPath: idPath,\n    nodePath: nodePath\n  };\n}\n/**\n * Walk the paths and find the first common ancestor\n */\n\nexport function getLowestCommonAncestor(pathA, pathB) {\n  var pathALength = pathA.length;\n  var pathBLength = pathB.length;\n\n  if ( // If either path is empty\n  pathALength === 0 || pathBLength === 0 || // If the last elements aren't the same there can't be a common ancestor\n  // that is connected to the responder system\n  pathA[pathALength - 1] !== pathB[pathBLength - 1]) {\n    return null;\n  }\n\n  var itemA = pathA[0];\n  var indexA = 0;\n  var itemB = pathB[0];\n  var indexB = 0; // If A is deeper, skip indices that can't match.\n\n  if (pathALength - pathBLength > 0) {\n    indexA = pathALength - pathBLength;\n    itemA = pathA[indexA];\n    pathALength = pathBLength;\n  } // If B is deeper, skip indices that can't match\n\n\n  if (pathBLength - pathALength > 0) {\n    indexB = pathBLength - pathALength;\n    itemB = pathB[indexB];\n    pathBLength = pathALength;\n  } // Walk in lockstep until a match is found\n\n\n  var depth = pathALength;\n\n  while (depth--) {\n    if (itemA === itemB) {\n      return itemA;\n    }\n\n    itemA = pathA[indexA++];\n    itemB = pathB[indexB++];\n  }\n\n  return null;\n}\n/**\n * Determine whether any of the active touches are within the current responder.\n * This cannot rely on W3C `targetTouches`, as neither IE11 nor Safari implement it.\n */\n\nexport function hasTargetTouches(target, touches) {\n  if (!touches || touches.length === 0) {\n    return false;\n  }\n\n  for (var i = 0; i < touches.length; i++) {\n    var node = touches[i].target;\n\n    if (node != null) {\n      if (target.contains(node)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n/**\n * Ignore 'selectionchange' events that don't correspond with a person's intent to\n * select text.\n */\n\nexport function hasValidSelection(domEvent) {\n  if (domEvent.type === 'selectionchange') {\n    return isSelectionValid();\n  }\n\n  return domEvent.type === 'select';\n}\n/**\n * Events are only valid if the primary button was used without specific modifier keys.\n */\n\nexport function isPrimaryPointerDown(domEvent) {\n  var altKey = domEvent.altKey,\n      button = domEvent.button,\n      buttons = domEvent.buttons,\n      ctrlKey = domEvent.ctrlKey,\n      type = domEvent.type;\n  var isTouch = type === 'touchstart' || type === 'touchmove';\n  var isPrimaryMouseDown = type === 'mousedown' && (button === 0 || buttons === 1);\n  var isPrimaryMouseMove = type === 'mousemove' && buttons === 1;\n  var noModifiers = altKey === false && ctrlKey === false;\n\n  if (isTouch || isPrimaryMouseDown && noModifiers || isPrimaryMouseMove && noModifiers) {\n    return true;\n  }\n\n  return false;\n}"]},"metadata":{},"sourceType":"module"}