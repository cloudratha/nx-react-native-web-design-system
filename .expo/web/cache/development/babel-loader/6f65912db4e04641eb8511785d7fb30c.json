{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useClipboard = useClipboard;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nfunction useClipboard() {\n  _s();\n\n  var _React$useState = _react[\"default\"].useState(false),\n      _React$useState2 = (0, _slicedToArray2[\"default\"])(_React$useState, 2),\n      hasCopied = _React$useState2[0],\n      setHasCopied = _React$useState2[1];\n\n  var _React$useState3 = _react[\"default\"].useState(''),\n      _React$useState4 = (0, _slicedToArray2[\"default\"])(_React$useState3, 2),\n      value = _React$useState4[0],\n      setValue = _React$useState4[1];\n\n  var onCopy = function onCopy(copiedValue) {\n    return _regenerator[\"default\"].async(function onCopy$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!_reactNative.Clipboard) {\n              _context.next = 3;\n              break;\n            }\n\n            _context.next = 3;\n            return _regenerator[\"default\"].awrap(_reactNative.Clipboard.setString(copiedValue));\n\n          case 3:\n            setValue(copiedValue);\n            setHasCopied(true);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return {\n    value: value,\n    onCopy: onCopy,\n    hasCopied: hasCopied\n  };\n}\n\n_s(useClipboard, \"938DgVwBx0IgvllBl/z2nKlVIa4=\");\n\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/Users/garethcozens/Documents/repo/cloudratha/react-native-web-nx-demo/node_modules/native-base/lib/commonjs/hooks/useClipboard.js"],"names":["_interopRequireDefault","require","Object","value","exports","_regenerator","_slicedToArray2","_react","useClipboard","_React$useState","_React$useState2","hasCopied","setHasCopied","_React$useState3","_React$useState4","setValue","onCopy","_context","_reactNative"],"mappings":";;AAAA,IAAIA,sBAAsB,GAACC,OAAO,CAAlC,8CAAkC,CAAlC;;AAAmFC,MAAM,CAANA,cAAAA,CAAAA,OAAAA,EAAAA,YAAAA,EAA2C;AAACC,EAAAA,KAAK,EAAjDD;AAA2C,CAA3CA;AAAyDE,OAAO,CAAPA,YAAAA,GAAAA,YAAAA;;AAAkC,IAAIC,YAAY,GAACL,sBAAsB,CAACC,OAAO,CAA/C,4BAA+C,CAAR,CAAvC;;AAA+E,IAAIK,eAAe,GAACN,sBAAsB,CAACC,OAAO,CAAlD,sCAAkD,CAAR,CAA1C;;AAA4F,IAAIM,MAAM,GAACP,sBAAsB,CAACC,OAAO,CAAzC,OAAyC,CAAR,CAAjC;;;;AAA6F,SAAA,YAAA,GAAuB;AAAA,EAAA,EAAA;;AAAC,MAAIQ,eAAe,GAACF,MAAM,CAANA,SAAM,CAANA,CAAAA,QAAAA,CAApB,KAAoBA,CAApB;AAAA,MAAmDG,gBAAgB,GAAC,CAAC,GAAEJ,eAAe,CAAlB,SAAkB,CAAlB,EAAA,eAAA,EAApE,CAAoE,CAApE;AAAA,MAAmHK,SAAS,GAACD,gBAAgB,CAA7I,CAA6I,CAA7I;AAAA,MAAiJE,YAAY,GAACF,gBAAgB,CAA9K,CAA8K,CAA9K;;AAAkL,MAAIG,gBAAgB,GAACN,MAAM,CAANA,SAAM,CAANA,CAAAA,QAAAA,CAArB,EAAqBA,CAArB;AAAA,MAAiDO,gBAAgB,GAAC,CAAC,GAAER,eAAe,CAAlB,SAAkB,CAAlB,EAAA,gBAAA,EAAlE,CAAkE,CAAlE;AAAA,MAAkHH,KAAK,GAACW,gBAAgB,CAAxI,CAAwI,CAAxI;AAAA,MAA4IC,QAAQ,GAACD,gBAAgB,CAArK,CAAqK,CAArK;;AAAyK,MAAIE,MAAM,GAAC,SAAA,MAAA,CAAA,WAAA,EAA4B;AAAC,WAAOX,YAAY,CAAZA,SAAY,CAAZA,CAAAA,KAAAA,CAA2B,SAAA,OAAA,CAAA,QAAA,EAA0B;AAAC,aAAA,CAAA,EAAQ;AAAC,gBAAOY,QAAQ,CAARA,IAAAA,GAAcA,QAAQ,CAA7B,IAAA;AAAoC,eAAA,CAAA;AAAO,gBAAG,CAACC,YAAY,CAAhB,SAAA,EAA2B;AAACD,cAAAA,QAAQ,CAARA,IAAAA,GAAAA,CAAAA;AAAgB;AAAO;;AAAA,YAAA,QAAQ,CAAR,IAAA,GAAA,CAAA;AAAgB,mBAAOZ,YAAY,CAAZA,SAAY,CAAZA,CAAAA,KAAAA,CAA2Ba,YAAY,CAAZA,SAAAA,CAAAA,SAAAA,CAAlC,WAAkCA,CAA3Bb,CAAP;;AAAiF,eAAA,CAAA;AAAOU,YAAAA,QAAQ,CAARA,WAAQ,CAARA;AAAsBH,YAAAA,YAAY,CAAZA,IAAY,CAAZA;;AAAmB,eAAA,CAAA;AAAO,eAAA,KAAA;AAAU,mBAAOK,QAAQ,CAA/Q,IAAuQA,EAAP;AAAhQ;AAA0R;AAAzVZ,KAAAA,EAAAA,IAAAA,EAAAA,IAAAA,EAAAA,IAAAA,EAAP,OAAOA,CAAP;AAAxC,GAAA;;AAAma,SAAM;AAACF,IAAAA,KAAK,EAAN,KAAA;AAAaa,IAAAA,MAAM,EAAnB,MAAA;AAA2BL,IAAAA,SAAS,EAA1C;AAAM,GAAN;;;GAA7wBH,Y","sourcesContent":["var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.useClipboard=useClipboard;var _regenerator=_interopRequireDefault(require(\"@babel/runtime/regenerator\"));var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _react=_interopRequireDefault(require(\"react\"));var _reactNative=require(\"react-native\");function useClipboard(){var _React$useState=_react.default.useState(false),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2),hasCopied=_React$useState2[0],setHasCopied=_React$useState2[1];var _React$useState3=_react.default.useState(''),_React$useState4=(0,_slicedToArray2.default)(_React$useState3,2),value=_React$useState4[0],setValue=_React$useState4[1];var onCopy=function onCopy(copiedValue){return _regenerator.default.async(function onCopy$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!_reactNative.Clipboard){_context.next=3;break;}_context.next=3;return _regenerator.default.awrap(_reactNative.Clipboard.setString(copiedValue));case 3:setValue(copiedValue);setHasCopied(true);case 5:case\"end\":return _context.stop();}}},null,null,null,Promise);};return{value:value,onCopy:onCopy,hasCopied:hasCopied};}\n//# sourceMappingURL=useClipboard.js.map"]},"metadata":{},"sourceType":"script"}