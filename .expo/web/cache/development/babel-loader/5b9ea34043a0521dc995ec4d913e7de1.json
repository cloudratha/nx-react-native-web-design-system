{"ast":null,"code":"import * as React from 'react';\nimport StyleSheet from \"../StyleSheet\";\nimport TouchableOpacity from \"../TouchableOpacity\";\nimport Text from \"../Text\";\nvar Button = React.forwardRef(function (props, forwardedRef) {\n  var accessibilityLabel = props.accessibilityLabel,\n      color = props.color,\n      disabled = props.disabled,\n      onPress = props.onPress,\n      testID = props.testID,\n      title = props.title;\n  return React.createElement(TouchableOpacity, {\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"button\",\n    disabled: disabled,\n    focusable: !disabled,\n    onPress: onPress,\n    ref: forwardedRef,\n    style: [styles.button, color && {\n      backgroundColor: color\n    }, disabled && styles.buttonDisabled],\n    testID: testID\n  }, React.createElement(Text, {\n    style: [styles.text, disabled && styles.textDisabled]\n  }, title));\n});\nButton.displayName = 'Button';\nvar styles = StyleSheet.create({\n  button: {\n    backgroundColor: '#2196F3',\n    borderRadius: 2\n  },\n  text: {\n    color: '#fff',\n    fontWeight: '500',\n    padding: 8,\n    textAlign: 'center',\n    textTransform: 'uppercase'\n  },\n  buttonDisabled: {\n    backgroundColor: '#dfdfdf'\n  },\n  textDisabled: {\n    color: '#a1a1a1'\n  }\n});\nexport default Button;","map":{"version":3,"sources":["/Users/garethcozens/Documents/repo/cloudratha/react-native-web-nx-demo/node_modules/react-native-web/dist/exports/Button/index.js"],"names":["Button","React","accessibilityLabel","props","color","disabled","onPress","testID","title","accessibilityRole","focusable","ref","style","styles","backgroundColor","StyleSheet","button","borderRadius","text","fontWeight","padding","textAlign","textTransform","buttonDisabled","textDisabled"],"mappings":"AASA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,OAAA,UAAA;AACA,OAAA,gBAAA;AACA,OAAA,IAAA;AACA,IAAIA,MAAM,GAAgBC,KAAK,CAALA,UAAAA,CAAiB,UAAA,KAAA,EAAA,YAAA,EAA+B;AACxE,MAAIC,kBAAkB,GAAGC,KAAK,CAA9B,kBAAA;AAAA,MACIC,KAAK,GAAGD,KAAK,CADjB,KAAA;AAAA,MAEIE,QAAQ,GAAGF,KAAK,CAFpB,QAAA;AAAA,MAGIG,OAAO,GAAGH,KAAK,CAHnB,OAAA;AAAA,MAIII,MAAM,GAAGJ,KAAK,CAJlB,MAAA;AAAA,MAKIK,KAAK,GAAGL,KAAK,CALjB,KAAA;AAMA,SAAoBF,KAAK,CAALA,aAAAA,CAAAA,gBAAAA,EAAsC;AACxDC,IAAAA,kBAAkB,EADsC,kBAAA;AAExDO,IAAAA,iBAAiB,EAFuC,QAAA;AAGxDJ,IAAAA,QAAQ,EAHgD,QAAA;AAIxDK,IAAAA,SAAS,EAAE,CAJ6C,QAAA;AAKxDJ,IAAAA,OAAO,EALiD,OAAA;AAMxDK,IAAAA,GAAG,EANqD,YAAA;AAOxDC,IAAAA,KAAK,EAAE,CAACC,MAAM,CAAP,MAAA,EAAgBT,KAAK,IAAI;AAC9BU,MAAAA,eAAe,EADV;AAAyB,KAAzB,EAEJT,QAAQ,IAAIQ,MAAM,CATmC,cAOjD,CAPiD;AAUxDN,IAAAA,MAAM,EAVYN;AAAsC,GAAtCA,EAWJA,KAAK,CAALA,aAAAA,CAAAA,IAAAA,EAA0B;AACxCW,IAAAA,KAAK,EAAE,CAACC,MAAM,CAAP,IAAA,EAAcR,QAAQ,IAAIQ,MAAM,CADzBZ,YACP;AADiC,GAA1BA,EAXhB,KAWgBA,CAXIA,CAApB;AAPF,CAA0BA,CAA1B;AAsBAD,MAAM,CAANA,WAAAA,GAAAA,QAAAA;AACA,IAAIa,MAAM,GAAGE,UAAU,CAAVA,MAAAA,CAAkB;AAC7BC,EAAAA,MAAM,EAAE;AACNF,IAAAA,eAAe,EADT,SAAA;AAENG,IAAAA,YAAY,EAHe;AACrB,GADqB;AAK7BC,EAAAA,IAAI,EAAE;AACJd,IAAAA,KAAK,EADD,MAAA;AAEJe,IAAAA,UAAU,EAFN,KAAA;AAGJC,IAAAA,OAAO,EAHH,CAAA;AAIJC,IAAAA,SAAS,EAJL,QAAA;AAKJC,IAAAA,aAAa,EAVc;AAKvB,GALuB;AAY7BC,EAAAA,cAAc,EAAE;AACdT,IAAAA,eAAe,EAbY;AAYb,GAZa;AAe7BU,EAAAA,YAAY,EAAE;AACZpB,IAAAA,KAAK,EAhBT;AAegB;AAfe,CAAlBW,CAAb;AAmBA,eAAA,MAAA","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nimport StyleSheet from '../StyleSheet';\nimport TouchableOpacity from '../TouchableOpacity';\nimport Text from '../Text';\nvar Button = /*#__PURE__*/React.forwardRef(function (props, forwardedRef) {\n  var accessibilityLabel = props.accessibilityLabel,\n      color = props.color,\n      disabled = props.disabled,\n      onPress = props.onPress,\n      testID = props.testID,\n      title = props.title;\n  return /*#__PURE__*/React.createElement(TouchableOpacity, {\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"button\",\n    disabled: disabled,\n    focusable: !disabled,\n    onPress: onPress,\n    ref: forwardedRef,\n    style: [styles.button, color && {\n      backgroundColor: color\n    }, disabled && styles.buttonDisabled],\n    testID: testID\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: [styles.text, disabled && styles.textDisabled]\n  }, title));\n});\nButton.displayName = 'Button';\nvar styles = StyleSheet.create({\n  button: {\n    backgroundColor: '#2196F3',\n    borderRadius: 2\n  },\n  text: {\n    color: '#fff',\n    fontWeight: '500',\n    padding: 8,\n    textAlign: 'center',\n    textTransform: 'uppercase'\n  },\n  buttonDisabled: {\n    backgroundColor: '#dfdfdf'\n  },\n  textDisabled: {\n    color: '#a1a1a1'\n  }\n});\nexport default Button;"]},"metadata":{},"sourceType":"module"}