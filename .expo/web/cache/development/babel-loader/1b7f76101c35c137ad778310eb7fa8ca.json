{"ast":null,"code":"import UIManager from \"../../exports/UIManager\";\nvar TextInputState = {\n  _currentlyFocusedNode: null,\n  currentlyFocusedField: function currentlyFocusedField() {\n    if (document.activeElement !== this._currentlyFocusedNode) {\n      this._currentlyFocusedNode = null;\n    }\n\n    return this._currentlyFocusedNode;\n  },\n  focusTextInput: function focusTextInput(textFieldNode) {\n    if (textFieldNode !== null) {\n      this._currentlyFocusedNode = textFieldNode;\n\n      if (document.activeElement !== textFieldNode) {\n        UIManager.focus(textFieldNode);\n      }\n    }\n  },\n  blurTextInput: function blurTextInput(textFieldNode) {\n    if (textFieldNode !== null) {\n      this._currentlyFocusedNode = null;\n\n      if (document.activeElement === textFieldNode) {\n        UIManager.blur(textFieldNode);\n      }\n    }\n  }\n};\nexport default TextInputState;","map":{"version":3,"sources":["/Users/garethcozens/Documents/repo/cloudratha/react-native-web-nx-demo/node_modules/react-native-web/dist/modules/TextInputState/index.js"],"names":["TextInputState","_currentlyFocusedNode","currentlyFocusedField","document","focusTextInput","textFieldNode","UIManager","blurTextInput"],"mappings":"AASA,OAAA,SAAA;AAOA,IAAIA,cAAc,GAAG;AAInBC,EAAAA,qBAAqB,EAJF,IAAA;AAUnBC,EAAAA,qBAAqB,EAAE,SAAA,qBAAA,GAAiC;AACtD,QAAIC,QAAQ,CAARA,aAAAA,KAA2B,KAA/B,qBAAA,EAA2D;AACzD,WAAA,qBAAA,GAAA,IAAA;AAGF;;AAAA,WAAO,KAAP,qBAAA;AAfiB,GAAA;AAuBnBC,EAAAA,cAAc,EAAE,SAAA,cAAA,CAAA,aAAA,EAAuC;AACrD,QAAIC,aAAa,KAAjB,IAAA,EAA4B;AAC1B,WAAA,qBAAA,GAAA,aAAA;;AAEA,UAAIF,QAAQ,CAARA,aAAAA,KAAJ,aAAA,EAA8C;AAC5CG,QAAAA,SAAS,CAATA,KAAAA,CAAAA,aAAAA;AAEH;AACF;AA/BkB,GAAA;AAsCnBC,EAAAA,aAAa,EAAE,SAAA,aAAA,CAAA,aAAA,EAAsC;AACnD,QAAIF,aAAa,KAAjB,IAAA,EAA4B;AAC1B,WAAA,qBAAA,GAAA,IAAA;;AAEA,UAAIF,QAAQ,CAARA,aAAAA,KAAJ,aAAA,EAA8C;AAC5CG,QAAAA,SAAS,CAATA,IAAAA,CAAAA,aAAAA;AAEH;AACF;AA9CH;AAAqB,CAArB;AAgDA,eAAA,cAAA","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport UIManager from '../../exports/UIManager';\n/**\n * This class is responsible for coordinating the \"focused\"\n * state for TextInputs. All calls relating to the keyboard\n * should be funneled through here\n */\n\nvar TextInputState = {\n  /**\n   * Internal state\n   */\n  _currentlyFocusedNode: null,\n\n  /**\n   * Returns the ID of the currently focused text field, if one exists\n   * If no text field is focused it returns null\n   */\n  currentlyFocusedField: function currentlyFocusedField() {\n    if (document.activeElement !== this._currentlyFocusedNode) {\n      this._currentlyFocusedNode = null;\n    }\n\n    return this._currentlyFocusedNode;\n  },\n\n  /**\n   * @param {Object} TextInputID id of the text field to focus\n   * Focuses the specified text field\n   * noop if the text field was already focused\n   */\n  focusTextInput: function focusTextInput(textFieldNode) {\n    if (textFieldNode !== null) {\n      this._currentlyFocusedNode = textFieldNode;\n\n      if (document.activeElement !== textFieldNode) {\n        UIManager.focus(textFieldNode);\n      }\n    }\n  },\n\n  /**\n   * @param {Object} textFieldNode id of the text field to focus\n   * Unfocuses the specified text field\n   * noop if it wasn't focused\n   */\n  blurTextInput: function blurTextInput(textFieldNode) {\n    if (textFieldNode !== null) {\n      this._currentlyFocusedNode = null;\n\n      if (document.activeElement === textFieldNode) {\n        UIManager.blur(textFieldNode);\n      }\n    }\n  }\n};\nexport default TextInputState;"]},"metadata":{},"sourceType":"module"}