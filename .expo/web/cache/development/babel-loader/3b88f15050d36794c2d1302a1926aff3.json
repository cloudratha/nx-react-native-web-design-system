{"ast":null,"code":"import createEventHandle from \"../createEventHandle\";\nimport useLayoutEffect from \"../useLayoutEffect\";\nimport useStable from \"../useStable\";\nexport default function useEvent(event, options) {\n  var targetListeners = useStable(function () {\n    return new Map();\n  });\n  var addListener = useStable(function () {\n    var addEventListener = createEventHandle(event, options);\n    return function (target, callback) {\n      var removeTargetListener = targetListeners.get(target);\n\n      if (removeTargetListener != null) {\n        removeTargetListener();\n      }\n\n      if (callback == null) {\n        targetListeners.delete(target);\n      }\n\n      var removeEventListener = addEventListener(target, callback);\n      targetListeners.set(target, removeEventListener);\n      return removeEventListener;\n    };\n  });\n  useLayoutEffect(function () {\n    return function () {\n      targetListeners.forEach(function (removeListener) {\n        removeListener();\n      });\n      targetListeners.clear();\n    };\n  }, []);\n  return addListener;\n}","map":{"version":3,"sources":["/Users/garethcozens/Documents/repo/cloudratha/react-native-web-nx-demo/node_modules/react-native-web/dist/modules/useEvent/index.js"],"names":["targetListeners","useStable","addListener","addEventListener","createEventHandle","removeTargetListener","callback","removeEventListener","useLayoutEffect","removeListener"],"mappings":"AAQA,OAAA,iBAAA;AACA,OAAA,eAAA;AACA,OAAA,SAAA;AAWA,eAAe,SAAA,QAAA,CAAA,KAAA,EAAA,OAAA,EAAkC;AAC/C,MAAIA,eAAe,GAAGC,SAAS,CAAC,YAAY;AAC1C,WAAO,IAAP,GAAO,EAAP;AADF,GAA+B,CAA/B;AAGA,MAAIC,WAAW,GAAGD,SAAS,CAAC,YAAY;AACtC,QAAIE,gBAAgB,GAAGC,iBAAiB,CAAA,KAAA,EAAxC,OAAwC,CAAxC;AACA,WAAO,UAAA,MAAA,EAAA,QAAA,EAA4B;AACjC,UAAIC,oBAAoB,GAAGL,eAAe,CAAfA,GAAAA,CAA3B,MAA2BA,CAA3B;;AAEA,UAAIK,oBAAoB,IAAxB,IAAA,EAAkC;AAChCA,QAAAA,oBAAoB;AAGtB;;AAAA,UAAIC,QAAQ,IAAZ,IAAA,EAAsB;AACpBN,QAAAA,eAAe,CAAfA,MAAAA,CAAAA,MAAAA;AAGF;;AAAA,UAAIO,mBAAmB,GAAGJ,gBAAgB,CAAA,MAAA,EAA1C,QAA0C,CAA1C;AACAH,MAAAA,eAAe,CAAfA,GAAAA,CAAAA,MAAAA,EAAAA,mBAAAA;AACA,aAAA,mBAAA;AAbF,KAAA;AAFF,GAA2B,CAA3B;AAkBAQ,EAAAA,eAAe,CAAC,YAAY;AAC1B,WAAO,YAAY;AACjBR,MAAAA,eAAe,CAAfA,OAAAA,CAAwB,UAAA,cAAA,EAA0B;AAChDS,QAAAA,cAAc;AADhBT,OAAAA;AAGAA,MAAAA,eAAe,CAAfA,KAAAA;AAJF,KAAA;AADa,GAAA,EAAfQ,EAAe,CAAfA;AAQA,SAAA,WAAA;AACD","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport createEventHandle from '../createEventHandle';\nimport useLayoutEffect from '../useLayoutEffect';\nimport useStable from '../useStable';\n\n/**\n * This can be used with any event type include custom events.\n *\n * const click = useEvent('click', options);\n * useEffect(() => {\n *   click.setListener(target, onClick);\n *   return () => click.clear();\n * }).\n */\nexport default function useEvent(event, options) {\n  var targetListeners = useStable(function () {\n    return new Map();\n  });\n  var addListener = useStable(function () {\n    var addEventListener = createEventHandle(event, options);\n    return function (target, callback) {\n      var removeTargetListener = targetListeners.get(target);\n\n      if (removeTargetListener != null) {\n        removeTargetListener();\n      }\n\n      if (callback == null) {\n        targetListeners.delete(target);\n      }\n\n      var removeEventListener = addEventListener(target, callback);\n      targetListeners.set(target, removeEventListener);\n      return removeEventListener;\n    };\n  });\n  useLayoutEffect(function () {\n    return function () {\n      targetListeners.forEach(function (removeListener) {\n        removeListener();\n      });\n      targetListeners.clear();\n    };\n  }, []);\n  return addListener;\n}"]},"metadata":{},"sourceType":"module"}