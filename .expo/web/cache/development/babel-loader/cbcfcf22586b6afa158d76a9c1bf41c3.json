{"ast":null,"code":"import { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\n\nfunction getQuery() {\n  return canUseDOM && window.matchMedia != null ? window.matchMedia('(prefers-color-scheme: dark)') : null;\n}\n\nvar query = getQuery();\nvar listenerMapping = new WeakMap();\nvar Appearance = {\n  getColorScheme: function getColorScheme() {\n    return query && query.matches ? 'dark' : 'light';\n  },\n  addChangeListener: function addChangeListener(listener) {\n    var mappedListener = listenerMapping.get(listener);\n\n    if (!mappedListener) {\n      mappedListener = function mappedListener(_ref) {\n        var matches = _ref.matches;\n        listener({\n          colorScheme: matches ? 'dark' : 'light'\n        });\n      };\n\n      listenerMapping.set(listener, mappedListener);\n    }\n\n    if (query) {\n      query.addListener(mappedListener);\n    }\n  },\n  removeChangeListener: function removeChangeListener(listener) {\n    var mappedListener = listenerMapping.get(listener);\n\n    if (mappedListener) {\n      if (query) {\n        query.removeListener(mappedListener);\n      }\n\n      listenerMapping.delete(listener);\n    }\n  }\n};\nexport default Appearance;","map":{"version":3,"sources":["/Users/garethcozens/Documents/repo/cloudratha/react-native-web-nx-demo/node_modules/react-native-web/dist/exports/Appearance/index.js"],"names":["canUseDOM","window","query","getQuery","listenerMapping","Appearance","getColorScheme","addChangeListener","mappedListener","matches","_ref","listener","colorScheme","removeChangeListener"],"mappings":"AASA,SAAA,SAAA,QAAA,+BAAA;;AAEA,SAAA,QAAA,GAAoB;AAClB,SAAOA,SAAS,IAAIC,MAAM,CAANA,UAAAA,IAAbD,IAAAA,GAAyCC,MAAM,CAANA,UAAAA,CAAzCD,8BAAyCC,CAAzCD,GAAP,IAAA;AAGF;;AAAA,IAAIE,KAAK,GAAGC,QAAZ,EAAA;AACA,IAAIC,eAAe,GAAG,IAAtB,OAAsB,EAAtB;AACA,IAAIC,UAAU,GAAG;AACfC,EAAAA,cAAc,EAAE,SAAA,cAAA,GAA0B;AACxC,WAAOJ,KAAK,IAAIA,KAAK,CAAdA,OAAAA,GAAAA,MAAAA,GAAP,OAAA;AAFa,GAAA;AAIfK,EAAAA,iBAAiB,EAAE,SAAA,iBAAA,CAAA,QAAA,EAAqC;AACtD,QAAIC,cAAc,GAAGJ,eAAe,CAAfA,GAAAA,CAArB,QAAqBA,CAArB;;AAEA,QAAI,CAAJ,cAAA,EAAqB;AACnBI,MAAAA,cAAc,GAAG,SAAA,cAAA,CAAA,IAAA,EAA8B;AAC7C,YAAIC,OAAO,GAAGC,IAAI,CAAlB,OAAA;AACAC,QAAAA,QAAQ,CAAC;AACPC,UAAAA,WAAW,EAAEH,OAAO,GAAA,MAAA,GADtBE;AAAS,SAAD,CAARA;AAFFH,OAAAA;;AAOAJ,MAAAA,eAAe,CAAfA,GAAAA,CAAAA,QAAAA,EAAAA,cAAAA;AAGF;;AAAA,QAAA,KAAA,EAAW;AACTF,MAAAA,KAAK,CAALA,WAAAA,CAAAA,cAAAA;AAEH;AArBc,GAAA;AAsBfW,EAAAA,oBAAoB,EAAE,SAAA,oBAAA,CAAA,QAAA,EAAwC;AAC5D,QAAIL,cAAc,GAAGJ,eAAe,CAAfA,GAAAA,CAArB,QAAqBA,CAArB;;AAEA,QAAA,cAAA,EAAoB;AAClB,UAAA,KAAA,EAAW;AACTF,QAAAA,KAAK,CAALA,cAAAA,CAAAA,cAAAA;AAGFE;;AAAAA,MAAAA,eAAe,CAAfA,MAAAA,CAAAA,QAAAA;AAEH;AAhCH;AAAiB,CAAjB;AAkCA,eAAA,UAAA","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\n\nfunction getQuery() {\n  return canUseDOM && window.matchMedia != null ? window.matchMedia('(prefers-color-scheme: dark)') : null;\n}\n\nvar query = getQuery();\nvar listenerMapping = new WeakMap();\nvar Appearance = {\n  getColorScheme: function getColorScheme() {\n    return query && query.matches ? 'dark' : 'light';\n  },\n  addChangeListener: function addChangeListener(listener) {\n    var mappedListener = listenerMapping.get(listener);\n\n    if (!mappedListener) {\n      mappedListener = function mappedListener(_ref) {\n        var matches = _ref.matches;\n        listener({\n          colorScheme: matches ? 'dark' : 'light'\n        });\n      };\n\n      listenerMapping.set(listener, mappedListener);\n    }\n\n    if (query) {\n      query.addListener(mappedListener);\n    }\n  },\n  removeChangeListener: function removeChangeListener(listener) {\n    var mappedListener = listenerMapping.get(listener);\n\n    if (mappedListener) {\n      if (query) {\n        query.removeListener(mappedListener);\n      }\n\n      listenerMapping.delete(listener);\n    }\n  }\n};\nexport default Appearance;"]},"metadata":{},"sourceType":"module"}