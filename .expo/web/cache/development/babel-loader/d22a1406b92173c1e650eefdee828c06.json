{"ast":null,"code":"import dangerousStyleValue from \"./dangerousStyleValue\";\n\nfunction setValueForStyles(node, styles) {\n  var style = node.style;\n\n  for (var styleName in styles) {\n    if (!styles.hasOwnProperty(styleName)) {\n      continue;\n    }\n\n    var isCustomProperty = styleName.indexOf('--') === 0;\n    var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);\n\n    if (styleName === 'float') {\n      styleName = 'cssFloat';\n    }\n\n    if (isCustomProperty) {\n      style.setProperty(styleName, styleValue);\n    } else {\n      style[styleName] = styleValue;\n    }\n  }\n}\n\nexport default setValueForStyles;\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/Users/garethcozens/Documents/repo/cloudratha/react-native-web-nx-demo/node_modules/react-native-web/dist/modules/setValueForStyles/index.js"],"names":["style","node","styles","isCustomProperty","styleName","styleValue","dangerousStyleValue"],"mappings":"AAWA,OAAA,mBAAA;;AASA,SAAA,iBAAA,CAAA,IAAA,EAAA,MAAA,EAAyC;AACvC,MAAIA,KAAK,GAAGC,IAAI,CAAhB,KAAA;;AAEA,OAAK,IAAL,SAAA,IAAA,MAAA,EAA8B;AAC5B,QAAI,CAACC,MAAM,CAANA,cAAAA,CAAL,SAAKA,CAAL,EAAuC;AACrC;AAGF;;AAAA,QAAIC,gBAAgB,GAAGC,SAAS,CAATA,OAAAA,CAAAA,IAAAA,MAAvB,CAAA;AACA,QAAIC,UAAU,GAAGC,mBAAmB,CAAA,SAAA,EAAYJ,MAAM,CAAlB,SAAkB,CAAlB,EAApC,gBAAoC,CAApC;;AAEA,QAAIE,SAAS,KAAb,OAAA,EAA2B;AACzBA,MAAAA,SAAS,GAATA,UAAAA;AAGF;;AAAA,QAAA,gBAAA,EAAsB;AACpBJ,MAAAA,KAAK,CAALA,WAAAA,CAAAA,SAAAA,EAAAA,UAAAA;AADF,KAAA,MAEO;AACLA,MAAAA,KAAK,CAALA,SAAK,CAALA,GAAAA,UAAAA;AAEH;AACF;AAED;;AAAA,eAAA,iBAAA","sourcesContent":["/* eslint-disable */\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * From React 16.3.0\n * \n */\nimport dangerousStyleValue from './dangerousStyleValue';\n/**\n * Sets the value for multiple styles on a node.  If a value is specified as\n * '' (empty string), the corresponding style property will be unset.\n *\n * @param {DOMElement} node\n * @param {object} styles\n */\n\nfunction setValueForStyles(node, styles) {\n  var style = node.style;\n\n  for (var styleName in styles) {\n    if (!styles.hasOwnProperty(styleName)) {\n      continue;\n    }\n\n    var isCustomProperty = styleName.indexOf('--') === 0;\n    var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);\n\n    if (styleName === 'float') {\n      styleName = 'cssFloat';\n    }\n\n    if (isCustomProperty) {\n      style.setProperty(styleName, styleValue);\n    } else {\n      style[styleName] = styleValue;\n    }\n  }\n}\n\nexport default setValueForStyles;"]},"metadata":{},"sourceType":"module"}