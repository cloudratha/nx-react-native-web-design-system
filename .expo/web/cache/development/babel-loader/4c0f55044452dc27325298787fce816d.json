{"ast":null,"code":"function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport Batchinator from \"../Batchinator\";\nimport FillRateHelper from \"../FillRateHelper\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport RefreshControl from \"../../../exports/RefreshControl\";\nimport ScrollView from \"../../../exports/ScrollView\";\nimport StyleSheet from \"../../../exports/StyleSheet\";\nimport UIManager from \"../../../exports/UIManager\";\nimport View from \"../../../exports/View\";\nimport ViewabilityHelper from \"../ViewabilityHelper\";\nimport findNodeHandle from \"../../../exports/findNodeHandle\";\nvar flattenStyle = StyleSheet.flatten;\nimport infoLog from \"../infoLog\";\nimport invariant from 'fbjs/lib/invariant';\nimport warning from 'fbjs/lib/warning';\nimport { computeWindowedRenderLimits } from \"../VirtualizeUtils\";\nimport { VirtualizedListCellContextProvider, VirtualizedListContext, VirtualizedListContextProvider } from \"./VirtualizedListContext.js\";\nvar __DEV__ = true;\nvar _usedIndexForKey = false;\nvar _keylessItemComponentName = '';\n\nvar VirtualizedList = function (_React$PureComponent) {\n  _inheritsLoose(VirtualizedList, _React$PureComponent);\n\n  var _proto = VirtualizedList.prototype;\n\n  _proto.scrollToEnd = function scrollToEnd(params) {\n    var animated = params ? params.animated : true;\n    var veryLast = this.props.getItemCount(this.props.data) - 1;\n\n    var frame = this._getFrameMetricsApprox(veryLast);\n\n    var offset = Math.max(0, frame.offset + frame.length + this._footerLength - this._scrollMetrics.visibleLength);\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n\n    this._scrollRef.scrollTo(this.props.horizontal ? {\n      x: offset,\n      animated: animated\n    } : {\n      y: offset,\n      animated: animated\n    });\n  };\n\n  _proto.scrollToIndex = function scrollToIndex(params) {\n    var _this$props = this.props,\n        data = _this$props.data,\n        horizontal = _this$props.horizontal,\n        getItemCount = _this$props.getItemCount,\n        getItemLayout = _this$props.getItemLayout,\n        onScrollToIndexFailed = _this$props.onScrollToIndexFailed;\n    var animated = params.animated,\n        index = params.index,\n        viewOffset = params.viewOffset,\n        viewPosition = params.viewPosition;\n    invariant(index >= 0, \"scrollToIndex out of range: requested index \" + index + \" but minimum is 0\");\n    invariant(getItemCount(data) >= 1, \"scrollToIndex out of range: item length \" + getItemCount(data) + \" but minimum is 1\");\n    invariant(index < getItemCount(data), \"scrollToIndex out of range: requested index \" + index + \" is out of 0 to \" + (getItemCount(data) - 1));\n\n    if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n      invariant(!!onScrollToIndexFailed, 'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' + 'otherwise there is no way to know the location of offscreen indices or handle failures.');\n      onScrollToIndexFailed({\n        averageItemLength: this._averageCellLength,\n        highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n        index: index\n      });\n      return;\n    }\n\n    var frame = this._getFrameMetricsApprox(index);\n\n    var offset = Math.max(0, frame.offset - (viewPosition || 0) * (this._scrollMetrics.visibleLength - frame.length)) - (viewOffset || 0);\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n\n    this._scrollRef.scrollTo(horizontal ? {\n      x: offset,\n      animated: animated\n    } : {\n      y: offset,\n      animated: animated\n    });\n  };\n\n  _proto.scrollToItem = function scrollToItem(params) {\n    var item = params.item;\n    var _this$props2 = this.props,\n        data = _this$props2.data,\n        getItem = _this$props2.getItem,\n        getItemCount = _this$props2.getItemCount;\n    var itemCount = getItemCount(data);\n\n    for (var _index = 0; _index < itemCount; _index++) {\n      if (getItem(data, _index) === item) {\n        this.scrollToIndex(_objectSpread(_objectSpread({}, params), {}, {\n          index: _index\n        }));\n        break;\n      }\n    }\n  };\n\n  _proto.scrollToOffset = function scrollToOffset(params) {\n    var animated = params.animated,\n        offset = params.offset;\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n\n    this._scrollRef.scrollTo(this.props.horizontal ? {\n      x: offset,\n      animated: animated\n    } : {\n      y: offset,\n      animated: animated\n    });\n  };\n\n  _proto.recordInteraction = function recordInteraction() {\n    this._nestedChildLists.forEach(function (childList) {\n      childList.ref && childList.ref.recordInteraction();\n    });\n\n    this._viewabilityTuples.forEach(function (t) {\n      t.viewabilityHelper.recordInteraction();\n    });\n\n    this._updateViewableItems(this.props.data);\n  };\n\n  _proto.flashScrollIndicators = function flashScrollIndicators() {\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    this._scrollRef.flashScrollIndicators();\n  };\n\n  _proto.getScrollResponder = function getScrollResponder() {\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\n      return this._scrollRef.getScrollResponder();\n    }\n  };\n\n  _proto.getScrollableNode = function getScrollableNode() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      return this._scrollRef.getScrollableNode();\n    } else {\n      return findNodeHandle(this._scrollRef);\n    }\n  };\n\n  _proto.getScrollRef = function getScrollRef() {\n    if (this._scrollRef && this._scrollRef.getScrollRef) {\n      return this._scrollRef.getScrollRef();\n    } else {\n      return this._scrollRef;\n    }\n  };\n\n  _proto.setNativeProps = function setNativeProps(props) {\n    if (this._scrollRef) {\n      this._scrollRef.setNativeProps(props);\n    }\n  };\n\n  _proto._getCellKey = function _getCellKey() {\n    var _this$context;\n\n    return ((_this$context = this.context) == null ? void 0 : _this$context.cellKey) || 'rootList';\n  };\n\n  _proto._getListKey = function _getListKey() {\n    return this.props.listKey || this._getCellKey();\n  };\n\n  _proto._getDebugInfo = function _getDebugInfo() {\n    var _this$context2;\n\n    return {\n      listKey: this._getListKey(),\n      cellKey: this._getCellKey(),\n      horizontal: !!this.props.horizontal,\n      parent: (_this$context2 = this.context) == null ? void 0 : _this$context2.debugInfo\n    };\n  };\n\n  _proto.hasMore = function hasMore() {\n    return this._hasMore;\n  };\n\n  function VirtualizedList(_props) {\n    var _this;\n\n    _this = _React$PureComponent.call(this, _props) || this;\n\n    _this._getScrollMetrics = function () {\n      return _this._scrollMetrics;\n    };\n\n    _this._getOutermostParentListRef = function () {\n      if (_this._isNestedWithSameOrientation()) {\n        return _this.context.getOutermostParentListRef();\n      } else {\n        return _assertThisInitialized(_this);\n      }\n    };\n\n    _this._getNestedChildState = function (key) {\n      var existingChildData = _this._nestedChildLists.get(key);\n\n      return existingChildData && existingChildData.state;\n    };\n\n    _this._registerAsNestedChild = function (childList) {\n      var childListsInCell = _this._cellKeysToChildListKeys.get(childList.cellKey) || new Set();\n      childListsInCell.add(childList.key);\n\n      _this._cellKeysToChildListKeys.set(childList.cellKey, childListsInCell);\n\n      var existingChildData = _this._nestedChildLists.get(childList.key);\n\n      if (existingChildData && existingChildData.ref !== null) {\n        console.error('A VirtualizedList contains a cell which itself contains ' + 'more than one VirtualizedList of the same orientation as the parent ' + 'list. You must pass a unique listKey prop to each sibling list.\\n\\n' + describeNestedLists(_objectSpread(_objectSpread({}, childList), {}, {\n          horizontal: !!childList.ref.props.horizontal\n        })));\n      }\n\n      _this._nestedChildLists.set(childList.key, {\n        ref: childList.ref,\n        state: null\n      });\n\n      if (_this._hasInteracted) {\n        childList.ref.recordInteraction();\n      }\n    };\n\n    _this._unregisterAsNestedChild = function (childList) {\n      _this._nestedChildLists.set(childList.key, {\n        ref: null,\n        state: childList.state\n      });\n    };\n\n    _this._onUpdateSeparators = function (keys, newProps) {\n      keys.forEach(function (key) {\n        var ref = key != null && _this._cellRefs[key];\n        ref && ref.updateSeparatorProps(newProps);\n      });\n    };\n\n    _this._averageCellLength = 0;\n    _this._cellKeysToChildListKeys = new Map();\n    _this._cellRefs = {};\n    _this._frames = {};\n    _this._footerLength = 0;\n    _this._hasDoneInitialScroll = false;\n    _this._hasInteracted = false;\n    _this._hasMore = false;\n    _this._hasWarned = {};\n    _this._headerLength = 0;\n    _this._hiPriInProgress = false;\n    _this._highestMeasuredFrameIndex = 0;\n    _this._indicesToKeys = new Map();\n    _this._nestedChildLists = new Map();\n    _this._offsetFromParentVirtualizedList = 0;\n    _this._prevParentOffset = 0;\n    _this._scrollMetrics = {\n      contentLength: 0,\n      dOffset: 0,\n      dt: 10,\n      offset: 0,\n      timestamp: 0,\n      velocity: 0,\n      visibleLength: 0\n    };\n    _this._scrollRef = null;\n    _this._sentEndForContentLength = 0;\n    _this._totalCellLength = 0;\n    _this._totalCellsMeasured = 0;\n    _this._viewabilityTuples = [];\n\n    _this._captureScrollRef = function (ref) {\n      _this._scrollRef = ref;\n    };\n\n    _this._defaultRenderScrollComponent = function (props) {\n      var onRefresh = props.onRefresh;\n\n      if (_this._isNestedWithSameOrientation()) {\n        return React.createElement(View, props);\n      } else if (onRefresh) {\n        invariant(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify(props.refreshing) + '`');\n        return React.createElement(ScrollView, _extends({}, props, {\n          refreshControl: props.refreshControl == null ? React.createElement(RefreshControl, {\n            refreshing: props.refreshing,\n            onRefresh: onRefresh,\n            progressViewOffset: props.progressViewOffset\n          }) : props.refreshControl\n        }));\n      } else {\n        return React.createElement(ScrollView, props);\n      }\n    };\n\n    _this._onCellUnmount = function (cellKey) {\n      var curr = _this._frames[cellKey];\n\n      if (curr) {\n        _this._frames[cellKey] = _objectSpread(_objectSpread({}, curr), {}, {\n          inLayout: false\n        });\n      }\n    };\n\n    _this._onLayout = function (e) {\n      if (_this._isNestedWithSameOrientation()) {\n        _this.measureLayoutRelativeToContainingList();\n      } else {\n        _this._scrollMetrics.visibleLength = _this._selectLength(e.nativeEvent.layout);\n      }\n\n      _this.props.onLayout && _this.props.onLayout(e);\n\n      _this._scheduleCellsToRenderUpdate();\n\n      _this._maybeCallOnEndReached();\n    };\n\n    _this._onLayoutEmpty = function (e) {\n      _this.props.onLayout && _this.props.onLayout(e);\n    };\n\n    _this._onLayoutFooter = function (e) {\n      _this._triggerRemeasureForChildListsInCell(_this._getFooterCellKey());\n\n      _this._footerLength = _this._selectLength(e.nativeEvent.layout);\n    };\n\n    _this._onLayoutHeader = function (e) {\n      _this._headerLength = _this._selectLength(e.nativeEvent.layout);\n    };\n\n    _this._onContentSizeChange = function (width, height) {\n      if (width > 0 && height > 0 && _this.props.initialScrollIndex != null && _this.props.initialScrollIndex > 0 && !_this._hasDoneInitialScroll) {\n        _this._hasDoneInitialScroll = true;\n      }\n\n      if (_this.props.onContentSizeChange) {\n        _this.props.onContentSizeChange(width, height);\n      }\n\n      _this._scrollMetrics.contentLength = _this._selectLength({\n        height: height,\n        width: width\n      });\n\n      _this._scheduleCellsToRenderUpdate();\n\n      _this._maybeCallOnEndReached();\n    };\n\n    _this._convertParentScrollMetrics = function (metrics) {\n      var offset = metrics.offset - _this._offsetFromParentVirtualizedList;\n      var visibleLength = metrics.visibleLength;\n      var dOffset = offset - _this._scrollMetrics.offset;\n      var contentLength = _this._scrollMetrics.contentLength;\n      return {\n        visibleLength: visibleLength,\n        contentLength: contentLength,\n        offset: offset,\n        dOffset: dOffset\n      };\n    };\n\n    _this._onScroll = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref._onScroll(e);\n      });\n\n      if (_this.props.onScroll) {\n        _this.props.onScroll(e);\n      }\n\n      var timestamp = e.timeStamp;\n\n      var visibleLength = _this._selectLength(e.nativeEvent.layoutMeasurement);\n\n      var contentLength = _this._selectLength(e.nativeEvent.contentSize);\n\n      var offset = _this._selectOffset(e.nativeEvent.contentOffset);\n\n      var dOffset = offset - _this._scrollMetrics.offset;\n\n      if (_this._isNestedWithSameOrientation()) {\n        if (_this._scrollMetrics.contentLength === 0) {\n          return;\n        }\n\n        var _this$_convertParentS = _this._convertParentScrollMetrics({\n          visibleLength: visibleLength,\n          offset: offset\n        });\n\n        visibleLength = _this$_convertParentS.visibleLength;\n        contentLength = _this$_convertParentS.contentLength;\n        offset = _this$_convertParentS.offset;\n        dOffset = _this$_convertParentS.dOffset;\n      }\n\n      var dt = _this._scrollMetrics.timestamp ? Math.max(1, timestamp - _this._scrollMetrics.timestamp) : 1;\n      var velocity = dOffset / dt;\n\n      if (dt > 500 && _this._scrollMetrics.dt > 500 && contentLength > 5 * visibleLength && !_this._hasWarned.perf) {\n        infoLog('VirtualizedList: You have a large list that is slow to update - make sure your ' + 'renderItem function renders components that follow React performance best practices ' + 'like PureComponent, shouldComponentUpdate, etc.', {\n          dt: dt,\n          prevDt: _this._scrollMetrics.dt,\n          contentLength: contentLength\n        });\n        _this._hasWarned.perf = true;\n      }\n\n      _this._scrollMetrics = {\n        contentLength: contentLength,\n        dt: dt,\n        dOffset: dOffset,\n        offset: offset,\n        timestamp: timestamp,\n        velocity: velocity,\n        visibleLength: visibleLength\n      };\n\n      _this._updateViewableItems(_this.props.data);\n\n      if (!_this.props) {\n        return;\n      }\n\n      _this._maybeCallOnEndReached();\n\n      if (velocity !== 0) {\n        _this._fillRateHelper.activate();\n      }\n\n      _this._computeBlankness();\n\n      _this._scheduleCellsToRenderUpdate();\n    };\n\n    _this._onScrollBeginDrag = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref._onScrollBeginDrag(e);\n      });\n\n      _this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.recordInteraction();\n      });\n\n      _this._hasInteracted = true;\n      _this.props.onScrollBeginDrag && _this.props.onScrollBeginDrag(e);\n    };\n\n    _this._onScrollEndDrag = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref._onScrollEndDrag(e);\n      });\n\n      var velocity = e.nativeEvent.velocity;\n\n      if (velocity) {\n        _this._scrollMetrics.velocity = _this._selectOffset(velocity);\n      }\n\n      _this._computeBlankness();\n\n      _this.props.onScrollEndDrag && _this.props.onScrollEndDrag(e);\n    };\n\n    _this._onMomentumScrollBegin = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref._onMomentumScrollBegin(e);\n      });\n\n      _this.props.onMomentumScrollBegin && _this.props.onMomentumScrollBegin(e);\n    };\n\n    _this._onMomentumScrollEnd = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref._onMomentumScrollEnd(e);\n      });\n\n      _this._scrollMetrics.velocity = 0;\n\n      _this._computeBlankness();\n\n      _this.props.onMomentumScrollEnd && _this.props.onMomentumScrollEnd(e);\n    };\n\n    _this._updateCellsToRender = function () {\n      var _this$props3 = _this.props,\n          data = _this$props3.data,\n          getItemCount = _this$props3.getItemCount,\n          onEndReachedThreshold = _this$props3.onEndReachedThreshold;\n\n      var isVirtualizationDisabled = _this._isVirtualizationDisabled();\n\n      _this._updateViewableItems(data);\n\n      if (!data) {\n        return;\n      }\n\n      _this.setState(function (state) {\n        var newState;\n        var _this$_scrollMetrics = _this._scrollMetrics,\n            contentLength = _this$_scrollMetrics.contentLength,\n            offset = _this$_scrollMetrics.offset,\n            visibleLength = _this$_scrollMetrics.visibleLength;\n\n        if (!isVirtualizationDisabled) {\n          if (visibleLength > 0 && contentLength > 0) {\n            if (!_this.props.initialScrollIndex || _this._scrollMetrics.offset) {\n              newState = computeWindowedRenderLimits(_this.props, state, _this._getFrameMetricsApprox, _this._scrollMetrics);\n            }\n          }\n        } else {\n          var distanceFromEnd = contentLength - visibleLength - offset;\n          var renderAhead = distanceFromEnd < onEndReachedThreshold * visibleLength ? _this.props.maxToRenderPerBatch : 0;\n          newState = {\n            first: 0,\n            last: Math.min(state.last + renderAhead, getItemCount(data) - 1)\n          };\n        }\n\n        if (newState && _this._nestedChildLists.size > 0) {\n          var newFirst = newState.first;\n          var newLast = newState.last;\n\n          for (var ii = newFirst; ii <= newLast; ii++) {\n            var cellKeyForIndex = _this._indicesToKeys.get(ii);\n\n            var childListKeys = cellKeyForIndex && _this._cellKeysToChildListKeys.get(cellKeyForIndex);\n\n            if (!childListKeys) {\n              continue;\n            }\n\n            var someChildHasMore = false;\n\n            for (var _iterator = _createForOfIteratorHelperLoose(childListKeys), _step; !(_step = _iterator()).done;) {\n              var childKey = _step.value;\n\n              var childList = _this._nestedChildLists.get(childKey);\n\n              if (childList && childList.ref && childList.ref.hasMore()) {\n                someChildHasMore = true;\n                break;\n              }\n            }\n\n            if (someChildHasMore && newState) {\n              newState.last = ii;\n              break;\n            }\n          }\n        }\n\n        if (newState != null && newState.first === state.first && newState.last === state.last) {\n          newState = null;\n        }\n\n        return newState;\n      });\n    };\n\n    _this._createViewToken = function (index, isViewable) {\n      var _this$props4 = _this.props,\n          data = _this$props4.data,\n          getItem = _this$props4.getItem,\n          keyExtractor = _this$props4.keyExtractor;\n      var item = getItem(data, index);\n      return {\n        index: index,\n        item: item,\n        key: keyExtractor(item, index),\n        isViewable: isViewable\n      };\n    };\n\n    _this._getFrameMetricsApprox = function (index) {\n      var frame = _this._getFrameMetrics(index);\n\n      if (frame && frame.index === index) {\n        return frame;\n      } else {\n        var getItemLayout = _this.props.getItemLayout;\n        invariant(!getItemLayout, 'Should not have to estimate frames when a measurement metrics function is provided');\n        return {\n          length: _this._averageCellLength,\n          offset: _this._averageCellLength * index\n        };\n      }\n    };\n\n    _this._getFrameMetrics = function (index) {\n      var _this$props5 = _this.props,\n          data = _this$props5.data,\n          getItem = _this$props5.getItem,\n          getItemCount = _this$props5.getItemCount,\n          getItemLayout = _this$props5.getItemLayout,\n          keyExtractor = _this$props5.keyExtractor;\n      invariant(getItemCount(data) > index, 'Tried to get frame for out of range index ' + index);\n      var item = getItem(data, index);\n\n      var frame = item && _this._frames[keyExtractor(item, index)];\n\n      if (!frame || frame.index !== index) {\n        if (getItemLayout) {\n          frame = getItemLayout(data, index);\n        }\n      }\n\n      return frame;\n    };\n\n    invariant(!_props.onScroll || !_props.onScroll.__isNative, 'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' + 'to support native onScroll events with useNativeDriver');\n    invariant(_props.windowSize > 0, 'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.');\n    _this._fillRateHelper = new FillRateHelper(_this._getFrameMetrics);\n    _this._updateCellsToRenderBatcher = new Batchinator(_this._updateCellsToRender, _this.props.updateCellsBatchingPeriod);\n\n    if (_this.props.viewabilityConfigCallbackPairs) {\n      _this._viewabilityTuples = _this.props.viewabilityConfigCallbackPairs.map(function (pair) {\n        return {\n          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged\n        };\n      });\n    } else if (_this.props.onViewableItemsChanged) {\n      var onViewableItemsChanged = _this.props.onViewableItemsChanged;\n\n      _this._viewabilityTuples.push({\n        viewabilityHelper: new ViewabilityHelper(_this.props.viewabilityConfig),\n        onViewableItemsChanged: onViewableItemsChanged\n      });\n    }\n\n    var initialState = {\n      first: _this.props.initialScrollIndex || 0,\n      last: Math.min(_this.props.getItemCount(_this.props.data), (_this.props.initialScrollIndex || 0) + _this.props.initialNumToRender) - 1\n    };\n\n    if (_this._isNestedWithSameOrientation()) {\n      var storedState = _this.context.getNestedChildState(_this._getListKey());\n\n      if (storedState) {\n        initialState = storedState;\n        _this.state = storedState;\n        _this._frames = storedState.frames;\n      }\n    }\n\n    _this.state = initialState;\n    return _this;\n  }\n\n  _proto.componentDidMount = function componentDidMount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.registerAsNestedChild({\n        cellKey: this._getCellKey(),\n        key: this._getListKey(),\n        ref: this,\n        parentDebugInfo: this.context.debugInfo\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.unregisterAsNestedChild({\n        key: this._getListKey(),\n        state: {\n          first: this.state.first,\n          last: this.state.last,\n          frames: this._frames\n        }\n      });\n    }\n\n    this._updateViewableItems(null);\n\n    this._updateCellsToRenderBatcher.dispose({\n      abort: true\n    });\n\n    this._viewabilityTuples.forEach(function (tuple) {\n      tuple.viewabilityHelper.dispose();\n    });\n\n    this._fillRateHelper.deactivateAndFlush();\n  };\n\n  VirtualizedList.getDerivedStateFromProps = function getDerivedStateFromProps(newProps, prevState) {\n    var data = newProps.data,\n        getItemCount = newProps.getItemCount,\n        maxToRenderPerBatch = newProps.maxToRenderPerBatch;\n    return {\n      first: Math.max(0, Math.min(prevState.first, getItemCount(data) - 1 - maxToRenderPerBatch)),\n      last: Math.max(0, Math.min(prevState.last, getItemCount(data) - 1))\n    };\n  };\n\n  _proto._pushCells = function _pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, first, last, inversionStyle) {\n    var _this2 = this;\n\n    var _this$props6 = this.props,\n        CellRendererComponent = _this$props6.CellRendererComponent,\n        ItemSeparatorComponent = _this$props6.ItemSeparatorComponent,\n        data = _this$props6.data,\n        getItem = _this$props6.getItem,\n        getItemCount = _this$props6.getItemCount,\n        horizontal = _this$props6.horizontal,\n        keyExtractor = _this$props6.keyExtractor;\n    var stickyOffset = this.props.ListHeaderComponent ? 1 : 0;\n    var end = getItemCount(data) - 1;\n    var prevCellKey;\n    last = Math.min(end, last);\n\n    var _loop = function _loop(ii) {\n      var item = getItem(data, ii);\n      var key = keyExtractor(item, ii);\n\n      _this2._indicesToKeys.set(ii, key);\n\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n        stickyHeaderIndices.push(cells.length);\n      }\n\n      cells.push(React.createElement(CellRenderer, {\n        CellRendererComponent: CellRendererComponent,\n        ItemSeparatorComponent: ii < end ? ItemSeparatorComponent : undefined,\n        cellKey: key,\n        fillRateHelper: _this2._fillRateHelper,\n        horizontal: horizontal,\n        index: ii,\n        inversionStyle: inversionStyle,\n        item: item,\n        key: key,\n        prevCellKey: prevCellKey,\n        onUpdateSeparators: _this2._onUpdateSeparators,\n        onLayout: function onLayout(e) {\n          return _this2._onCellLayout(e, key, ii);\n        },\n        onUnmount: _this2._onCellUnmount,\n        parentProps: _this2.props,\n        ref: function ref(_ref) {\n          _this2._cellRefs[key] = _ref;\n        }\n      }));\n      prevCellKey = key;\n    };\n\n    for (var ii = first; ii <= last; ii++) {\n      _loop(ii);\n    }\n  };\n\n  _proto._isVirtualizationDisabled = function _isVirtualizationDisabled() {\n    return this.props.disableVirtualization || false;\n  };\n\n  _proto._isNestedWithSameOrientation = function _isNestedWithSameOrientation() {\n    var nestedContext = this.context;\n    return !!(nestedContext && !!nestedContext.horizontal === !!this.props.horizontal);\n  };\n\n  _proto.render = function render() {\n    var _this3 = this;\n\n    if (__DEV__) {\n      var flatStyles = flattenStyle(this.props.contentContainerStyle);\n\n      if (flatStyles != null && flatStyles.flexWrap === 'wrap') {\n        console.warn('`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' + 'Consider using `numColumns` with `FlatList` instead.');\n      }\n    }\n\n    var _this$props7 = this.props,\n        ListEmptyComponent = _this$props7.ListEmptyComponent,\n        ListFooterComponent = _this$props7.ListFooterComponent,\n        ListHeaderComponent = _this$props7.ListHeaderComponent;\n    var _this$props8 = this.props,\n        data = _this$props8.data,\n        horizontal = _this$props8.horizontal;\n\n    var isVirtualizationDisabled = this._isVirtualizationDisabled();\n\n    var inversionStyle = this.props.inverted ? this.props.horizontal ? styles.horizontallyInverted : styles.verticallyInverted : null;\n    var cells = [];\n    var stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n    var stickyHeaderIndices = [];\n\n    if (ListHeaderComponent) {\n      if (stickyIndicesFromProps.has(0)) {\n        stickyHeaderIndices.push(0);\n      }\n\n      var element = React.isValidElement(ListHeaderComponent) ? ListHeaderComponent : React.createElement(ListHeaderComponent, null);\n      cells.push(React.createElement(VirtualizedListCellContextProvider, {\n        cellKey: this._getCellKey() + '-header',\n        key: \"$header\"\n      }, React.createElement(View, {\n        onLayout: this._onLayoutHeader,\n        style: StyleSheet.compose(inversionStyle, this.props.ListHeaderComponentStyle)\n      }, element)));\n    }\n\n    var itemCount = this.props.getItemCount(data);\n\n    if (itemCount > 0) {\n      _usedIndexForKey = false;\n      _keylessItemComponentName = '';\n      var spacerKey = !horizontal ? 'height' : 'width';\n      var lastInitialIndex = this.props.initialScrollIndex ? -1 : this.props.initialNumToRender - 1;\n      var _this$state = this.state,\n          first = _this$state.first,\n          last = _this$state.last;\n\n      this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, 0, lastInitialIndex, inversionStyle);\n\n      var firstAfterInitial = Math.max(lastInitialIndex + 1, first);\n\n      if (!isVirtualizationDisabled && first > lastInitialIndex + 1) {\n        var insertedStickySpacer = false;\n\n        if (stickyIndicesFromProps.size > 0) {\n          var stickyOffset = ListHeaderComponent ? 1 : 0;\n\n          for (var ii = firstAfterInitial - 1; ii > lastInitialIndex; ii--) {\n            if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n              var _ref2, _ref3;\n\n              var initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n\n              var stickyBlock = this._getFrameMetricsApprox(ii);\n\n              var leadSpace = stickyBlock.offset - initBlock.offset - (this.props.initialScrollIndex ? 0 : initBlock.length);\n              cells.push(React.createElement(View, {\n                key: \"$sticky_lead\",\n                style: (_ref2 = {}, _ref2[spacerKey] = leadSpace, _ref2)\n              }));\n\n              this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, ii, ii, inversionStyle);\n\n              var trailSpace = this._getFrameMetricsApprox(first).offset - (stickyBlock.offset + stickyBlock.length);\n              cells.push(React.createElement(View, {\n                key: \"$sticky_trail\",\n                style: (_ref3 = {}, _ref3[spacerKey] = trailSpace, _ref3)\n              }));\n              insertedStickySpacer = true;\n              break;\n            }\n          }\n        }\n\n        if (!insertedStickySpacer) {\n          var _ref4;\n\n          var _initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n\n          var firstSpace = this._getFrameMetricsApprox(first).offset - (_initBlock.offset + _initBlock.length);\n\n          cells.push(React.createElement(View, {\n            key: \"$lead_spacer\",\n            style: (_ref4 = {}, _ref4[spacerKey] = firstSpace, _ref4)\n          }));\n        }\n      }\n\n      this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, firstAfterInitial, last, inversionStyle);\n\n      if (!this._hasWarned.keys && _usedIndexForKey) {\n        console.warn('VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' + 'item or provide a custom keyExtractor.', _keylessItemComponentName);\n        this._hasWarned.keys = true;\n      }\n\n      if (!isVirtualizationDisabled && last < itemCount - 1) {\n        var _ref5;\n\n        var lastFrame = this._getFrameMetricsApprox(last);\n\n        var end = this.props.getItemLayout ? itemCount - 1 : Math.min(itemCount - 1, this._highestMeasuredFrameIndex);\n\n        var endFrame = this._getFrameMetricsApprox(end);\n\n        var tailSpacerLength = endFrame.offset + endFrame.length - (lastFrame.offset + lastFrame.length);\n        cells.push(React.createElement(View, {\n          key: \"$tail_spacer\",\n          style: (_ref5 = {}, _ref5[spacerKey] = tailSpacerLength, _ref5)\n        }));\n      }\n    } else if (ListEmptyComponent) {\n      var _element = React.isValidElement(ListEmptyComponent) ? ListEmptyComponent : React.createElement(ListEmptyComponent, null);\n\n      cells.push(React.cloneElement(_element, {\n        key: '$empty',\n        onLayout: function onLayout(event) {\n          _this3._onLayoutEmpty(event);\n\n          if (_element.props.onLayout) {\n            _element.props.onLayout(event);\n          }\n        },\n        style: StyleSheet.compose(inversionStyle, _element.props.style)\n      }));\n    }\n\n    if (ListFooterComponent) {\n      var _element2 = React.isValidElement(ListFooterComponent) ? ListFooterComponent : React.createElement(ListFooterComponent, null);\n\n      cells.push(React.createElement(VirtualizedListCellContextProvider, {\n        cellKey: this._getFooterCellKey(),\n        key: \"$footer\"\n      }, React.createElement(View, {\n        onLayout: this._onLayoutFooter,\n        style: StyleSheet.compose(inversionStyle, this.props.ListFooterComponentStyle)\n      }, _element2)));\n    }\n\n    var scrollProps = _objectSpread(_objectSpread({}, this.props), {}, {\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      onScroll: this._onScroll,\n      onScrollBeginDrag: this._onScrollBeginDrag,\n      onScrollEndDrag: this._onScrollEndDrag,\n      onMomentumScrollBegin: this._onMomentumScrollBegin,\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\n      scrollEventThrottle: this.props.scrollEventThrottle,\n      stickyHeaderIndices: stickyHeaderIndices,\n      style: inversionStyle ? [inversionStyle, this.props.style] : this.props.style\n    });\n\n    this._hasMore = this.state.last < this.props.getItemCount(this.props.data) - 1;\n    var innerRet = React.createElement(VirtualizedListContextProvider, {\n      value: {\n        cellKey: null,\n        getScrollMetrics: this._getScrollMetrics,\n        horizontal: this.props.horizontal,\n        getOutermostParentListRef: this._getOutermostParentListRef,\n        getNestedChildState: this._getNestedChildState,\n        registerAsNestedChild: this._registerAsNestedChild,\n        unregisterAsNestedChild: this._unregisterAsNestedChild,\n        debugInfo: this._getDebugInfo()\n      }\n    }, React.cloneElement((this.props.renderScrollComponent || this._defaultRenderScrollComponent)(scrollProps), {\n      ref: this._captureScrollRef\n    }, cells));\n    var ret = innerRet;\n\n    if (this.props.debug) {\n      return React.createElement(View, {\n        style: styles.debug\n      }, ret, this._renderDebugOverlay());\n    } else {\n      return ret;\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this$props9 = this.props,\n        data = _this$props9.data,\n        extraData = _this$props9.extraData;\n\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\n      this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.resetViewableIndices();\n      });\n    }\n\n    var hiPriInProgress = this._hiPriInProgress;\n\n    this._scheduleCellsToRenderUpdate();\n\n    if (hiPriInProgress) {\n      this._hiPriInProgress = false;\n    }\n  };\n\n  _proto._computeBlankness = function _computeBlankness() {\n    this._fillRateHelper.computeBlankness(this.props, this.state, this._scrollMetrics);\n  };\n\n  _proto._onCellLayout = function _onCellLayout(e, cellKey, index) {\n    var layout = e.nativeEvent.layout;\n    var next = {\n      offset: this._selectOffset(layout),\n      length: this._selectLength(layout),\n      index: index,\n      inLayout: true\n    };\n    var curr = this._frames[cellKey];\n\n    if (!curr || next.offset !== curr.offset || next.length !== curr.length || index !== curr.index) {\n      this._totalCellLength += next.length - (curr ? curr.length : 0);\n      this._totalCellsMeasured += curr ? 0 : 1;\n      this._averageCellLength = this._totalCellLength / this._totalCellsMeasured;\n      this._frames[cellKey] = next;\n      this._highestMeasuredFrameIndex = Math.max(this._highestMeasuredFrameIndex, index);\n\n      this._scheduleCellsToRenderUpdate();\n    } else {\n      this._frames[cellKey].inLayout = true;\n    }\n\n    this._triggerRemeasureForChildListsInCell(cellKey);\n\n    this._computeBlankness();\n\n    this._updateViewableItems(this.props.data);\n  };\n\n  _proto._triggerRemeasureForChildListsInCell = function _triggerRemeasureForChildListsInCell(cellKey) {\n    var childListKeys = this._cellKeysToChildListKeys.get(cellKey);\n\n    if (childListKeys) {\n      for (var _iterator2 = _createForOfIteratorHelperLoose(childListKeys), _step2; !(_step2 = _iterator2()).done;) {\n        var childKey = _step2.value;\n\n        var childList = this._nestedChildLists.get(childKey);\n\n        childList && childList.ref && childList.ref.measureLayoutRelativeToContainingList();\n      }\n    }\n  };\n\n  _proto.measureLayoutRelativeToContainingList = function measureLayoutRelativeToContainingList() {\n    var _this4 = this;\n\n    try {\n      if (!this._scrollRef) {\n        return;\n      }\n\n      this._scrollRef.measureLayout(this.context.getOutermostParentListRef().getScrollRef(), function (x, y, width, height) {\n        _this4._offsetFromParentVirtualizedList = _this4._selectOffset({\n          x: x,\n          y: y\n        });\n        _this4._scrollMetrics.contentLength = _this4._selectLength({\n          width: width,\n          height: height\n        });\n\n        var scrollMetrics = _this4._convertParentScrollMetrics(_this4.context.getScrollMetrics());\n\n        _this4._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n        _this4._scrollMetrics.offset = scrollMetrics.offset;\n      }, function (error) {\n        console.warn(\"VirtualizedList: Encountered an error while measuring a list's\" + ' offset from its containing VirtualizedList.');\n      });\n    } catch (error) {\n      console.warn('measureLayoutRelativeToContainingList threw an error', error.stack);\n    }\n  };\n\n  _proto._getFooterCellKey = function _getFooterCellKey() {\n    return this._getCellKey() + '-footer';\n  };\n\n  _proto._renderDebugOverlay = function _renderDebugOverlay() {\n    var normalize = this._scrollMetrics.visibleLength / (this._scrollMetrics.contentLength || 1);\n    var framesInLayout = [];\n    var itemCount = this.props.getItemCount(this.props.data);\n\n    for (var ii = 0; ii < itemCount; ii++) {\n      var frame = this._getFrameMetricsApprox(ii);\n\n      if (frame.inLayout) {\n        framesInLayout.push(frame);\n      }\n    }\n\n    var windowTop = this._getFrameMetricsApprox(this.state.first).offset;\n\n    var frameLast = this._getFrameMetricsApprox(this.state.last);\n\n    var windowLen = frameLast.offset + frameLast.length - windowTop;\n    var visTop = this._scrollMetrics.offset;\n    var visLen = this._scrollMetrics.visibleLength;\n    return React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlay]\n    }, framesInLayout.map(function (f, ii) {\n      return React.createElement(View, {\n        key: 'f' + ii,\n        style: [styles.debugOverlayBase, styles.debugOverlayFrame, {\n          top: f.offset * normalize,\n          height: f.length * normalize\n        }]\n      });\n    }), React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlayFrameLast, {\n        top: windowTop * normalize,\n        height: windowLen * normalize\n      }]\n    }), React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlayFrameVis, {\n        top: visTop * normalize,\n        height: visLen * normalize\n      }]\n    }));\n  };\n\n  _proto._selectLength = function _selectLength(metrics) {\n    return !this.props.horizontal ? metrics.height : metrics.width;\n  };\n\n  _proto._selectOffset = function _selectOffset(metrics) {\n    return !this.props.horizontal ? metrics.y : metrics.x;\n  };\n\n  _proto._maybeCallOnEndReached = function _maybeCallOnEndReached() {\n    var _this$props10 = this.props,\n        data = _this$props10.data,\n        getItemCount = _this$props10.getItemCount,\n        onEndReached = _this$props10.onEndReached,\n        onEndReachedThreshold = _this$props10.onEndReachedThreshold;\n    var _this$_scrollMetrics2 = this._scrollMetrics,\n        contentLength = _this$_scrollMetrics2.contentLength,\n        visibleLength = _this$_scrollMetrics2.visibleLength,\n        offset = _this$_scrollMetrics2.offset;\n    var distanceFromEnd = contentLength - visibleLength - offset;\n    var threshold = onEndReachedThreshold ? onEndReachedThreshold * visibleLength : 2;\n\n    if (onEndReached && this.state.last === getItemCount(data) - 1 && distanceFromEnd < threshold && this._scrollMetrics.contentLength !== this._sentEndForContentLength) {\n      this._sentEndForContentLength = this._scrollMetrics.contentLength;\n      onEndReached({\n        distanceFromEnd: distanceFromEnd\n      });\n    } else if (distanceFromEnd > threshold) {\n      this._sentEndForContentLength = 0;\n    }\n  };\n\n  _proto._scheduleCellsToRenderUpdate = function _scheduleCellsToRenderUpdate() {\n    var _this$state2 = this.state,\n        first = _this$state2.first,\n        last = _this$state2.last;\n    var _this$_scrollMetrics3 = this._scrollMetrics,\n        offset = _this$_scrollMetrics3.offset,\n        visibleLength = _this$_scrollMetrics3.visibleLength,\n        velocity = _this$_scrollMetrics3.velocity;\n    var itemCount = this.props.getItemCount(this.props.data);\n    var hiPri = false;\n    var scrollingThreshold = this.props.onEndReachedThreshold * visibleLength / 2;\n\n    if (first > 0) {\n      var distTop = offset - this._getFrameMetricsApprox(first).offset;\n\n      hiPri = hiPri || distTop < 0 || velocity < -2 && distTop < scrollingThreshold;\n    }\n\n    if (last < itemCount - 1) {\n      var distBottom = this._getFrameMetricsApprox(last).offset - (offset + visibleLength);\n      hiPri = hiPri || distBottom < 0 || velocity > 2 && distBottom < scrollingThreshold;\n    }\n\n    if (hiPri && (this._averageCellLength || this.props.getItemLayout) && !this._hiPriInProgress) {\n      this._hiPriInProgress = true;\n\n      this._updateCellsToRenderBatcher.dispose({\n        abort: true\n      });\n\n      this._updateCellsToRender();\n\n      return;\n    } else {\n      this._updateCellsToRenderBatcher.schedule();\n    }\n  };\n\n  _proto._updateViewableItems = function _updateViewableItems(data) {\n    var _this5 = this;\n\n    var getItemCount = this.props.getItemCount;\n\n    this._viewabilityTuples.forEach(function (tuple) {\n      tuple.viewabilityHelper.onUpdate(getItemCount(data), _this5._scrollMetrics.offset, _this5._scrollMetrics.visibleLength, _this5._getFrameMetrics, _this5._createViewToken, tuple.onViewableItemsChanged, _this5.state);\n    });\n  };\n\n  return VirtualizedList;\n}(React.PureComponent);\n\nVirtualizedList.contextType = VirtualizedListContext;\nVirtualizedList.defaultProps = {\n  disableVirtualization: false,\n  horizontal: false,\n  initialNumToRender: 10,\n  keyExtractor: function keyExtractor(item, index) {\n    if (item.key != null) {\n      return item.key;\n    }\n\n    if (item.id != null) {\n      return item.id;\n    }\n\n    _usedIndexForKey = true;\n\n    if (item.type && item.type.displayName) {\n      _keylessItemComponentName = item.type.displayName;\n    }\n\n    return String(index);\n  },\n  maxToRenderPerBatch: 10,\n  onEndReachedThreshold: 2,\n  scrollEventThrottle: 50,\n  updateCellsBatchingPeriod: 50,\n  windowSize: 21\n};\n\nvar CellRenderer = function (_React$Component) {\n  _inheritsLoose(CellRenderer, _React$Component);\n\n  function CellRenderer() {\n    var _this6;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this6 = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this6.state = {\n      separatorProps: {\n        highlighted: false,\n        leadingItem: _this6.props.item\n      }\n    };\n    _this6._separators = {\n      highlight: function highlight() {\n        var _this6$props = _this6.props,\n            cellKey = _this6$props.cellKey,\n            prevCellKey = _this6$props.prevCellKey;\n\n        _this6.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: true\n        });\n      },\n      unhighlight: function unhighlight() {\n        var _this6$props2 = _this6.props,\n            cellKey = _this6$props2.cellKey,\n            prevCellKey = _this6$props2.prevCellKey;\n\n        _this6.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: false\n        });\n      },\n      updateProps: function updateProps(select, newProps) {\n        var _this6$props3 = _this6.props,\n            cellKey = _this6$props3.cellKey,\n            prevCellKey = _this6$props3.prevCellKey;\n\n        _this6.props.onUpdateSeparators([select === 'leading' ? prevCellKey : cellKey], newProps);\n      }\n    };\n    return _this6;\n  }\n\n  CellRenderer.getDerivedStateFromProps = function getDerivedStateFromProps(props, prevState) {\n    return {\n      separatorProps: _objectSpread(_objectSpread({}, prevState.separatorProps), {}, {\n        leadingItem: props.item\n      })\n    };\n  };\n\n  var _proto2 = CellRenderer.prototype;\n\n  _proto2.updateSeparatorProps = function updateSeparatorProps(newProps) {\n    this.setState(function (state) {\n      return {\n        separatorProps: _objectSpread(_objectSpread({}, state.separatorProps), newProps)\n      };\n    });\n  };\n\n  _proto2.componentWillUnmount = function componentWillUnmount() {\n    this.props.onUnmount(this.props.cellKey);\n  };\n\n  _proto2._renderElement = function _renderElement(renderItem, ListItemComponent, item, index) {\n    if (renderItem && ListItemComponent) {\n      console.warn('VirtualizedList: Both ListItemComponent and renderItem props are present. ListItemComponent will take' + ' precedence over renderItem.');\n    }\n\n    if (ListItemComponent) {\n      return React.createElement(ListItemComponent, {\n        item: item,\n        index: index,\n        separators: this._separators\n      });\n    }\n\n    if (renderItem) {\n      return renderItem({\n        item: item,\n        index: index,\n        separators: this._separators\n      });\n    }\n\n    invariant(false, 'VirtualizedList: Either ListItemComponent or renderItem props are required but none were found.');\n  };\n\n  _proto2.render = function render() {\n    var _this$props11 = this.props,\n        CellRendererComponent = _this$props11.CellRendererComponent,\n        ItemSeparatorComponent = _this$props11.ItemSeparatorComponent,\n        fillRateHelper = _this$props11.fillRateHelper,\n        horizontal = _this$props11.horizontal,\n        item = _this$props11.item,\n        index = _this$props11.index,\n        inversionStyle = _this$props11.inversionStyle,\n        parentProps = _this$props11.parentProps;\n    var renderItem = parentProps.renderItem,\n        getItemLayout = parentProps.getItemLayout,\n        ListItemComponent = parentProps.ListItemComponent;\n\n    var element = this._renderElement(renderItem, ListItemComponent, item, index);\n\n    var onLayout = getItemLayout && !parentProps.debug && !fillRateHelper.enabled() ? undefined : this.props.onLayout;\n    var itemSeparator = ItemSeparatorComponent && React.createElement(ItemSeparatorComponent, this.state.separatorProps);\n    var cellStyle = inversionStyle ? horizontal ? [styles.rowReverse, inversionStyle] : [styles.columnReverse, inversionStyle] : horizontal ? [styles.row, inversionStyle] : inversionStyle;\n    var result = !CellRendererComponent ? React.createElement(View, {\n      style: cellStyle,\n      onLayout: onLayout\n    }, element, itemSeparator) : React.createElement(CellRendererComponent, _extends({}, this.props, {\n      style: cellStyle,\n      onLayout: onLayout\n    }), element, itemSeparator);\n    return React.createElement(VirtualizedListCellContextProvider, {\n      cellKey: this.props.cellKey\n    }, result);\n  };\n\n  return CellRenderer;\n}(React.Component);\n\nfunction describeNestedLists(childList) {\n  var trace = 'VirtualizedList trace:\\n' + (\"  Child (\" + (childList.horizontal ? 'horizontal' : 'vertical') + \"):\\n\") + (\"    listKey: \" + childList.key + \"\\n\") + (\"    cellKey: \" + childList.cellKey);\n  var debugInfo = childList.parentDebugInfo;\n\n  while (debugInfo) {\n    trace += \"\\n  Parent (\" + (debugInfo.horizontal ? 'horizontal' : 'vertical') + \"):\\n\" + (\"    listKey: \" + debugInfo.listKey + \"\\n\") + (\"    cellKey: \" + debugInfo.cellKey);\n    debugInfo = debugInfo.parent;\n  }\n\n  return trace;\n}\n\nvar styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: [{\n      scaleY: -1\n    }]\n  },\n  horizontallyInverted: {\n    transform: [{\n      scaleX: -1\n    }]\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  rowReverse: {\n    flexDirection: 'row-reverse'\n  },\n  columnReverse: {\n    flexDirection: 'column-reverse'\n  },\n  debug: {\n    flex: 1\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange'\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2\n  }\n});\nexport default VirtualizedList;\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/Users/garethcozens/Documents/repo/cloudratha/react-native-web-nx-demo/node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/index.js"],"names":["o","Symbol","Array","it","_unsupportedIterableToArray","allowArrayLike","i","done","value","_arrayLikeToArray","n","Object","len","arr","arr2","_extends","arguments","source","target","keys","symbols","ownKeys","_defineProperty","key","enumerable","configurable","writable","obj","self","subClass","superClass","_setPrototypeOf","flattenStyle","StyleSheet","__DEV__","_usedIndexForKey","_keylessItemComponentName","VirtualizedList","_inheritsLoose","_proto","animated","params","veryLast","frame","offset","Math","console","x","y","_this$props","data","horizontal","getItemCount","getItemLayout","onScrollToIndexFailed","index","viewOffset","viewPosition","invariant","averageItemLength","highestMeasuredFrameIndex","item","_this$props2","getItem","itemCount","_index","_objectSpread","childList","t","findNodeHandle","_this$context","listKey","cellKey","parent","_this$context2","_this","_React$PureComponent","_assertThisInitialized","existingChildData","childListsInCell","describeNestedLists","ref","state","contentLength","dOffset","dt","timestamp","velocity","visibleLength","onRefresh","props","React","JSON","refreshControl","refreshing","progressViewOffset","curr","inLayout","e","width","height","metrics","_this$_convertParentS","infoLog","prevDt","tuple","_this$props3","onEndReachedThreshold","isVirtualizationDisabled","_this$_scrollMetrics","newState","computeWindowedRenderLimits","distanceFromEnd","renderAhead","first","last","newFirst","newLast","ii","cellKeyForIndex","childListKeys","someChildHasMore","_iterator","_createForOfIteratorHelperLoose","_step","childKey","_this$props4","keyExtractor","isViewable","length","_this$props5","_props","viewabilityHelper","pair","onViewableItemsChanged","initialState","storedState","parentDebugInfo","frames","abort","newProps","maxToRenderPerBatch","prevState","_this2","_this$props6","CellRendererComponent","ItemSeparatorComponent","stickyOffset","end","_loop","stickyIndicesFromProps","stickyHeaderIndices","cells","fillRateHelper","inversionStyle","prevCellKey","onUpdateSeparators","onLayout","onUnmount","parentProps","nestedContext","_this3","flatStyles","_this$props7","ListEmptyComponent","ListFooterComponent","ListHeaderComponent","_this$props8","styles","element","style","spacerKey","lastInitialIndex","_this$state","firstAfterInitial","insertedStickySpacer","initBlock","stickyBlock","leadSpace","_ref2","trailSpace","_ref3","_initBlock","firstSpace","_ref4","lastFrame","endFrame","tailSpacerLength","_ref5","_element","_element2","scrollProps","onContentSizeChange","onScroll","onScrollBeginDrag","onScrollEndDrag","onMomentumScrollBegin","onMomentumScrollEnd","scrollEventThrottle","innerRet","getScrollMetrics","getOutermostParentListRef","getNestedChildState","registerAsNestedChild","unregisterAsNestedChild","debugInfo","ret","_this$props9","extraData","prevProps","hiPriInProgress","layout","next","_iterator2","_step2","_this4","scrollMetrics","error","normalize","framesInLayout","windowTop","frameLast","windowLen","visTop","visLen","top","f","_this$props10","onEndReached","_this$_scrollMetrics2","threshold","_this$state2","_this$_scrollMetrics3","hiPri","scrollingThreshold","distTop","distBottom","_this5","disableVirtualization","initialNumToRender","String","updateCellsBatchingPeriod","windowSize","CellRenderer","_len","args","_key","_this6","_React$Component","separatorProps","highlighted","leadingItem","highlight","_this6$props","unhighlight","_this6$props2","updateProps","_this6$props3","select","_proto2","renderItem","separators","_this$props11","ListItemComponent","itemSeparator","cellStyle","result","trace","verticallyInverted","transform","scaleY","horizontallyInverted","scaleX","row","flexDirection","rowReverse","columnReverse","debug","flex","debugOverlayBase","position","right","debugOverlay","bottom","borderColor","borderWidth","debugOverlayFrame","left","backgroundColor","debugOverlayFrameLast","debugOverlayFrameVis"],"mappings":"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","sourcesContent":["function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\nimport Batchinator from '../Batchinator';\nimport FillRateHelper from '../FillRateHelper';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport RefreshControl from '../../../exports/RefreshControl';\nimport ScrollView from '../../../exports/ScrollView';\nimport StyleSheet from '../../../exports/StyleSheet';\nimport UIManager from '../../../exports/UIManager';\nimport View from '../../../exports/View';\nimport ViewabilityHelper from '../ViewabilityHelper';\nimport findNodeHandle from '../../../exports/findNodeHandle';\nvar flattenStyle = StyleSheet.flatten;\nimport infoLog from '../infoLog';\nimport invariant from 'fbjs/lib/invariant';\nimport warning from 'fbjs/lib/warning';\nimport { computeWindowedRenderLimits } from '../VirtualizeUtils';\nimport { VirtualizedListCellContextProvider, VirtualizedListContext, VirtualizedListContextProvider } from './VirtualizedListContext.js';\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar _usedIndexForKey = false;\nvar _keylessItemComponentName = '';\n\n/**\n * Base implementation for the more convenient [`<FlatList>`](https://reactnative.dev/docs/flatlist.html)\n * and [`<SectionList>`](https://reactnative.dev/docs/sectionlist.html) components, which are also better\n * documented. In general, this should only really be used if you need more flexibility than\n * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.\n *\n * Virtualization massively improves memory consumption and performance of large lists by\n * maintaining a finite render window of active items and replacing all items outside of the render\n * window with appropriately sized blank space. The window adapts to scrolling behavior, and items\n * are rendered incrementally with low-pri (after any running interactions) if they are far from the\n * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.\n *\n * Some caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` or `id` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n *\n */\nvar VirtualizedList = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(VirtualizedList, _React$PureComponent);\n\n  var _proto = VirtualizedList.prototype;\n\n  // scrollToEnd may be janky without getItemLayout prop\n  _proto.scrollToEnd = function scrollToEnd(params) {\n    var animated = params ? params.animated : true;\n    var veryLast = this.props.getItemCount(this.props.data) - 1;\n\n    var frame = this._getFrameMetricsApprox(veryLast);\n\n    var offset = Math.max(0, frame.offset + frame.length + this._footerLength - this._scrollMetrics.visibleLength);\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n\n    this._scrollRef.scrollTo(this.props.horizontal ? {\n      x: offset,\n      animated: animated\n    } : {\n      y: offset,\n      animated: animated\n    });\n  } // scrollToIndex may be janky without getItemLayout prop\n  ;\n\n  _proto.scrollToIndex = function scrollToIndex(params) {\n    var _this$props = this.props,\n        data = _this$props.data,\n        horizontal = _this$props.horizontal,\n        getItemCount = _this$props.getItemCount,\n        getItemLayout = _this$props.getItemLayout,\n        onScrollToIndexFailed = _this$props.onScrollToIndexFailed;\n    var animated = params.animated,\n        index = params.index,\n        viewOffset = params.viewOffset,\n        viewPosition = params.viewPosition;\n    invariant(index >= 0, \"scrollToIndex out of range: requested index \" + index + \" but minimum is 0\");\n    invariant(getItemCount(data) >= 1, \"scrollToIndex out of range: item length \" + getItemCount(data) + \" but minimum is 1\");\n    invariant(index < getItemCount(data), \"scrollToIndex out of range: requested index \" + index + \" is out of 0 to \" + (getItemCount(data) - 1));\n\n    if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n      invariant(!!onScrollToIndexFailed, 'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' + 'otherwise there is no way to know the location of offscreen indices or handle failures.');\n      onScrollToIndexFailed({\n        averageItemLength: this._averageCellLength,\n        highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n        index: index\n      });\n      return;\n    }\n\n    var frame = this._getFrameMetricsApprox(index);\n\n    var offset = Math.max(0, frame.offset - (viewPosition || 0) * (this._scrollMetrics.visibleLength - frame.length)) - (viewOffset || 0);\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n\n    this._scrollRef.scrollTo(horizontal ? {\n      x: offset,\n      animated: animated\n    } : {\n      y: offset,\n      animated: animated\n    });\n  } // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -\n  // use scrollToIndex instead if possible.\n  ;\n\n  _proto.scrollToItem = function scrollToItem(params) {\n    var item = params.item;\n    var _this$props2 = this.props,\n        data = _this$props2.data,\n        getItem = _this$props2.getItem,\n        getItemCount = _this$props2.getItemCount;\n    var itemCount = getItemCount(data);\n\n    for (var _index = 0; _index < itemCount; _index++) {\n      if (getItem(data, _index) === item) {\n        this.scrollToIndex(_objectSpread(_objectSpread({}, params), {}, {\n          index: _index\n        }));\n        break;\n      }\n    }\n  }\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Param `offset` expects the offset to scroll to.\n   * In case of `horizontal` is true, the offset is the x-value,\n   * in any other case the offset is the y-value.\n   *\n   * Param `animated` (`true` by default) defines whether the list\n   * should do an animation while scrolling.\n   */\n  ;\n\n  _proto.scrollToOffset = function scrollToOffset(params) {\n    var animated = params.animated,\n        offset = params.offset;\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n\n    this._scrollRef.scrollTo(this.props.horizontal ? {\n      x: offset,\n      animated: animated\n    } : {\n      y: offset,\n      animated: animated\n    });\n  };\n\n  _proto.recordInteraction = function recordInteraction() {\n    this._nestedChildLists.forEach(function (childList) {\n      childList.ref && childList.ref.recordInteraction();\n    });\n\n    this._viewabilityTuples.forEach(function (t) {\n      t.viewabilityHelper.recordInteraction();\n    });\n\n    this._updateViewableItems(this.props.data);\n  };\n\n  _proto.flashScrollIndicators = function flashScrollIndicators() {\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    this._scrollRef.flashScrollIndicators();\n  }\n  /**\n   * Provides a handle to the underlying scroll responder.\n   * Note that `this._scrollRef` might not be a `ScrollView`, so we\n   * need to check that it responds to `getScrollResponder` before calling it.\n   */\n  ;\n\n  _proto.getScrollResponder = function getScrollResponder() {\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\n      return this._scrollRef.getScrollResponder();\n    }\n  };\n\n  _proto.getScrollableNode = function getScrollableNode() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      return this._scrollRef.getScrollableNode();\n    } else {\n      return findNodeHandle(this._scrollRef);\n    }\n  };\n\n  _proto.getScrollRef = function getScrollRef() {\n    if (this._scrollRef && this._scrollRef.getScrollRef) {\n      return this._scrollRef.getScrollRef();\n    } else {\n      return this._scrollRef;\n    }\n  };\n\n  _proto.setNativeProps = function setNativeProps(props) {\n    if (this._scrollRef) {\n      this._scrollRef.setNativeProps(props);\n    }\n  };\n\n  _proto._getCellKey = function _getCellKey() {\n    var _this$context;\n\n    return ((_this$context = this.context) == null ? void 0 : _this$context.cellKey) || 'rootList';\n  };\n\n  _proto._getListKey = function _getListKey() {\n    return this.props.listKey || this._getCellKey();\n  };\n\n  _proto._getDebugInfo = function _getDebugInfo() {\n    var _this$context2;\n\n    return {\n      listKey: this._getListKey(),\n      cellKey: this._getCellKey(),\n      horizontal: !!this.props.horizontal,\n      parent: (_this$context2 = this.context) == null ? void 0 : _this$context2.debugInfo\n    };\n  };\n\n  _proto.hasMore = function hasMore() {\n    return this._hasMore;\n  };\n\n  function VirtualizedList(_props) {\n    var _this;\n\n    _this = _React$PureComponent.call(this, _props) || this;\n\n    _this._getScrollMetrics = function () {\n      return _this._scrollMetrics;\n    };\n\n    _this._getOutermostParentListRef = function () {\n      if (_this._isNestedWithSameOrientation()) {\n        return _this.context.getOutermostParentListRef();\n      } else {\n        return _assertThisInitialized(_this);\n      }\n    };\n\n    _this._getNestedChildState = function (key) {\n      var existingChildData = _this._nestedChildLists.get(key);\n\n      return existingChildData && existingChildData.state;\n    };\n\n    _this._registerAsNestedChild = function (childList) {\n      // Register the mapping between this child key and the cellKey for its cell\n      var childListsInCell = _this._cellKeysToChildListKeys.get(childList.cellKey) || new Set();\n      childListsInCell.add(childList.key);\n\n      _this._cellKeysToChildListKeys.set(childList.cellKey, childListsInCell);\n\n      var existingChildData = _this._nestedChildLists.get(childList.key);\n\n      if (existingChildData && existingChildData.ref !== null) {\n        console.error('A VirtualizedList contains a cell which itself contains ' + 'more than one VirtualizedList of the same orientation as the parent ' + 'list. You must pass a unique listKey prop to each sibling list.\\n\\n' + describeNestedLists(_objectSpread(_objectSpread({}, childList), {}, {\n          // We're called from the child's componentDidMount, so it's safe to\n          // read the child's props here (albeit weird).\n          horizontal: !!childList.ref.props.horizontal\n        })));\n      }\n\n      _this._nestedChildLists.set(childList.key, {\n        ref: childList.ref,\n        state: null\n      });\n\n      if (_this._hasInteracted) {\n        childList.ref.recordInteraction();\n      }\n    };\n\n    _this._unregisterAsNestedChild = function (childList) {\n      _this._nestedChildLists.set(childList.key, {\n        ref: null,\n        state: childList.state\n      });\n    };\n\n    _this._onUpdateSeparators = function (keys, newProps) {\n      keys.forEach(function (key) {\n        var ref = key != null && _this._cellRefs[key];\n        ref && ref.updateSeparatorProps(newProps);\n      });\n    };\n\n    _this._averageCellLength = 0;\n    _this._cellKeysToChildListKeys = new Map();\n    _this._cellRefs = {};\n    _this._frames = {};\n    _this._footerLength = 0;\n    _this._hasDoneInitialScroll = false;\n    _this._hasInteracted = false;\n    _this._hasMore = false;\n    _this._hasWarned = {};\n    _this._headerLength = 0;\n    _this._hiPriInProgress = false;\n    _this._highestMeasuredFrameIndex = 0;\n    _this._indicesToKeys = new Map();\n    _this._nestedChildLists = new Map();\n    _this._offsetFromParentVirtualizedList = 0;\n    _this._prevParentOffset = 0;\n    _this._scrollMetrics = {\n      contentLength: 0,\n      dOffset: 0,\n      dt: 10,\n      offset: 0,\n      timestamp: 0,\n      velocity: 0,\n      visibleLength: 0\n    };\n    _this._scrollRef = null;\n    _this._sentEndForContentLength = 0;\n    _this._totalCellLength = 0;\n    _this._totalCellsMeasured = 0;\n    _this._viewabilityTuples = [];\n\n    _this._captureScrollRef = function (ref) {\n      _this._scrollRef = ref;\n    };\n\n    _this._defaultRenderScrollComponent = function (props) {\n      var onRefresh = props.onRefresh;\n\n      if (_this._isNestedWithSameOrientation()) {\n        // $FlowFixMe - Typing ReactNativeComponent revealed errors\n        return /*#__PURE__*/React.createElement(View, props);\n      } else if (onRefresh) {\n        invariant(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' +\n        /* $FlowFixMe(>=0.111.0 site=react_native_fb) This comment suppresses\n         * an error found when Flow v0.111 was deployed. To see the error,\n         * delete this comment and run Flow. */\n        JSON.stringify(props.refreshing) + '`');\n        return (\n          /*#__PURE__*/\n          // $FlowFixMe Invalid prop usage\n          React.createElement(ScrollView, _extends({}, props, {\n            refreshControl: props.refreshControl == null ? /*#__PURE__*/React.createElement(RefreshControl, {\n              refreshing: props.refreshing,\n              onRefresh: onRefresh,\n              progressViewOffset: props.progressViewOffset\n            }) : props.refreshControl\n          }))\n        );\n      } else {\n        // $FlowFixMe Invalid prop usage\n        return /*#__PURE__*/React.createElement(ScrollView, props);\n      }\n    };\n\n    _this._onCellUnmount = function (cellKey) {\n      var curr = _this._frames[cellKey];\n\n      if (curr) {\n        _this._frames[cellKey] = _objectSpread(_objectSpread({}, curr), {}, {\n          inLayout: false\n        });\n      }\n    };\n\n    _this._onLayout = function (e) {\n      if (_this._isNestedWithSameOrientation()) {\n        // Need to adjust our scroll metrics to be relative to our containing\n        // VirtualizedList before we can make claims about list item viewability\n        _this.measureLayoutRelativeToContainingList();\n      } else {\n        _this._scrollMetrics.visibleLength = _this._selectLength(e.nativeEvent.layout);\n      }\n\n      _this.props.onLayout && _this.props.onLayout(e);\n\n      _this._scheduleCellsToRenderUpdate();\n\n      _this._maybeCallOnEndReached();\n    };\n\n    _this._onLayoutEmpty = function (e) {\n      _this.props.onLayout && _this.props.onLayout(e);\n    };\n\n    _this._onLayoutFooter = function (e) {\n      _this._triggerRemeasureForChildListsInCell(_this._getFooterCellKey());\n\n      _this._footerLength = _this._selectLength(e.nativeEvent.layout);\n    };\n\n    _this._onLayoutHeader = function (e) {\n      _this._headerLength = _this._selectLength(e.nativeEvent.layout);\n    };\n\n    _this._onContentSizeChange = function (width, height) {\n      if (width > 0 && height > 0 && _this.props.initialScrollIndex != null && _this.props.initialScrollIndex > 0 && !_this._hasDoneInitialScroll) {\n        _this._hasDoneInitialScroll = true;\n      }\n\n      if (_this.props.onContentSizeChange) {\n        _this.props.onContentSizeChange(width, height);\n      }\n\n      _this._scrollMetrics.contentLength = _this._selectLength({\n        height: height,\n        width: width\n      });\n\n      _this._scheduleCellsToRenderUpdate();\n\n      _this._maybeCallOnEndReached();\n    };\n\n    _this._convertParentScrollMetrics = function (metrics) {\n      // Offset of the top of the nested list relative to the top of its parent's viewport\n      var offset = metrics.offset - _this._offsetFromParentVirtualizedList; // Child's visible length is the same as its parent's\n\n      var visibleLength = metrics.visibleLength;\n      var dOffset = offset - _this._scrollMetrics.offset;\n      var contentLength = _this._scrollMetrics.contentLength;\n      return {\n        visibleLength: visibleLength,\n        contentLength: contentLength,\n        offset: offset,\n        dOffset: dOffset\n      };\n    };\n\n    _this._onScroll = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref._onScroll(e);\n      });\n\n      if (_this.props.onScroll) {\n        _this.props.onScroll(e);\n      }\n\n      var timestamp = e.timeStamp;\n\n      var visibleLength = _this._selectLength(e.nativeEvent.layoutMeasurement);\n\n      var contentLength = _this._selectLength(e.nativeEvent.contentSize);\n\n      var offset = _this._selectOffset(e.nativeEvent.contentOffset);\n\n      var dOffset = offset - _this._scrollMetrics.offset;\n\n      if (_this._isNestedWithSameOrientation()) {\n        if (_this._scrollMetrics.contentLength === 0) {\n          // Ignore scroll events until onLayout has been called and we\n          // know our offset from our offset from our parent\n          return;\n        }\n\n        var _this$_convertParentS = _this._convertParentScrollMetrics({\n          visibleLength: visibleLength,\n          offset: offset\n        });\n\n        visibleLength = _this$_convertParentS.visibleLength;\n        contentLength = _this$_convertParentS.contentLength;\n        offset = _this$_convertParentS.offset;\n        dOffset = _this$_convertParentS.dOffset;\n      }\n\n      var dt = _this._scrollMetrics.timestamp ? Math.max(1, timestamp - _this._scrollMetrics.timestamp) : 1;\n      var velocity = dOffset / dt;\n\n      if (dt > 500 && _this._scrollMetrics.dt > 500 && contentLength > 5 * visibleLength && !_this._hasWarned.perf) {\n        infoLog('VirtualizedList: You have a large list that is slow to update - make sure your ' + 'renderItem function renders components that follow React performance best practices ' + 'like PureComponent, shouldComponentUpdate, etc.', {\n          dt: dt,\n          prevDt: _this._scrollMetrics.dt,\n          contentLength: contentLength\n        });\n        _this._hasWarned.perf = true;\n      }\n\n      _this._scrollMetrics = {\n        contentLength: contentLength,\n        dt: dt,\n        dOffset: dOffset,\n        offset: offset,\n        timestamp: timestamp,\n        velocity: velocity,\n        visibleLength: visibleLength\n      };\n\n      _this._updateViewableItems(_this.props.data);\n\n      if (!_this.props) {\n        return;\n      }\n\n      _this._maybeCallOnEndReached();\n\n      if (velocity !== 0) {\n        _this._fillRateHelper.activate();\n      }\n\n      _this._computeBlankness();\n\n      _this._scheduleCellsToRenderUpdate();\n    };\n\n    _this._onScrollBeginDrag = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref._onScrollBeginDrag(e);\n      });\n\n      _this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.recordInteraction();\n      });\n\n      _this._hasInteracted = true;\n      _this.props.onScrollBeginDrag && _this.props.onScrollBeginDrag(e);\n    };\n\n    _this._onScrollEndDrag = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref._onScrollEndDrag(e);\n      });\n\n      var velocity = e.nativeEvent.velocity;\n\n      if (velocity) {\n        _this._scrollMetrics.velocity = _this._selectOffset(velocity);\n      }\n\n      _this._computeBlankness();\n\n      _this.props.onScrollEndDrag && _this.props.onScrollEndDrag(e);\n    };\n\n    _this._onMomentumScrollBegin = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref._onMomentumScrollBegin(e);\n      });\n\n      _this.props.onMomentumScrollBegin && _this.props.onMomentumScrollBegin(e);\n    };\n\n    _this._onMomentumScrollEnd = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref._onMomentumScrollEnd(e);\n      });\n\n      _this._scrollMetrics.velocity = 0;\n\n      _this._computeBlankness();\n\n      _this.props.onMomentumScrollEnd && _this.props.onMomentumScrollEnd(e);\n    };\n\n    _this._updateCellsToRender = function () {\n      var _this$props3 = _this.props,\n          data = _this$props3.data,\n          getItemCount = _this$props3.getItemCount,\n          onEndReachedThreshold = _this$props3.onEndReachedThreshold;\n\n      var isVirtualizationDisabled = _this._isVirtualizationDisabled();\n\n      _this._updateViewableItems(data);\n\n      if (!data) {\n        return;\n      }\n\n      _this.setState(function (state) {\n        var newState;\n        var _this$_scrollMetrics = _this._scrollMetrics,\n            contentLength = _this$_scrollMetrics.contentLength,\n            offset = _this$_scrollMetrics.offset,\n            visibleLength = _this$_scrollMetrics.visibleLength;\n\n        if (!isVirtualizationDisabled) {\n          // If we run this with bogus data, we'll force-render window {first: 0, last: 0},\n          // and wipe out the initialNumToRender rendered elements.\n          // So let's wait until the scroll view metrics have been set up. And until then,\n          // we will trust the initialNumToRender suggestion\n          if (visibleLength > 0 && contentLength > 0) {\n            // If we have a non-zero initialScrollIndex and run this before we've scrolled,\n            // we'll wipe out the initialNumToRender rendered elements starting at initialScrollIndex.\n            // So let's wait until we've scrolled the view to the right place. And until then,\n            // we will trust the initialScrollIndex suggestion.\n            if (!_this.props.initialScrollIndex || _this._scrollMetrics.offset) {\n              newState = computeWindowedRenderLimits(_this.props, state, _this._getFrameMetricsApprox, _this._scrollMetrics);\n            }\n          }\n        } else {\n          var distanceFromEnd = contentLength - visibleLength - offset;\n          var renderAhead =\n          /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses\n           * an error found when Flow v0.63 was deployed. To see the error\n           * delete this comment and run Flow. */\n          distanceFromEnd < onEndReachedThreshold * visibleLength ? _this.props.maxToRenderPerBatch : 0;\n          newState = {\n            first: 0,\n            last: Math.min(state.last + renderAhead, getItemCount(data) - 1)\n          };\n        }\n\n        if (newState && _this._nestedChildLists.size > 0) {\n          var newFirst = newState.first;\n          var newLast = newState.last; // If some cell in the new state has a child list in it, we should only render\n          // up through that item, so that we give that list a chance to render.\n          // Otherwise there's churn from multiple child lists mounting and un-mounting\n          // their items.\n\n          for (var ii = newFirst; ii <= newLast; ii++) {\n            var cellKeyForIndex = _this._indicesToKeys.get(ii);\n\n            var childListKeys = cellKeyForIndex && _this._cellKeysToChildListKeys.get(cellKeyForIndex);\n\n            if (!childListKeys) {\n              continue;\n            }\n\n            var someChildHasMore = false; // For each cell, need to check whether any child list in it has more elements to render\n\n            for (var _iterator = _createForOfIteratorHelperLoose(childListKeys), _step; !(_step = _iterator()).done;) {\n              var childKey = _step.value;\n\n              var childList = _this._nestedChildLists.get(childKey);\n\n              if (childList && childList.ref && childList.ref.hasMore()) {\n                someChildHasMore = true;\n                break;\n              }\n            }\n\n            if (someChildHasMore && newState) {\n              newState.last = ii;\n              break;\n            }\n          }\n        }\n\n        if (newState != null && newState.first === state.first && newState.last === state.last) {\n          newState = null;\n        }\n\n        return newState;\n      });\n    };\n\n    _this._createViewToken = function (index, isViewable) {\n      var _this$props4 = _this.props,\n          data = _this$props4.data,\n          getItem = _this$props4.getItem,\n          keyExtractor = _this$props4.keyExtractor;\n      var item = getItem(data, index);\n      return {\n        index: index,\n        item: item,\n        key: keyExtractor(item, index),\n        isViewable: isViewable\n      };\n    };\n\n    _this._getFrameMetricsApprox = function (index) {\n      var frame = _this._getFrameMetrics(index);\n\n      if (frame && frame.index === index) {\n        // check for invalid frames due to row re-ordering\n        return frame;\n      } else {\n        var getItemLayout = _this.props.getItemLayout;\n        invariant(!getItemLayout, 'Should not have to estimate frames when a measurement metrics function is provided');\n        return {\n          length: _this._averageCellLength,\n          offset: _this._averageCellLength * index\n        };\n      }\n    };\n\n    _this._getFrameMetrics = function (index) {\n      var _this$props5 = _this.props,\n          data = _this$props5.data,\n          getItem = _this$props5.getItem,\n          getItemCount = _this$props5.getItemCount,\n          getItemLayout = _this$props5.getItemLayout,\n          keyExtractor = _this$props5.keyExtractor;\n      invariant(getItemCount(data) > index, 'Tried to get frame for out of range index ' + index);\n      var item = getItem(data, index);\n\n      var frame = item && _this._frames[keyExtractor(item, index)];\n\n      if (!frame || frame.index !== index) {\n        if (getItemLayout) {\n          frame = getItemLayout(data, index);\n        }\n      }\n      /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.63 was deployed. To see the error delete this\n       * comment and run Flow. */\n\n\n      return frame;\n    };\n\n    invariant( // $FlowFixMe\n    !_props.onScroll || !_props.onScroll.__isNative, 'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' + 'to support native onScroll events with useNativeDriver');\n    invariant(_props.windowSize > 0, 'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.');\n    _this._fillRateHelper = new FillRateHelper(_this._getFrameMetrics);\n    _this._updateCellsToRenderBatcher = new Batchinator(_this._updateCellsToRender, _this.props.updateCellsBatchingPeriod);\n\n    if (_this.props.viewabilityConfigCallbackPairs) {\n      _this._viewabilityTuples = _this.props.viewabilityConfigCallbackPairs.map(function (pair) {\n        return {\n          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged\n        };\n      });\n    } else if (_this.props.onViewableItemsChanged) {\n      var onViewableItemsChanged = _this.props.onViewableItemsChanged;\n\n      _this._viewabilityTuples.push({\n        viewabilityHelper: new ViewabilityHelper(_this.props.viewabilityConfig),\n        onViewableItemsChanged: onViewableItemsChanged\n      });\n    }\n\n    var initialState = {\n      first: _this.props.initialScrollIndex || 0,\n      last: Math.min(_this.props.getItemCount(_this.props.data), (_this.props.initialScrollIndex || 0) + _this.props.initialNumToRender) - 1\n    };\n\n    if (_this._isNestedWithSameOrientation()) {\n      var storedState = _this.context.getNestedChildState(_this._getListKey());\n\n      if (storedState) {\n        initialState = storedState;\n        _this.state = storedState;\n        _this._frames = storedState.frames;\n      }\n    }\n\n    _this.state = initialState;\n    return _this;\n  }\n\n  _proto.componentDidMount = function componentDidMount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.registerAsNestedChild({\n        cellKey: this._getCellKey(),\n        key: this._getListKey(),\n        ref: this,\n        // NOTE: When the child mounts (here) it's not necessarily safe to read\n        // the parent's props. This is why we explicitly propagate debugInfo\n        // \"down\" via context and \"up\" again via this method call on the\n        // parent.\n        parentDebugInfo: this.context.debugInfo\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.unregisterAsNestedChild({\n        key: this._getListKey(),\n        state: {\n          first: this.state.first,\n          last: this.state.last,\n          frames: this._frames\n        }\n      });\n    }\n\n    this._updateViewableItems(null);\n\n    this._updateCellsToRenderBatcher.dispose({\n      abort: true\n    });\n\n    this._viewabilityTuples.forEach(function (tuple) {\n      tuple.viewabilityHelper.dispose();\n    });\n\n    this._fillRateHelper.deactivateAndFlush();\n  };\n\n  VirtualizedList.getDerivedStateFromProps = function getDerivedStateFromProps(newProps, prevState) {\n    var data = newProps.data,\n        getItemCount = newProps.getItemCount,\n        maxToRenderPerBatch = newProps.maxToRenderPerBatch; // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make\n    // sure we're rendering a reasonable range here.\n\n    return {\n      first: Math.max(0, Math.min(prevState.first, getItemCount(data) - 1 - maxToRenderPerBatch)),\n      last: Math.max(0, Math.min(prevState.last, getItemCount(data) - 1))\n    };\n  };\n\n  _proto._pushCells = function _pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, first, last, inversionStyle) {\n    var _this2 = this;\n\n    var _this$props6 = this.props,\n        CellRendererComponent = _this$props6.CellRendererComponent,\n        ItemSeparatorComponent = _this$props6.ItemSeparatorComponent,\n        data = _this$props6.data,\n        getItem = _this$props6.getItem,\n        getItemCount = _this$props6.getItemCount,\n        horizontal = _this$props6.horizontal,\n        keyExtractor = _this$props6.keyExtractor;\n    var stickyOffset = this.props.ListHeaderComponent ? 1 : 0;\n    var end = getItemCount(data) - 1;\n    var prevCellKey;\n    last = Math.min(end, last);\n\n    var _loop = function _loop(ii) {\n      var item = getItem(data, ii);\n      var key = keyExtractor(item, ii);\n\n      _this2._indicesToKeys.set(ii, key);\n\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n        stickyHeaderIndices.push(cells.length);\n      }\n\n      cells.push( /*#__PURE__*/React.createElement(CellRenderer, {\n        CellRendererComponent: CellRendererComponent,\n        ItemSeparatorComponent: ii < end ? ItemSeparatorComponent : undefined,\n        cellKey: key,\n        fillRateHelper: _this2._fillRateHelper,\n        horizontal: horizontal,\n        index: ii,\n        inversionStyle: inversionStyle,\n        item: item,\n        key: key,\n        prevCellKey: prevCellKey,\n        onUpdateSeparators: _this2._onUpdateSeparators,\n        onLayout: function onLayout(e) {\n          return _this2._onCellLayout(e, key, ii);\n        },\n        onUnmount: _this2._onCellUnmount,\n        parentProps: _this2.props,\n        ref: function ref(_ref) {\n          _this2._cellRefs[key] = _ref;\n        }\n      }));\n      prevCellKey = key;\n    };\n\n    for (var ii = first; ii <= last; ii++) {\n      _loop(ii);\n    }\n  };\n\n  _proto._isVirtualizationDisabled = function _isVirtualizationDisabled() {\n    return this.props.disableVirtualization || false;\n  };\n\n  _proto._isNestedWithSameOrientation = function _isNestedWithSameOrientation() {\n    var nestedContext = this.context;\n    return !!(nestedContext && !!nestedContext.horizontal === !!this.props.horizontal);\n  };\n\n  _proto.render = function render() {\n    var _this3 = this;\n\n    if (__DEV__) {\n      var flatStyles = flattenStyle(this.props.contentContainerStyle);\n\n      if (flatStyles != null && flatStyles.flexWrap === 'wrap') {\n        console.warn('`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' + 'Consider using `numColumns` with `FlatList` instead.');\n      }\n    }\n\n    var _this$props7 = this.props,\n        ListEmptyComponent = _this$props7.ListEmptyComponent,\n        ListFooterComponent = _this$props7.ListFooterComponent,\n        ListHeaderComponent = _this$props7.ListHeaderComponent;\n    var _this$props8 = this.props,\n        data = _this$props8.data,\n        horizontal = _this$props8.horizontal;\n\n    var isVirtualizationDisabled = this._isVirtualizationDisabled();\n\n    var inversionStyle = this.props.inverted ? this.props.horizontal ? styles.horizontallyInverted : styles.verticallyInverted : null;\n    var cells = [];\n    var stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n    var stickyHeaderIndices = [];\n\n    if (ListHeaderComponent) {\n      if (stickyIndicesFromProps.has(0)) {\n        stickyHeaderIndices.push(0);\n      }\n\n      var element = /*#__PURE__*/React.isValidElement(ListHeaderComponent) ? ListHeaderComponent :\n      /*#__PURE__*/\n      // $FlowFixMe\n      React.createElement(ListHeaderComponent, null);\n      cells.push( /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n        cellKey: this._getCellKey() + '-header',\n        key: \"$header\"\n      }, /*#__PURE__*/React.createElement(View, {\n        onLayout: this._onLayoutHeader,\n        style: StyleSheet.compose(inversionStyle, this.props.ListHeaderComponentStyle)\n      }, // $FlowFixMe - Typing ReactNativeComponent revealed errors\n      element)));\n    }\n\n    var itemCount = this.props.getItemCount(data);\n\n    if (itemCount > 0) {\n      _usedIndexForKey = false;\n      _keylessItemComponentName = '';\n      var spacerKey = !horizontal ? 'height' : 'width';\n      var lastInitialIndex = this.props.initialScrollIndex ? -1 : this.props.initialNumToRender - 1;\n      var _this$state = this.state,\n          first = _this$state.first,\n          last = _this$state.last;\n\n      this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, 0, lastInitialIndex, inversionStyle);\n\n      var firstAfterInitial = Math.max(lastInitialIndex + 1, first);\n\n      if (!isVirtualizationDisabled && first > lastInitialIndex + 1) {\n        var insertedStickySpacer = false;\n\n        if (stickyIndicesFromProps.size > 0) {\n          var stickyOffset = ListHeaderComponent ? 1 : 0; // See if there are any sticky headers in the virtualized space that we need to render.\n\n          for (var ii = firstAfterInitial - 1; ii > lastInitialIndex; ii--) {\n            if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n              var _ref2, _ref3;\n\n              var initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n\n              var stickyBlock = this._getFrameMetricsApprox(ii);\n\n              var leadSpace = stickyBlock.offset - initBlock.offset - (this.props.initialScrollIndex ? 0 : initBlock.length);\n              cells.push(\n              /*#__PURE__*/\n\n              /* $FlowFixMe(>=0.111.0 site=react_native_fb) This comment\n               * suppresses an error found when Flow v0.111 was deployed. To\n               * see the error, delete this comment and run Flow. */\n              React.createElement(View, {\n                key: \"$sticky_lead\",\n                style: (_ref2 = {}, _ref2[spacerKey] = leadSpace, _ref2)\n              }));\n\n              this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, ii, ii, inversionStyle);\n\n              var trailSpace = this._getFrameMetricsApprox(first).offset - (stickyBlock.offset + stickyBlock.length);\n              cells.push(\n              /*#__PURE__*/\n\n              /* $FlowFixMe(>=0.111.0 site=react_native_fb) This comment\n               * suppresses an error found when Flow v0.111 was deployed. To\n               * see the error, delete this comment and run Flow. */\n              React.createElement(View, {\n                key: \"$sticky_trail\",\n                style: (_ref3 = {}, _ref3[spacerKey] = trailSpace, _ref3)\n              }));\n              insertedStickySpacer = true;\n              break;\n            }\n          }\n        }\n\n        if (!insertedStickySpacer) {\n          var _ref4;\n\n          var _initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n\n          var firstSpace = this._getFrameMetricsApprox(first).offset - (_initBlock.offset + _initBlock.length);\n\n          cells.push(\n          /*#__PURE__*/\n\n          /* $FlowFixMe(>=0.111.0 site=react_native_fb) This comment\n           * suppresses an error found when Flow v0.111 was deployed. To see\n           * the error, delete this comment and run Flow. */\n          React.createElement(View, {\n            key: \"$lead_spacer\",\n            style: (_ref4 = {}, _ref4[spacerKey] = firstSpace, _ref4)\n          }));\n        }\n      }\n\n      this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, firstAfterInitial, last, inversionStyle);\n\n      if (!this._hasWarned.keys && _usedIndexForKey) {\n        console.warn('VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' + 'item or provide a custom keyExtractor.', _keylessItemComponentName);\n        this._hasWarned.keys = true;\n      }\n\n      if (!isVirtualizationDisabled && last < itemCount - 1) {\n        var _ref5;\n\n        var lastFrame = this._getFrameMetricsApprox(last); // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to\n        // prevent the user for hyperscrolling into un-measured area because otherwise content will\n        // likely jump around as it renders in above the viewport.\n\n\n        var end = this.props.getItemLayout ? itemCount - 1 : Math.min(itemCount - 1, this._highestMeasuredFrameIndex);\n\n        var endFrame = this._getFrameMetricsApprox(end);\n\n        var tailSpacerLength = endFrame.offset + endFrame.length - (lastFrame.offset + lastFrame.length);\n        cells.push(\n        /*#__PURE__*/\n\n        /* $FlowFixMe(>=0.111.0 site=react_native_fb) This comment suppresses\n         * an error found when Flow v0.111 was deployed. To see the error,\n         * delete this comment and run Flow. */\n        React.createElement(View, {\n          key: \"$tail_spacer\",\n          style: (_ref5 = {}, _ref5[spacerKey] = tailSpacerLength, _ref5)\n        }));\n      }\n    } else if (ListEmptyComponent) {\n      var _element = /*#__PURE__*/React.isValidElement(ListEmptyComponent) ? ListEmptyComponent :\n      /*#__PURE__*/\n      // $FlowFixMe\n      React.createElement(ListEmptyComponent, null);\n\n      cells.push( /*#__PURE__*/React.cloneElement(_element, {\n        key: '$empty',\n        onLayout: function onLayout(event) {\n          _this3._onLayoutEmpty(event);\n\n          if (_element.props.onLayout) {\n            _element.props.onLayout(event);\n          }\n        },\n        style: StyleSheet.compose(inversionStyle, _element.props.style)\n      }));\n    }\n\n    if (ListFooterComponent) {\n      var _element2 = /*#__PURE__*/React.isValidElement(ListFooterComponent) ? ListFooterComponent :\n      /*#__PURE__*/\n      // $FlowFixMe\n      React.createElement(ListFooterComponent, null);\n\n      cells.push( /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n        cellKey: this._getFooterCellKey(),\n        key: \"$footer\"\n      }, /*#__PURE__*/React.createElement(View, {\n        onLayout: this._onLayoutFooter,\n        style: StyleSheet.compose(inversionStyle, this.props.ListFooterComponentStyle)\n      }, // $FlowFixMe - Typing ReactNativeComponent revealed errors\n      _element2)));\n    }\n\n    var scrollProps = _objectSpread(_objectSpread({}, this.props), {}, {\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      onScroll: this._onScroll,\n      onScrollBeginDrag: this._onScrollBeginDrag,\n      onScrollEndDrag: this._onScrollEndDrag,\n      onMomentumScrollBegin: this._onMomentumScrollBegin,\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\n      scrollEventThrottle: this.props.scrollEventThrottle,\n      // TODO: Android support\n      stickyHeaderIndices: stickyHeaderIndices,\n      style: inversionStyle ? [inversionStyle, this.props.style] : this.props.style\n    });\n\n    this._hasMore = this.state.last < this.props.getItemCount(this.props.data) - 1;\n    var innerRet = /*#__PURE__*/React.createElement(VirtualizedListContextProvider, {\n      value: {\n        cellKey: null,\n        getScrollMetrics: this._getScrollMetrics,\n        horizontal: this.props.horizontal,\n        getOutermostParentListRef: this._getOutermostParentListRef,\n        getNestedChildState: this._getNestedChildState,\n        registerAsNestedChild: this._registerAsNestedChild,\n        unregisterAsNestedChild: this._unregisterAsNestedChild,\n        debugInfo: this._getDebugInfo()\n      }\n    }, /*#__PURE__*/React.cloneElement((this.props.renderScrollComponent || this._defaultRenderScrollComponent)(scrollProps), {\n      ref: this._captureScrollRef\n    }, cells));\n    var ret = innerRet;\n\n    if (this.props.debug) {\n      return /*#__PURE__*/React.createElement(View, {\n        style: styles.debug\n      }, ret, this._renderDebugOverlay());\n    } else {\n      return ret;\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this$props9 = this.props,\n        data = _this$props9.data,\n        extraData = _this$props9.extraData;\n\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\n      // clear the viewableIndices cache to also trigger\n      // the onViewableItemsChanged callback with the new data\n      this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.resetViewableIndices();\n      });\n    } // The `this._hiPriInProgress` is guaranteeing a hiPri cell update will only happen\n    // once per fiber update. The `_scheduleCellsToRenderUpdate` will set it to true\n    // if a hiPri update needs to perform. If `componentDidUpdate` is triggered with\n    // `this._hiPriInProgress=true`, means it's triggered by the hiPri update. The\n    // `_scheduleCellsToRenderUpdate` will check this condition and not perform\n    // another hiPri update.\n\n\n    var hiPriInProgress = this._hiPriInProgress;\n\n    this._scheduleCellsToRenderUpdate(); // Make sure setting `this._hiPriInProgress` back to false after `componentDidUpdate`\n    // is triggered with `this._hiPriInProgress = true`\n\n\n    if (hiPriInProgress) {\n      this._hiPriInProgress = false;\n    }\n  };\n\n  _proto._computeBlankness = function _computeBlankness() {\n    this._fillRateHelper.computeBlankness(this.props, this.state, this._scrollMetrics);\n  };\n\n  _proto._onCellLayout = function _onCellLayout(e, cellKey, index) {\n    var layout = e.nativeEvent.layout;\n    var next = {\n      offset: this._selectOffset(layout),\n      length: this._selectLength(layout),\n      index: index,\n      inLayout: true\n    };\n    var curr = this._frames[cellKey];\n\n    if (!curr || next.offset !== curr.offset || next.length !== curr.length || index !== curr.index) {\n      this._totalCellLength += next.length - (curr ? curr.length : 0);\n      this._totalCellsMeasured += curr ? 0 : 1;\n      this._averageCellLength = this._totalCellLength / this._totalCellsMeasured;\n      this._frames[cellKey] = next;\n      this._highestMeasuredFrameIndex = Math.max(this._highestMeasuredFrameIndex, index);\n\n      this._scheduleCellsToRenderUpdate();\n    } else {\n      this._frames[cellKey].inLayout = true;\n    }\n\n    this._triggerRemeasureForChildListsInCell(cellKey);\n\n    this._computeBlankness();\n\n    this._updateViewableItems(this.props.data);\n  };\n\n  _proto._triggerRemeasureForChildListsInCell = function _triggerRemeasureForChildListsInCell(cellKey) {\n    var childListKeys = this._cellKeysToChildListKeys.get(cellKey);\n\n    if (childListKeys) {\n      for (var _iterator2 = _createForOfIteratorHelperLoose(childListKeys), _step2; !(_step2 = _iterator2()).done;) {\n        var childKey = _step2.value;\n\n        var childList = this._nestedChildLists.get(childKey);\n\n        childList && childList.ref && childList.ref.measureLayoutRelativeToContainingList();\n      }\n    }\n  };\n\n  _proto.measureLayoutRelativeToContainingList = function measureLayoutRelativeToContainingList() {\n    var _this4 = this;\n\n    // TODO (T35574538): findNodeHandle sometimes crashes with \"Unable to find\n    // node on an unmounted component\" during scrolling\n    try {\n      if (!this._scrollRef) {\n        return;\n      } // We are assuming that getOutermostParentListRef().getScrollRef()\n      // is a non-null reference to a ScrollView\n\n\n      this._scrollRef.measureLayout(this.context.getOutermostParentListRef().getScrollRef(), function (x, y, width, height) {\n        _this4._offsetFromParentVirtualizedList = _this4._selectOffset({\n          x: x,\n          y: y\n        });\n        _this4._scrollMetrics.contentLength = _this4._selectLength({\n          width: width,\n          height: height\n        });\n\n        var scrollMetrics = _this4._convertParentScrollMetrics(_this4.context.getScrollMetrics());\n\n        _this4._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n        _this4._scrollMetrics.offset = scrollMetrics.offset;\n      }, function (error) {\n        console.warn(\"VirtualizedList: Encountered an error while measuring a list's\" + ' offset from its containing VirtualizedList.');\n      });\n    } catch (error) {\n      console.warn('measureLayoutRelativeToContainingList threw an error', error.stack);\n    }\n  };\n\n  _proto._getFooterCellKey = function _getFooterCellKey() {\n    return this._getCellKey() + '-footer';\n  };\n\n  _proto._renderDebugOverlay = function _renderDebugOverlay() {\n    var normalize = this._scrollMetrics.visibleLength / (this._scrollMetrics.contentLength || 1);\n    var framesInLayout = [];\n    var itemCount = this.props.getItemCount(this.props.data);\n\n    for (var ii = 0; ii < itemCount; ii++) {\n      var frame = this._getFrameMetricsApprox(ii);\n      /* $FlowFixMe(>=0.68.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.68 was deployed. To see the error delete this\n       * comment and run Flow. */\n\n\n      if (frame.inLayout) {\n        framesInLayout.push(frame);\n      }\n    }\n\n    var windowTop = this._getFrameMetricsApprox(this.state.first).offset;\n\n    var frameLast = this._getFrameMetricsApprox(this.state.last);\n\n    var windowLen = frameLast.offset + frameLast.length - windowTop;\n    var visTop = this._scrollMetrics.offset;\n    var visLen = this._scrollMetrics.visibleLength;\n    return /*#__PURE__*/React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlay]\n    }, framesInLayout.map(function (f, ii) {\n      return /*#__PURE__*/React.createElement(View, {\n        key: 'f' + ii,\n        style: [styles.debugOverlayBase, styles.debugOverlayFrame, {\n          top: f.offset * normalize,\n          height: f.length * normalize\n        }]\n      });\n    }), /*#__PURE__*/React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlayFrameLast, {\n        top: windowTop * normalize,\n        height: windowLen * normalize\n      }]\n    }), /*#__PURE__*/React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlayFrameVis, {\n        top: visTop * normalize,\n        height: visLen * normalize\n      }]\n    }));\n  };\n\n  _proto._selectLength = function _selectLength(metrics) {\n    return !this.props.horizontal ? metrics.height : metrics.width;\n  };\n\n  _proto._selectOffset = function _selectOffset(metrics) {\n    return !this.props.horizontal ? metrics.y : metrics.x;\n  };\n\n  _proto._maybeCallOnEndReached = function _maybeCallOnEndReached() {\n    var _this$props10 = this.props,\n        data = _this$props10.data,\n        getItemCount = _this$props10.getItemCount,\n        onEndReached = _this$props10.onEndReached,\n        onEndReachedThreshold = _this$props10.onEndReachedThreshold;\n    var _this$_scrollMetrics2 = this._scrollMetrics,\n        contentLength = _this$_scrollMetrics2.contentLength,\n        visibleLength = _this$_scrollMetrics2.visibleLength,\n        offset = _this$_scrollMetrics2.offset;\n    var distanceFromEnd = contentLength - visibleLength - offset;\n    var threshold = onEndReachedThreshold ? onEndReachedThreshold * visibleLength : 2;\n\n    if (onEndReached && this.state.last === getItemCount(data) - 1 && distanceFromEnd < threshold && this._scrollMetrics.contentLength !== this._sentEndForContentLength) {\n      // Only call onEndReached once for a given content length\n      this._sentEndForContentLength = this._scrollMetrics.contentLength;\n      onEndReached({\n        distanceFromEnd: distanceFromEnd\n      });\n    } else if (distanceFromEnd > threshold) {\n      // If the user scrolls away from the end and back again cause\n      // an onEndReached to be triggered again\n      this._sentEndForContentLength = 0;\n    }\n  };\n\n  _proto._scheduleCellsToRenderUpdate = function _scheduleCellsToRenderUpdate() {\n    var _this$state2 = this.state,\n        first = _this$state2.first,\n        last = _this$state2.last;\n    var _this$_scrollMetrics3 = this._scrollMetrics,\n        offset = _this$_scrollMetrics3.offset,\n        visibleLength = _this$_scrollMetrics3.visibleLength,\n        velocity = _this$_scrollMetrics3.velocity;\n    var itemCount = this.props.getItemCount(this.props.data);\n    var hiPri = false;\n    var scrollingThreshold =\n    /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n     * error found when Flow v0.63 was deployed. To see the error delete\n     * this comment and run Flow. */\n    this.props.onEndReachedThreshold * visibleLength / 2; // Mark as high priority if we're close to the start of the first item\n    // But only if there are items before the first rendered item\n\n    if (first > 0) {\n      var distTop = offset - this._getFrameMetricsApprox(first).offset;\n\n      hiPri = hiPri || distTop < 0 || velocity < -2 && distTop < scrollingThreshold;\n    } // Mark as high priority if we're close to the end of the last item\n    // But only if there are items after the last rendered item\n\n\n    if (last < itemCount - 1) {\n      var distBottom = this._getFrameMetricsApprox(last).offset - (offset + visibleLength);\n      hiPri = hiPri || distBottom < 0 || velocity > 2 && distBottom < scrollingThreshold;\n    } // Only trigger high-priority updates if we've actually rendered cells,\n    // and with that size estimate, accurately compute how many cells we should render.\n    // Otherwise, it would just render as many cells as it can (of zero dimension),\n    // each time through attempting to render more (limited by maxToRenderPerBatch),\n    // starving the renderer from actually laying out the objects and computing _averageCellLength.\n    // If this is triggered in an `componentDidUpdate` followed by a hiPri cellToRenderUpdate\n    // We shouldn't do another hipri cellToRenderUpdate\n\n\n    if (hiPri && (this._averageCellLength || this.props.getItemLayout) && !this._hiPriInProgress) {\n      this._hiPriInProgress = true; // Don't worry about interactions when scrolling quickly; focus on filling content as fast\n      // as possible.\n\n      this._updateCellsToRenderBatcher.dispose({\n        abort: true\n      });\n\n      this._updateCellsToRender();\n\n      return;\n    } else {\n      this._updateCellsToRenderBatcher.schedule();\n    }\n  };\n\n  _proto._updateViewableItems = function _updateViewableItems(data) {\n    var _this5 = this;\n\n    var getItemCount = this.props.getItemCount;\n\n    this._viewabilityTuples.forEach(function (tuple) {\n      tuple.viewabilityHelper.onUpdate(getItemCount(data), _this5._scrollMetrics.offset, _this5._scrollMetrics.visibleLength, _this5._getFrameMetrics, _this5._createViewToken, tuple.onViewableItemsChanged, _this5.state);\n    });\n  };\n\n  return VirtualizedList;\n}(React.PureComponent);\n\nVirtualizedList.contextType = VirtualizedListContext;\nVirtualizedList.defaultProps = {\n  disableVirtualization: false,\n  horizontal: false,\n  initialNumToRender: 10,\n  keyExtractor: function keyExtractor(item, index) {\n    if (item.key != null) {\n      return item.key;\n    }\n\n    if (item.id != null) {\n      return item.id;\n    }\n\n    _usedIndexForKey = true;\n\n    if (item.type && item.type.displayName) {\n      _keylessItemComponentName = item.type.displayName;\n    }\n\n    return String(index);\n  },\n  maxToRenderPerBatch: 10,\n  onEndReachedThreshold: 2,\n  // multiples of length\n  scrollEventThrottle: 50,\n  updateCellsBatchingPeriod: 50,\n  windowSize: 21 // multiples of length\n\n};\n\nvar CellRenderer = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CellRenderer, _React$Component);\n\n  function CellRenderer() {\n    var _this6;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this6 = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this6.state = {\n      separatorProps: {\n        highlighted: false,\n        leadingItem: _this6.props.item\n      }\n    };\n    _this6._separators = {\n      highlight: function highlight() {\n        var _this6$props = _this6.props,\n            cellKey = _this6$props.cellKey,\n            prevCellKey = _this6$props.prevCellKey;\n\n        _this6.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: true\n        });\n      },\n      unhighlight: function unhighlight() {\n        var _this6$props2 = _this6.props,\n            cellKey = _this6$props2.cellKey,\n            prevCellKey = _this6$props2.prevCellKey;\n\n        _this6.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: false\n        });\n      },\n      updateProps: function updateProps(select, newProps) {\n        var _this6$props3 = _this6.props,\n            cellKey = _this6$props3.cellKey,\n            prevCellKey = _this6$props3.prevCellKey;\n\n        _this6.props.onUpdateSeparators([select === 'leading' ? prevCellKey : cellKey], newProps);\n      }\n    };\n    return _this6;\n  }\n\n  CellRenderer.getDerivedStateFromProps = function getDerivedStateFromProps(props, prevState) {\n    return {\n      separatorProps: _objectSpread(_objectSpread({}, prevState.separatorProps), {}, {\n        leadingItem: props.item\n      })\n    };\n  } // TODO: consider factoring separator stuff out of VirtualizedList into FlatList since it's not\n  // reused by SectionList and we can keep VirtualizedList simpler.\n  ;\n\n  var _proto2 = CellRenderer.prototype;\n\n  _proto2.updateSeparatorProps = function updateSeparatorProps(newProps) {\n    this.setState(function (state) {\n      return {\n        separatorProps: _objectSpread(_objectSpread({}, state.separatorProps), newProps)\n      };\n    });\n  };\n\n  _proto2.componentWillUnmount = function componentWillUnmount() {\n    this.props.onUnmount(this.props.cellKey);\n  };\n\n  _proto2._renderElement = function _renderElement(renderItem, ListItemComponent, item, index) {\n    if (renderItem && ListItemComponent) {\n      console.warn('VirtualizedList: Both ListItemComponent and renderItem props are present. ListItemComponent will take' + ' precedence over renderItem.');\n    }\n\n    if (ListItemComponent) {\n      /* $FlowFixMe(>=0.108.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.108 was deployed. To see the error, delete\n       * this comment and run Flow. */\n      return /*#__PURE__*/React.createElement(ListItemComponent, {\n        item: item,\n        index: index,\n        separators: this._separators\n      });\n    }\n\n    if (renderItem) {\n      return renderItem({\n        item: item,\n        index: index,\n        separators: this._separators\n      });\n    }\n\n    invariant(false, 'VirtualizedList: Either ListItemComponent or renderItem props are required but none were found.');\n  };\n\n  _proto2.render = function render() {\n    var _this$props11 = this.props,\n        CellRendererComponent = _this$props11.CellRendererComponent,\n        ItemSeparatorComponent = _this$props11.ItemSeparatorComponent,\n        fillRateHelper = _this$props11.fillRateHelper,\n        horizontal = _this$props11.horizontal,\n        item = _this$props11.item,\n        index = _this$props11.index,\n        inversionStyle = _this$props11.inversionStyle,\n        parentProps = _this$props11.parentProps;\n    var renderItem = parentProps.renderItem,\n        getItemLayout = parentProps.getItemLayout,\n        ListItemComponent = parentProps.ListItemComponent;\n\n    var element = this._renderElement(renderItem, ListItemComponent, item, index);\n\n    var onLayout =\n    /* $FlowFixMe(>=0.68.0 site=react_native_fb) This comment suppresses an\n     * error found when Flow v0.68 was deployed. To see the error delete this\n     * comment and run Flow. */\n    getItemLayout && !parentProps.debug && !fillRateHelper.enabled() ? undefined : this.props.onLayout; // NOTE: that when this is a sticky header, `onLayout` will get automatically extracted and\n    // called explicitly by `ScrollViewStickyHeader`.\n\n    var itemSeparator = ItemSeparatorComponent && /*#__PURE__*/React.createElement(ItemSeparatorComponent, this.state.separatorProps);\n    var cellStyle = inversionStyle ? horizontal ? [styles.rowReverse, inversionStyle] : [styles.columnReverse, inversionStyle] : horizontal ? [styles.row, inversionStyle] : inversionStyle;\n    var result = !CellRendererComponent ?\n    /*#__PURE__*/\n\n    /* $FlowFixMe(>=0.89.0 site=react_native_fb) This comment suppresses an\n     * error found when Flow v0.89 was deployed. To see the error, delete\n     * this comment and run Flow. */\n    React.createElement(View, {\n      style: cellStyle,\n      onLayout: onLayout\n    }, element, itemSeparator) : /*#__PURE__*/React.createElement(CellRendererComponent, _extends({}, this.props, {\n      style: cellStyle,\n      onLayout: onLayout\n    }), element, itemSeparator);\n    return /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n      cellKey: this.props.cellKey\n    }, result);\n  };\n\n  return CellRenderer;\n}(React.Component);\n\nfunction describeNestedLists(childList) {\n  var trace = 'VirtualizedList trace:\\n' + (\"  Child (\" + (childList.horizontal ? 'horizontal' : 'vertical') + \"):\\n\") + (\"    listKey: \" + childList.key + \"\\n\") + (\"    cellKey: \" + childList.cellKey);\n  var debugInfo = childList.parentDebugInfo;\n\n  while (debugInfo) {\n    trace += \"\\n  Parent (\" + (debugInfo.horizontal ? 'horizontal' : 'vertical') + \"):\\n\" + (\"    listKey: \" + debugInfo.listKey + \"\\n\") + (\"    cellKey: \" + debugInfo.cellKey);\n    debugInfo = debugInfo.parent;\n  }\n\n  return trace;\n}\n\nvar styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: [{\n      scaleY: -1\n    }]\n  },\n  horizontallyInverted: {\n    transform: [{\n      scaleX: -1\n    }]\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  rowReverse: {\n    flexDirection: 'row-reverse'\n  },\n  columnReverse: {\n    flexDirection: 'column-reverse'\n  },\n  debug: {\n    flex: 1\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange'\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2\n  }\n});\nexport default VirtualizedList;"]},"metadata":{},"sourceType":"module"}