{"ast":null,"code":"'use strict';\n\nimport Dimensions from \"../Dimensions\";\nimport { useEffect, useState } from 'react';\nexport default function useWindowDimensions() {\n  var _useState = useState(function () {\n    return Dimensions.get('window');\n  }),\n      dims = _useState[0],\n      setDims = _useState[1];\n\n  useEffect(function () {\n    function handleChange(_ref) {\n      var window = _ref.window;\n\n      if (window != null) {\n        setDims(window);\n      }\n    }\n\n    Dimensions.addEventListener('change', handleChange);\n    setDims(Dimensions.get('window'));\n    return function () {\n      Dimensions.removeEventListener('change', handleChange);\n    };\n  }, []);\n  return dims;\n}","map":{"version":3,"sources":["/Users/garethcozens/Documents/repo/cloudratha/react-native-web-nx-demo/node_modules/react-native-web/dist/exports/useWindowDimensions/index.js"],"names":["_useState","useState","Dimensions","dims","setDims","useEffect","window","_ref"],"mappings":"AASA;;AAEA,OAAA,UAAA;AACA,SAAA,SAAA,EAAA,QAAA,QAAA,OAAA;AACA,eAAe,SAAA,mBAAA,GAA+B;AAC5C,MAAIA,SAAS,GAAGC,QAAQ,CAAC,YAAY;AACnC,WAAOC,UAAU,CAAVA,GAAAA,CAAP,QAAOA,CAAP;AADF,GAAwB,CAAxB;AAAA,MAGIC,IAAI,GAAGH,SAAS,CAHpB,CAGoB,CAHpB;AAAA,MAIII,OAAO,GAAGJ,SAAS,CAJvB,CAIuB,CAJvB;;AAMAK,EAAAA,SAAS,CAAC,YAAY;AACpB,aAAA,YAAA,CAAA,IAAA,EAA4B;AAC1B,UAAIC,MAAM,GAAGC,IAAI,CAAjB,MAAA;;AAEA,UAAID,MAAM,IAAV,IAAA,EAAoB;AAClBF,QAAAA,OAAO,CAAPA,MAAO,CAAPA;AAEH;AAEDF;;AAAAA,IAAAA,UAAU,CAAVA,gBAAAA,CAAAA,QAAAA,EAAAA,YAAAA;AAIAE,IAAAA,OAAO,CAACF,UAAU,CAAVA,GAAAA,CAARE,QAAQF,CAAD,CAAPE;AACA,WAAO,YAAY;AACjBF,MAAAA,UAAU,CAAVA,mBAAAA,CAAAA,QAAAA,EAAAA,YAAAA;AADF,KAAA;AAdO,GAAA,EAATG,EAAS,CAATA;AAkBA,SAAA,IAAA;AACD","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n'use strict';\n\nimport Dimensions from '../Dimensions';\nimport { useEffect, useState } from 'react';\nexport default function useWindowDimensions() {\n  var _useState = useState(function () {\n    return Dimensions.get('window');\n  }),\n      dims = _useState[0],\n      setDims = _useState[1];\n\n  useEffect(function () {\n    function handleChange(_ref) {\n      var window = _ref.window;\n\n      if (window != null) {\n        setDims(window);\n      }\n    }\n\n    Dimensions.addEventListener('change', handleChange); // We might have missed an update between calling `get` in render and\n    // `addEventListener` in this handler, so we set it here. If there was\n    // no change, React will filter out this update as a no-op.\n\n    setDims(Dimensions.get('window'));\n    return function () {\n      Dimensions.removeEventListener('change', handleChange);\n    };\n  }, []);\n  return dims;\n}"]},"metadata":{},"sourceType":"module"}