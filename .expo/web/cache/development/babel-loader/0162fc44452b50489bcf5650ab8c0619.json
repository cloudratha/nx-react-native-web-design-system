{"ast":null,"code":"'use strict';\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport AnimatedValue from \"./AnimatedValue\";\nimport AnimatedWithChildren from \"./AnimatedWithChildren\";\nimport invariant from 'fbjs/lib/invariant';\nvar _uniqueId = 1;\n\nvar AnimatedValueXY = function (_AnimatedWithChildren) {\n  _inheritsLoose(AnimatedValueXY, _AnimatedWithChildren);\n\n  function AnimatedValueXY(valueIn) {\n    var _this;\n\n    _this = _AnimatedWithChildren.call(this) || this;\n    var value = valueIn || {\n      x: 0,\n      y: 0\n    };\n\n    if (typeof value.x === 'number' && typeof value.y === 'number') {\n      _this.x = new AnimatedValue(value.x);\n      _this.y = new AnimatedValue(value.y);\n    } else {\n      invariant(value.x instanceof AnimatedValue && value.y instanceof AnimatedValue, 'AnimatedValueXY must be initialized with an object of numbers or ' + 'AnimatedValues.');\n      _this.x = value.x;\n      _this.y = value.y;\n    }\n\n    _this._listeners = {};\n    return _this;\n  }\n\n  var _proto = AnimatedValueXY.prototype;\n\n  _proto.setValue = function setValue(value) {\n    this.x.setValue(value.x);\n    this.y.setValue(value.y);\n  };\n\n  _proto.setOffset = function setOffset(offset) {\n    this.x.setOffset(offset.x);\n    this.y.setOffset(offset.y);\n  };\n\n  _proto.flattenOffset = function flattenOffset() {\n    this.x.flattenOffset();\n    this.y.flattenOffset();\n  };\n\n  _proto.extractOffset = function extractOffset() {\n    this.x.extractOffset();\n    this.y.extractOffset();\n  };\n\n  _proto.__getValue = function __getValue() {\n    return {\n      x: this.x.__getValue(),\n      y: this.y.__getValue()\n    };\n  };\n\n  _proto.resetAnimation = function resetAnimation(callback) {\n    this.x.resetAnimation();\n    this.y.resetAnimation();\n    callback && callback(this.__getValue());\n  };\n\n  _proto.stopAnimation = function stopAnimation(callback) {\n    this.x.stopAnimation();\n    this.y.stopAnimation();\n    callback && callback(this.__getValue());\n  };\n\n  _proto.addListener = function addListener(callback) {\n    var _this2 = this;\n\n    var id = String(_uniqueId++);\n\n    var jointCallback = function jointCallback(_ref) {\n      var number = _ref.value;\n      callback(_this2.__getValue());\n    };\n\n    this._listeners[id] = {\n      x: this.x.addListener(jointCallback),\n      y: this.y.addListener(jointCallback)\n    };\n    return id;\n  };\n\n  _proto.removeListener = function removeListener(id) {\n    this.x.removeListener(this._listeners[id].x);\n    this.y.removeListener(this._listeners[id].y);\n    delete this._listeners[id];\n  };\n\n  _proto.removeAllListeners = function removeAllListeners() {\n    this.x.removeAllListeners();\n    this.y.removeAllListeners();\n    this._listeners = {};\n  };\n\n  _proto.getLayout = function getLayout() {\n    return {\n      left: this.x,\n      top: this.y\n    };\n  };\n\n  _proto.getTranslateTransform = function getTranslateTransform() {\n    return [{\n      translateX: this.x\n    }, {\n      translateY: this.y\n    }];\n  };\n\n  return AnimatedValueXY;\n}(AnimatedWithChildren);\n\nexport default AnimatedValueXY;\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/Users/garethcozens/Documents/repo/cloudratha/react-native-web-nx-demo/node_modules/react-native-web/dist/vendor/react-native/Animated/nodes/AnimatedValueXY.js"],"names":["subClass","Object","superClass","_setPrototypeOf","o","_uniqueId","AnimatedValueXY","_inheritsLoose","_this","_AnimatedWithChildren","value","valueIn","x","y","invariant","_proto","offset","callback","_this2","id","String","jointCallback","number","_ref","left","top","translateX","translateY"],"mappings":"AASA;;AAEA,SAAA,cAAA,CAAA,QAAA,EAAA,UAAA,EAA8C;AAAEA,EAAAA,QAAQ,CAARA,SAAAA,GAAqBC,MAAM,CAANA,MAAAA,CAAcC,UAAU,CAA7CF,SAAqBC,CAArBD;AAA0DA,EAAAA,QAAQ,CAARA,SAAAA,CAAAA,WAAAA,GAAAA,QAAAA;;AAA2CG,EAAAA,eAAe,CAAA,QAAA,EAAfA,UAAe,CAAfA;AAErJ;;AAAA,SAAA,eAAA,CAAA,CAAA,EAAA,CAAA,EAA+B;AAAEA,EAAAA,eAAe,GAAGF,MAAM,CAANA,cAAAA,IAAyB,SAAA,eAAA,CAAA,CAAA,EAAA,CAAA,EAA+B;AAAEG,IAAAA,CAAC,CAADA,SAAAA,GAAAA,CAAAA;AAAiB,WAAA,CAAA;AAA7FD,GAAAA;;AAA0G,SAAOA,eAAe,CAAA,CAAA,EAAtB,CAAsB,CAAtB;AAE3I;;AAAA,OAAA,aAAA;AACA,OAAA,oBAAA;AACA,OAAA,SAAA,MAAA,oBAAA;AACA,IAAIE,SAAS,GAAb,CAAA;;AAQA,IAAIC,eAAe,GAAgB,UAAA,qBAAA,EAAiC;AAClEC,EAAAA,cAAc,CAAA,eAAA,EAAdA,qBAAc,CAAdA;;AAEA,WAAA,eAAA,CAAA,OAAA,EAAkC;AAChC,QAAA,KAAA;;AAEAC,IAAAA,KAAK,GAAGC,qBAAqB,CAArBA,IAAAA,CAAAA,IAAAA,KAARD,IAAAA;AACA,QAAIE,KAAK,GAAGC,OAAO,IAAI;AACrBC,MAAAA,CAAC,EADoB,CAAA;AAErBC,MAAAA,CAAC,EAFH;AAAuB,KAAvB;;AAKA,QAAI,OAAOH,KAAK,CAAZ,CAAA,KAAA,QAAA,IAA+B,OAAOA,KAAK,CAAZ,CAAA,KAAnC,QAAA,EAAgE;AAC9DF,MAAAA,KAAK,CAALA,CAAAA,GAAU,IAAA,aAAA,CAAkBE,KAAK,CAAjCF,CAAU,CAAVA;AACAA,MAAAA,KAAK,CAALA,CAAAA,GAAU,IAAA,aAAA,CAAkBE,KAAK,CAAjCF,CAAU,CAAVA;AAFF,KAAA,MAGO;AACLM,MAAAA,SAAS,CAACJ,KAAK,CAALA,CAAAA,YAAAA,aAAAA,IAAoCA,KAAK,CAALA,CAAAA,YAArC,aAAA,EAAuE,sEAAhFI,iBAAS,CAATA;AACAN,MAAAA,KAAK,CAALA,CAAAA,GAAUE,KAAK,CAAfF,CAAAA;AACAA,MAAAA,KAAK,CAALA,CAAAA,GAAUE,KAAK,CAAfF,CAAAA;AAGFA;;AAAAA,IAAAA,KAAK,CAALA,UAAAA,GAAAA,EAAAA;AACA,WAAA,KAAA;AAUF;;AAAA,MAAIO,MAAM,GAAGT,eAAe,CAA5B,SAAA;;AAEAS,EAAAA,MAAM,CAANA,QAAAA,GAAkB,SAAA,QAAA,CAAA,KAAA,EAAyB;AACzC,SAAA,CAAA,CAAA,QAAA,CAAgBL,KAAK,CAArB,CAAA;AACA,SAAA,CAAA,CAAA,QAAA,CAAgBA,KAAK,CAArB,CAAA;AAFFK,GAAAA;;AAaAA,EAAAA,MAAM,CAANA,SAAAA,GAAmB,SAAA,SAAA,CAAA,MAAA,EAA2B;AAC5C,SAAA,CAAA,CAAA,SAAA,CAAiBC,MAAM,CAAvB,CAAA;AACA,SAAA,CAAA,CAAA,SAAA,CAAiBA,MAAM,CAAvB,CAAA;AAFFD,GAAAA;;AAYAA,EAAAA,MAAM,CAANA,aAAAA,GAAuB,SAAA,aAAA,GAAyB;AAC9C,SAAA,CAAA,CAAA,aAAA;AACA,SAAA,CAAA,CAAA,aAAA;AAFFA,GAAAA;;AAYAA,EAAAA,MAAM,CAANA,aAAAA,GAAuB,SAAA,aAAA,GAAyB;AAC9C,SAAA,CAAA,CAAA,aAAA;AACA,SAAA,CAAA,CAAA,aAAA;AAFFA,GAAAA;;AAKAA,EAAAA,MAAM,CAANA,UAAAA,GAAoB,SAAA,UAAA,GAAsB;AACxC,WAAO;AACLH,MAAAA,CAAC,EAAE,KAAA,CAAA,CADE,UACF,EADE;AAELC,MAAAA,CAAC,EAAE,KAAA,CAAA,CAFL,UAEK;AAFE,KAAP;AADFE,GAAAA;;AAaAA,EAAAA,MAAM,CAANA,cAAAA,GAAwB,SAAA,cAAA,CAAA,QAAA,EAAkC;AACxD,SAAA,CAAA,CAAA,cAAA;AACA,SAAA,CAAA,CAAA,cAAA;AACAE,IAAAA,QAAQ,IAAIA,QAAQ,CAAC,KAArBA,UAAqB,EAAD,CAApBA;AAHFF,GAAAA;;AAcAA,EAAAA,MAAM,CAANA,aAAAA,GAAuB,SAAA,aAAA,CAAA,QAAA,EAAiC;AACtD,SAAA,CAAA,CAAA,aAAA;AACA,SAAA,CAAA,CAAA,aAAA;AACAE,IAAAA,QAAQ,IAAIA,QAAQ,CAAC,KAArBA,UAAqB,EAAD,CAApBA;AAHFF,GAAAA;;AAgBAA,EAAAA,MAAM,CAANA,WAAAA,GAAqB,SAAA,WAAA,CAAA,QAAA,EAA+B;AAClD,QAAIG,MAAM,GAAV,IAAA;;AAEA,QAAIC,EAAE,GAAGC,MAAM,CAACf,SAAhB,EAAe,CAAf;;AAEA,QAAIgB,aAAa,GAAG,SAAA,aAAA,CAAA,IAAA,EAA6B;AAC/C,UAAIC,MAAM,GAAGC,IAAI,CAAjB,KAAA;AACAN,MAAAA,QAAQ,CAACC,MAAM,CAAfD,UAASC,EAAD,CAARD;AAFF,KAAA;;AAKA,SAAA,UAAA,CAAA,EAAA,IAAsB;AACpBL,MAAAA,CAAC,EAAE,KAAA,CAAA,CAAA,WAAA,CADiB,aACjB,CADiB;AAEpBC,MAAAA,CAAC,EAAE,KAAA,CAAA,CAAA,WAAA,CAFL,aAEK;AAFiB,KAAtB;AAIA,WAAA,EAAA;AAdFE,GAAAA;;AAwBAA,EAAAA,MAAM,CAANA,cAAAA,GAAwB,SAAA,cAAA,CAAA,EAAA,EAA4B;AAClD,SAAA,CAAA,CAAA,cAAA,CAAsB,KAAA,UAAA,CAAA,EAAA,EAAtB,CAAA;AACA,SAAA,CAAA,CAAA,cAAA,CAAsB,KAAA,UAAA,CAAA,EAAA,EAAtB,CAAA;AACA,WAAO,KAAA,UAAA,CAAP,EAAO,CAAP;AAHFA,GAAAA;;AAYAA,EAAAA,MAAM,CAANA,kBAAAA,GAA4B,SAAA,kBAAA,GAA8B;AACxD,SAAA,CAAA,CAAA,kBAAA;AACA,SAAA,CAAA,CAAA,kBAAA;AACA,SAAA,UAAA,GAAA,EAAA;AAHFA,GAAAA;;AAYAA,EAAAA,MAAM,CAANA,SAAAA,GAAmB,SAAA,SAAA,GAAqB;AACtC,WAAO;AACLS,MAAAA,IAAI,EAAE,KADD,CAAA;AAELC,MAAAA,GAAG,EAAE,KAFP;AAAO,KAAP;AADFV,GAAAA;;AAaAA,EAAAA,MAAM,CAANA,qBAAAA,GAA+B,SAAA,qBAAA,GAAiC;AAC9D,WAAO,CAAC;AACNW,MAAAA,UAAU,EAAE,KADP;AAAC,KAAD,EAEJ;AACDC,MAAAA,UAAU,EAAE,KAHd;AAEG,KAFI,CAAP;AADFZ,GAAAA;;AAQA,SAAA,eAAA;AA5LiC,CAAA,CAAnC,oBAAmC,CAAnC;;AA+LA,eAAA,eAAA","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport AnimatedValue from './AnimatedValue';\nimport AnimatedWithChildren from './AnimatedWithChildren';\nimport invariant from 'fbjs/lib/invariant';\nvar _uniqueId = 1;\n/**\n * 2D Value for driving 2D animations, such as pan gestures. Almost identical\n * API to normal `Animated.Value`, but multiplexed.\n *\n * See https://reactnative.dev/docs/animatedvaluexy.html\n */\n\nvar AnimatedValueXY = /*#__PURE__*/function (_AnimatedWithChildren) {\n  _inheritsLoose(AnimatedValueXY, _AnimatedWithChildren);\n\n  function AnimatedValueXY(valueIn) {\n    var _this;\n\n    _this = _AnimatedWithChildren.call(this) || this;\n    var value = valueIn || {\n      x: 0,\n      y: 0\n    }; // fixme: shouldn't need `: any`\n\n    if (typeof value.x === 'number' && typeof value.y === 'number') {\n      _this.x = new AnimatedValue(value.x);\n      _this.y = new AnimatedValue(value.y);\n    } else {\n      invariant(value.x instanceof AnimatedValue && value.y instanceof AnimatedValue, 'AnimatedValueXY must be initialized with an object of numbers or ' + 'AnimatedValues.');\n      _this.x = value.x;\n      _this.y = value.y;\n    }\n\n    _this._listeners = {};\n    return _this;\n  }\n  /**\n   * Directly set the value. This will stop any animations running on the value\n   * and update all the bound properties.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#setvalue\n   */\n\n\n  var _proto = AnimatedValueXY.prototype;\n\n  _proto.setValue = function setValue(value) {\n    this.x.setValue(value.x);\n    this.y.setValue(value.y);\n  }\n  /**\n   * Sets an offset that is applied on top of whatever value is set, whether\n   * via `setValue`, an animation, or `Animated.event`. Useful for compensating\n   * things like the start of a pan gesture.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#setoffset\n   */\n  ;\n\n  _proto.setOffset = function setOffset(offset) {\n    this.x.setOffset(offset.x);\n    this.y.setOffset(offset.y);\n  }\n  /**\n   * Merges the offset value into the base value and resets the offset to zero.\n   * The final output of the value is unchanged.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#flattenoffset\n   */\n  ;\n\n  _proto.flattenOffset = function flattenOffset() {\n    this.x.flattenOffset();\n    this.y.flattenOffset();\n  }\n  /**\n   * Sets the offset value to the base value, and resets the base value to\n   * zero. The final output of the value is unchanged.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#extractoffset\n   */\n  ;\n\n  _proto.extractOffset = function extractOffset() {\n    this.x.extractOffset();\n    this.y.extractOffset();\n  };\n\n  _proto.__getValue = function __getValue() {\n    return {\n      x: this.x.__getValue(),\n      y: this.y.__getValue()\n    };\n  }\n  /**\n   * Stops any animation and resets the value to its original.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#resetanimation\n   */\n  ;\n\n  _proto.resetAnimation = function resetAnimation(callback) {\n    this.x.resetAnimation();\n    this.y.resetAnimation();\n    callback && callback(this.__getValue());\n  }\n  /**\n   * Stops any running animation or tracking. `callback` is invoked with the\n   * final value after stopping the animation, which is useful for updating\n   * state to match the animation position with layout.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#stopanimation\n   */\n  ;\n\n  _proto.stopAnimation = function stopAnimation(callback) {\n    this.x.stopAnimation();\n    this.y.stopAnimation();\n    callback && callback(this.__getValue());\n  }\n  /**\n   * Adds an asynchronous listener to the value so you can observe updates from\n   * animations.  This is useful because there is no way to synchronously read\n   * the value because it might be driven natively.\n   *\n   * Returns a string that serves as an identifier for the listener.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#addlistener\n   */\n  ;\n\n  _proto.addListener = function addListener(callback) {\n    var _this2 = this;\n\n    var id = String(_uniqueId++);\n\n    var jointCallback = function jointCallback(_ref) {\n      var number = _ref.value;\n      callback(_this2.__getValue());\n    };\n\n    this._listeners[id] = {\n      x: this.x.addListener(jointCallback),\n      y: this.y.addListener(jointCallback)\n    };\n    return id;\n  }\n  /**\n   * Unregister a listener. The `id` param shall match the identifier\n   * previously returned by `addListener()`.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#removelistener\n   */\n  ;\n\n  _proto.removeListener = function removeListener(id) {\n    this.x.removeListener(this._listeners[id].x);\n    this.y.removeListener(this._listeners[id].y);\n    delete this._listeners[id];\n  }\n  /**\n   * Remove all registered listeners.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#removealllisteners\n   */\n  ;\n\n  _proto.removeAllListeners = function removeAllListeners() {\n    this.x.removeAllListeners();\n    this.y.removeAllListeners();\n    this._listeners = {};\n  }\n  /**\n   * Converts `{x, y}` into `{left, top}` for use in style.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#getlayout\n   */\n  ;\n\n  _proto.getLayout = function getLayout() {\n    return {\n      left: this.x,\n      top: this.y\n    };\n  }\n  /**\n   * Converts `{x, y}` into a useable translation transform.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#gettranslatetransform\n   */\n  ;\n\n  _proto.getTranslateTransform = function getTranslateTransform() {\n    return [{\n      translateX: this.x\n    }, {\n      translateY: this.y\n    }];\n  };\n\n  return AnimatedValueXY;\n}(AnimatedWithChildren);\n\nexport default AnimatedValueXY;"]},"metadata":{},"sourceType":"module"}