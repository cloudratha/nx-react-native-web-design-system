{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AlertDialogOverlay = exports.AlertDialogFooter = exports.AlertDialogBody = exports.AlertDialogHeader = exports.AlertDialogCloseButton = exports.AlertDialogContent = exports.AlertDialog = void 0;\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _tools = require(\"../tools\");\n\nvar sizes = {\n  xs: {\n    contentSize: {\n      width: '60%',\n      maxWidth: '280'\n    }\n  },\n  sm: {\n    contentSize: {\n      width: '65%',\n      maxWidth: '320'\n    }\n  },\n  md: {\n    contentSize: {\n      width: '75%',\n      maxWidth: '380'\n    }\n  },\n  lg: {\n    contentSize: {\n      width: '80%',\n      maxWidth: '520'\n    }\n  },\n  xl: {\n    contentSize: {\n      width: '90%',\n      maxWidth: '580'\n    }\n  },\n  full: {\n    contentSize: {\n      width: '100%'\n    }\n  }\n};\nvar AlertDialog = {\n  baseStyle: {\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  sizes: sizes,\n  defaultProps: {\n    size: 'md',\n    closeOnOverlayClick: true\n  }\n};\nexports.AlertDialog = AlertDialog;\nvar AlertDialogContent = {\n  baseStyle: function baseStyle(props) {\n    return {\n      bg: (0, _tools.mode)('coolGray.50', 'gray.700')(props),\n      _text: {\n        color: (0, _tools.mode)('coolGray.800', 'warmGray.50')(props)\n      },\n      shadow: 1,\n      rounded: 'lg',\n      maxHeight: _reactNative.Dimensions.get('window').height - 150 + \"px\",\n      overflow: 'hidden'\n    };\n  }\n};\nexports.AlertDialogContent = AlertDialogContent;\nvar AlertDialogCloseButton = {\n  baseStyle: function baseStyle(props) {\n    return {\n      position: 'absolute',\n      right: '3',\n      top: '3',\n      zIndex: '1',\n      colorScheme: 'coolGray',\n      p: '2',\n      _icon: {\n        size: '3',\n        color: (0, _tools.mode)('coolGray.600', 'coolGray.100')(props)\n      }\n    };\n  }\n};\nexports.AlertDialogCloseButton = AlertDialogCloseButton;\nvar AlertDialogHeader = {\n  baseStyle: function baseStyle(props) {\n    return {\n      py: '4',\n      px: '3',\n      borderBottomWidth: '1',\n      borderColor: (0, _tools.mode)('coolGray.200', 'gray.600')(props),\n      _text: {\n        fontSize: 'md',\n        fontWeight: 'semibold',\n        color: (0, _tools.mode)('coolGray.800', 'warmGray.50')(props),\n        lineHeight: 'sm'\n      }\n    };\n  }\n};\nexports.AlertDialogHeader = AlertDialogHeader;\nvar AlertDialogBody = {\n  baseStyle: function baseStyle(props) {\n    return {\n      pt: '2',\n      p: '3',\n      _text: {\n        color: (0, _tools.mode)('coolGray.600', 'coolGray.300')(props)\n      }\n    };\n  }\n};\nexports.AlertDialogBody = AlertDialogBody;\nvar AlertDialogFooter = {\n  baseStyle: function baseStyle(props) {\n    return {\n      p: '3',\n      bg: (0, _tools.mode)('coolGray.100', 'gray.600')(props),\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      flexWrap: 'wrap'\n    };\n  }\n};\nexports.AlertDialogFooter = AlertDialogFooter;\nvar AlertDialogOverlay = {\n  baseStyle: {\n    position: 'absolute',\n    left: '0',\n    top: '0',\n    opacity: '50',\n    right: '0',\n    bottom: '0'\n  }\n};\nexports.AlertDialogOverlay = AlertDialogOverlay;\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/Users/garethcozens/Documents/repo/cloudratha/react-native-web-nx-demo/node_modules/native-base/lib/commonjs/theme/components/alert-dialog.js"],"names":["Object","value","exports","_tools","require","sizes","xs","contentSize","width","maxWidth","sm","md","lg","xl","full","AlertDialog","baseStyle","height","justifyContent","alignItems","defaultProps","size","closeOnOverlayClick","AlertDialogContent","bg","_text","color","shadow","rounded","maxHeight","_reactNative","overflow","AlertDialogCloseButton","position","right","top","zIndex","colorScheme","p","_icon","AlertDialogHeader","py","px","borderBottomWidth","borderColor","fontSize","fontWeight","lineHeight","AlertDialogBody","pt","AlertDialogFooter","flexDirection","flexWrap","AlertDialogOverlay","left","opacity","bottom"],"mappings":"AAAAA,MAAM,CAANA,cAAAA,CAAAA,OAAAA,EAAAA,YAAAA,EAA2C;AAACC,EAAAA,KAAK,EAAjDD;AAA2C,CAA3CA;AAAyDE,OAAO,CAAPA,kBAAAA,GAA2BA,OAAO,CAAPA,iBAAAA,GAA0BA,OAAO,CAAPA,eAAAA,GAAwBA,OAAO,CAAPA,iBAAAA,GAA0BA,OAAO,CAAPA,sBAAAA,GAA+BA,OAAO,CAAPA,kBAAAA,GAA2BA,OAAO,CAAPA,WAAAA,GAAoB,KAArLA,CAAAA;;;;AAAqO,IAAIC,MAAM,GAACC,OAAX,YAAA;;AAA+B,IAAIC,KAAK,GAAC;AAACC,EAAAA,EAAE,EAAC;AAACC,IAAAA,WAAW,EAAC;AAACC,MAAAA,KAAK,EAAN,KAAA;AAAaC,MAAAA,QAAQ,EAAtC;AAAiB;AAAb,GAAJ;AAA+CC,EAAAA,EAAE,EAAC;AAACH,IAAAA,WAAW,EAAC;AAACC,MAAAA,KAAK,EAAN,KAAA;AAAaC,MAAAA,QAAQ,EAApF;AAA+D;AAAb,GAAlD;AAA6FE,EAAAA,EAAE,EAAC;AAACJ,IAAAA,WAAW,EAAC;AAACC,MAAAA,KAAK,EAAN,KAAA;AAAaC,MAAAA,QAAQ,EAAlI;AAA6G;AAAb,GAAhG;AAA2IG,EAAAA,EAAE,EAAC;AAACL,IAAAA,WAAW,EAAC;AAACC,MAAAA,KAAK,EAAN,KAAA;AAAaC,MAAAA,QAAQ,EAAhL;AAA2J;AAAb,GAA9I;AAAyLI,EAAAA,EAAE,EAAC;AAACN,IAAAA,WAAW,EAAC;AAACC,MAAAA,KAAK,EAAN,KAAA;AAAaC,MAAAA,QAAQ,EAA9N;AAAyM;AAAb,GAA5L;AAAuOK,EAAAA,IAAI,EAAC;AAACP,IAAAA,WAAW,EAAC;AAACC,MAAAA,KAAK,EAAzQ;AAAmQ;AAAb;AAA5O,CAAV;AAAoR,IAAIO,WAAW,GAAC;AAACC,EAAAA,SAAS,EAAC;AAACR,IAAAA,KAAK,EAAN,MAAA;AAAcS,IAAAA,MAAM,EAApB,MAAA;AAA4BC,IAAAA,cAAc,EAA1C,QAAA;AAAoDC,IAAAA,UAAU,EAAzE;AAAW,GAAX;AAAoFd,EAAAA,KAAK,EAAzF,KAAA;AAAgGe,EAAAA,YAAY,EAAC;AAACC,IAAAA,IAAI,EAAL,IAAA;AAAWC,IAAAA,mBAAmB,EAA3J;AAA6H;AAA7G,CAAhB;AAAmKpB,OAAO,CAAPA,WAAAA,GAAAA,WAAAA;AAAgC,IAAIqB,kBAAkB,GAAC;AAACP,EAAAA,SAAS,EAAC,SAAA,SAAA,CAAA,KAAA,EAAyB;AAAC,WAAM;AAACQ,MAAAA,EAAE,EAAC,CAAC,GAAErB,MAAM,CAAT,IAAA,EAAA,aAAA,EAAA,UAAA,EAAJ,KAAI,CAAJ;AAAqDsB,MAAAA,KAAK,EAAC;AAACC,QAAAA,KAAK,EAAC,CAAC,GAAEvB,MAAM,CAAT,IAAA,EAAA,cAAA,EAAA,aAAA,EAAlE,KAAkE;AAAP,OAA3D;AAAwHwB,MAAAA,MAAM,EAA9H,CAAA;AAAiIC,MAAAA,OAAO,EAAxI,IAAA;AAA8IC,MAAAA,SAAS,EAACC,YAAY,CAAZA,UAAAA,CAAAA,GAAAA,CAAAA,QAAAA,EAAAA,MAAAA,GAAAA,GAAAA,GAAxJ,IAAA;AAA8MC,MAAAA,QAAQ,EAA5N;AAAM,KAAN;AAA5D;AAAuB,CAAvB;AAAsS7B,OAAO,CAAPA,kBAAAA,GAAAA,kBAAAA;AAA8C,IAAI8B,sBAAsB,GAAC;AAAChB,EAAAA,SAAS,EAAC,SAAA,SAAA,CAAA,KAAA,EAAyB;AAAC,WAAM;AAACiB,MAAAA,QAAQ,EAAT,UAAA;AAAqBC,MAAAA,KAAK,EAA1B,GAAA;AAA+BC,MAAAA,GAAG,EAAlC,GAAA;AAAuCC,MAAAA,MAAM,EAA7C,GAAA;AAAkDC,MAAAA,WAAW,EAA7D,UAAA;AAAyEC,MAAAA,CAAC,EAA1E,GAAA;AAA+EC,MAAAA,KAAK,EAAC;AAAClB,QAAAA,IAAI,EAAL,GAAA;AAAUK,QAAAA,KAAK,EAAC,CAAC,GAAEvB,MAAM,CAAT,IAAA,EAAA,cAAA,EAAA,cAAA,EAA3G,KAA2G;AAAhB;AAArF,KAAN;AAAhE;AAA2B,CAA3B;AAAsOD,OAAO,CAAPA,sBAAAA,GAAAA,sBAAAA;AAAsD,IAAIsC,iBAAiB,GAAC;AAACxB,EAAAA,SAAS,EAAC,SAAA,SAAA,CAAA,KAAA,EAAyB;AAAC,WAAM;AAACyB,MAAAA,EAAE,EAAH,GAAA;AAAQC,MAAAA,EAAE,EAAV,GAAA;AAAeC,MAAAA,iBAAiB,EAAhC,GAAA;AAAqCC,MAAAA,WAAW,EAAC,CAAC,GAAEzC,MAAM,CAAT,IAAA,EAAA,cAAA,EAAA,UAAA,EAAjD,KAAiD,CAAjD;AAAmGsB,MAAAA,KAAK,EAAC;AAACoB,QAAAA,QAAQ,EAAT,IAAA;AAAeC,QAAAA,UAAU,EAAzB,UAAA;AAAqCpB,QAAAA,KAAK,EAAC,CAAC,GAAEvB,MAAM,CAAT,IAAA,EAAA,cAAA,EAAA,aAAA,EAA3C,KAA2C,CAA3C;AAAgG4C,QAAAA,UAAU,EAAzN;AAA+G;AAAzG,KAAN;AAA3D;AAAsB,CAAtB;AAA+R7C,OAAO,CAAPA,iBAAAA,GAAAA,iBAAAA;AAA4C,IAAI8C,eAAe,GAAC;AAAChC,EAAAA,SAAS,EAAC,SAAA,SAAA,CAAA,KAAA,EAAyB;AAAC,WAAM;AAACiC,MAAAA,EAAE,EAAH,GAAA;AAAQX,MAAAA,CAAC,EAAT,GAAA;AAAcb,MAAAA,KAAK,EAAC;AAACC,QAAAA,KAAK,EAAC,CAAC,GAAEvB,MAAM,CAAT,IAAA,EAAA,cAAA,EAAA,cAAA,EAAjC,KAAiC;AAAP;AAApB,KAAN;AAAzD;AAAoB,CAApB;AAAqJD,OAAO,CAAPA,eAAAA,GAAAA,eAAAA;AAAwC,IAAIgD,iBAAiB,GAAC;AAAClC,EAAAA,SAAS,EAAC,SAAA,SAAA,CAAA,KAAA,EAAyB;AAAC,WAAM;AAACsB,MAAAA,CAAC,EAAF,GAAA;AAAOd,MAAAA,EAAE,EAAC,CAAC,GAAErB,MAAM,CAAT,IAAA,EAAA,cAAA,EAAA,UAAA,EAAV,KAAU,CAAV;AAA4DgD,MAAAA,aAAa,EAAzE,KAAA;AAAgFjC,MAAAA,cAAc,EAA9F,UAAA;AAA0GkC,MAAAA,QAAQ,EAAxH;AAAM,KAAN;AAA3D;AAAsB,CAAtB;AAA+LlD,OAAO,CAAPA,iBAAAA,GAAAA,iBAAAA;AAA4C,IAAImD,kBAAkB,GAAC;AAACrC,EAAAA,SAAS,EAAC;AAACiB,IAAAA,QAAQ,EAAT,UAAA;AAAqBqB,IAAAA,IAAI,EAAzB,GAAA;AAA8BnB,IAAAA,GAAG,EAAjC,GAAA;AAAsCoB,IAAAA,OAAO,EAA7C,IAAA;AAAmDrB,IAAAA,KAAK,EAAxD,GAAA;AAA6DsB,IAAAA,MAAM,EAArG;AAAkC;AAAX,CAAvB;AAA4GtD,OAAO,CAAPA,kBAAAA,GAAAA,kBAAAA","sourcesContent":["Object.defineProperty(exports,\"__esModule\",{value:true});exports.AlertDialogOverlay=exports.AlertDialogFooter=exports.AlertDialogBody=exports.AlertDialogHeader=exports.AlertDialogCloseButton=exports.AlertDialogContent=exports.AlertDialog=void 0;var _reactNative=require(\"react-native\");var _tools=require(\"../tools\");var sizes={xs:{contentSize:{width:'60%',maxWidth:'280'}},sm:{contentSize:{width:'65%',maxWidth:'320'}},md:{contentSize:{width:'75%',maxWidth:'380'}},lg:{contentSize:{width:'80%',maxWidth:'520'}},xl:{contentSize:{width:'90%',maxWidth:'580'}},full:{contentSize:{width:'100%'}}};var AlertDialog={baseStyle:{width:'100%',height:'100%',justifyContent:'center',alignItems:'center'},sizes:sizes,defaultProps:{size:'md',closeOnOverlayClick:true}};exports.AlertDialog=AlertDialog;var AlertDialogContent={baseStyle:function baseStyle(props){return{bg:(0,_tools.mode)('coolGray.50','gray.700')(props),_text:{color:(0,_tools.mode)('coolGray.800','warmGray.50')(props)},shadow:1,rounded:'lg',maxHeight:_reactNative.Dimensions.get('window').height-150+\"px\",overflow:'hidden'};}};exports.AlertDialogContent=AlertDialogContent;var AlertDialogCloseButton={baseStyle:function baseStyle(props){return{position:'absolute',right:'3',top:'3',zIndex:'1',colorScheme:'coolGray',p:'2',_icon:{size:'3',color:(0,_tools.mode)('coolGray.600','coolGray.100')(props)}};}};exports.AlertDialogCloseButton=AlertDialogCloseButton;var AlertDialogHeader={baseStyle:function baseStyle(props){return{py:'4',px:'3',borderBottomWidth:'1',borderColor:(0,_tools.mode)('coolGray.200','gray.600')(props),_text:{fontSize:'md',fontWeight:'semibold',color:(0,_tools.mode)('coolGray.800','warmGray.50')(props),lineHeight:'sm'}};}};exports.AlertDialogHeader=AlertDialogHeader;var AlertDialogBody={baseStyle:function baseStyle(props){return{pt:'2',p:'3',_text:{color:(0,_tools.mode)('coolGray.600','coolGray.300')(props)}};}};exports.AlertDialogBody=AlertDialogBody;var AlertDialogFooter={baseStyle:function baseStyle(props){return{p:'3',bg:(0,_tools.mode)('coolGray.100','gray.600')(props),flexDirection:'row',justifyContent:'flex-end',flexWrap:'wrap'};}};exports.AlertDialogFooter=AlertDialogFooter;var AlertDialogOverlay={baseStyle:{position:'absolute',left:'0',top:'0',opacity:'50',right:'0',bottom:'0'}};exports.AlertDialogOverlay=AlertDialogOverlay;\n//# sourceMappingURL=alert-dialog.js.map"]},"metadata":{},"sourceType":"script"}