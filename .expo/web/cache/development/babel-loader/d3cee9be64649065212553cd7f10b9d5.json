{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useTypeahead = useTypeahead;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _reducer = require(\"./reducer\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar stateChangeTypes = _interopRequireWildcard(require(\"./types\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _utils = require(\"./utils\");\n\nfunction isControlledProp(props, key) {\n  return props[key] !== undefined;\n}\n\nfunction useTypeahead(props) {\n  var defaultValues = (0, _extends2.default)({}, _utils.dropdownDefaultStateValues);\n  defaultValues.isOpen = (0, _utils.getDefaultValue)(props, 'isOpen');\n\n  var _React$useReducer = _react.default.useReducer(_reducer.useTypeaheadReducer, defaultValues),\n      _React$useReducer2 = (0, _slicedToArray2.default)(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var dispatchWithProps = function dispatchWithProps(object) {\n    dispatch((0, _extends2.default)({}, object, {\n      props: props\n    }));\n  };\n\n  var inputValue = state.inputValue,\n      isOpen = state.isOpen;\n  var items = props.items,\n      onInputValueChange = props.onInputValueChange,\n      onSelectedItemChange = props.onSelectedItemChange,\n      selectedItem = props.selectedItem,\n      itemToString = props.itemToString;\n  var isControlled = isControlledProp(props, 'selectedItem');\n  (0, _react.useEffect)(function () {\n    if (isControlled) {\n      dispatch({\n        type: stateChangeTypes.ControlledPropUpdatedSelectedItem,\n        inputValue: itemToString(selectedItem)\n      });\n    }\n  }, [selectedItem, isControlled, itemToString]);\n\n  var onChangeText = function onChangeText(text) {\n    onInputValueChange == null ? void 0 : onInputValueChange({\n      inputValue: text\n    });\n    dispatchWithProps({\n      type: stateChangeTypes.InputChange,\n      inputValue: text\n    });\n  };\n\n  var handleItemSelect = function handleItemSelect(item, index) {\n    onSelectedItemChange == null ? void 0 : onSelectedItemChange(item);\n    dispatchWithProps({\n      type: stateChangeTypes.ItemClick,\n      index: index\n    });\n\n    _reactNative.Keyboard.dismiss();\n  };\n\n  var getMenuItemProps = function getMenuItemProps(item, index) {\n    return {\n      onPress: function onPress() {\n        return handleItemSelect(item, index);\n      },\n      accessible: true,\n      accessiblityRole: 'menuitem'\n    };\n  };\n\n  var getMenuProps = function getMenuProps() {\n    return {\n      accessible: true,\n      accessibilityRole: 'menu',\n      accessibilityHint: \"Showing \" + items.length + \" records\"\n    };\n  };\n\n  var getToggleButtonProps = function getToggleButtonProps() {\n    return {\n      onPress: function onPress() {\n        dispatchWithProps({\n          type: stateChangeTypes.ToggleButtonClick\n        });\n      }\n    };\n  };\n\n  var getInputProps = function getInputProps(propInputVal, propOnchangeText) {\n    return {\n      onChangeText: propInputVal ? propOnchangeText : onChangeText,\n      value: propInputVal ? propInputVal : inputValue,\n      accessibilityRole: 'combobox',\n      accessibilityLabel: 'Typeahead input',\n      accessibilityState: {\n        expanded: isOpen\n      }\n    };\n  };\n\n  return {\n    getInputProps: getInputProps,\n    getMenuItemProps: getMenuItemProps,\n    getMenuProps: getMenuProps,\n    getToggleButtonProps: getToggleButtonProps,\n    isOpen: isOpen\n  };\n}","map":{"version":3,"sources":["/Users/garethcozens/Documents/repo/cloudratha/react-native-web-nx-demo/node_modules/native-base/lib/commonjs/components/composites/Typeahead/useTypeahead/useTypeahead.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","value","exports","_slicedToArray2","_extends2","_reducer","_react","stateChangeTypes","_utils","props","defaultValues","_React$useReducer","_React$useReducer2","state","dispatch","dispatchWithProps","inputValue","isOpen","items","onInputValueChange","onSelectedItemChange","selectedItem","itemToString","isControlled","isControlledProp","type","onChangeText","handleItemSelect","index","_reactNative","getMenuItemProps","onPress","accessible","accessiblityRole","getMenuProps","accessibilityRole","accessibilityHint","getToggleButtonProps","getInputProps","propInputVal","accessibilityLabel","accessibilityState","expanded"],"mappings":"AAAA,IAAIA,uBAAuB,GAACC,OAAO,CAAnC,+CAAmC,CAAnC;;AAAqF,IAAIC,sBAAsB,GAACD,OAAO,CAAlC,8CAAkC,CAAlC;;AAAmFE,MAAM,CAANA,cAAAA,CAAAA,OAAAA,EAAAA,YAAAA,EAA2C;AAACC,EAAAA,KAAK,EAAjDD;AAA2C,CAA3CA;AAAyDE,OAAO,CAAPA,YAAAA,GAAAA,YAAAA;;AAAkC,IAAIC,eAAe,GAACJ,sBAAsB,CAACD,OAAO,CAAlD,sCAAkD,CAAR,CAA1C;;AAA4F,IAAIM,SAAS,GAACL,sBAAsB,CAACD,OAAO,CAA5C,gCAA4C,CAAR,CAApC;;AAAgF,IAAIO,QAAQ,GAACP,OAAb,aAAA;;AAAkC,IAAIQ,MAAM,GAACT,uBAAuB,CAACC,OAAO,CAA1C,OAA0C,CAAR,CAAlC;;AAAqD,IAAIS,gBAAgB,GAACV,uBAAuB,CAACC,OAA7C,WAA4C,CAA5C;;;;AAA0G,IAAIU,MAAM,GAACV,OAAX,WAAA;;AAA8B,SAAA,gBAAA,CAAA,KAAA,EAAA,GAAA,EAAoC;AAAC,SAAOW,KAAK,CAALA,GAAK,CAALA,KAAP,SAAA;AAA+B;;AAAA,SAAA,YAAA,CAAA,KAAA,EAA4B;AAAC,MAAIC,aAAa,GAAC,CAAC,GAAEN,SAAS,CAAZ,OAAA,EAAA,EAAA,EAAyBI,MAAM,CAAjD,0BAAkB,CAAlB;AAA8EE,EAAAA,aAAa,CAAbA,MAAAA,GAAqB,CAAC,GAAEF,MAAM,CAAT,eAAA,EAAA,KAAA,EAArBE,QAAqB,CAArBA;;AAAgE,MAAIC,iBAAiB,GAACL,MAAM,CAANA,OAAAA,CAAAA,UAAAA,CAA0BD,QAAQ,CAAlCC,mBAAAA,EAAtB,aAAsBA,CAAtB;AAAA,MAA4FM,kBAAkB,GAAC,CAAC,GAAET,eAAe,CAAlB,OAAA,EAAA,iBAAA,EAA/G,CAA+G,CAA/G;AAAA,MAAgKU,KAAK,GAACD,kBAAkB,CAAxL,CAAwL,CAAxL;AAAA,MAA4LE,QAAQ,GAACF,kBAAkB,CAAvN,CAAuN,CAAvN;;AAA2N,MAAIG,iBAAiB,GAAC,SAAA,iBAAA,CAAA,MAAA,EAAkC;AAACD,IAAAA,QAAQ,CAAC,CAAC,GAAEV,SAAS,CAAZ,OAAA,EAAA,EAAA,EAAA,MAAA,EAAgC;AAACK,MAAAA,KAAK,EAA/CK;AAAyC,KAAhC,CAAD,CAARA;AAAzD,GAAA;;AAAoH,MAAIE,UAAU,GAACH,KAAK,CAApB,UAAA;AAAA,MAAgCI,MAAM,GAACJ,KAAK,CAA5C,MAAA;AAAoD,MAAIK,KAAK,GAACT,KAAK,CAAf,KAAA;AAAA,MAAsBU,kBAAkB,GAACV,KAAK,CAA9C,kBAAA;AAAA,MAAkEW,oBAAoB,GAACX,KAAK,CAA5F,oBAAA;AAAA,MAAkHY,YAAY,GAACZ,KAAK,CAApI,YAAA;AAAA,MAAkJa,YAAY,GAACb,KAAK,CAApK,YAAA;AAAkL,MAAIc,YAAY,GAACC,gBAAgB,CAAA,KAAA,EAAjC,cAAiC,CAAjC;AAAwD,GAAC,GAAElB,MAAM,CAAT,SAAA,EAAqB,YAAU;AAAC,QAAA,YAAA,EAAgB;AAACQ,MAAAA,QAAQ,CAAC;AAACW,QAAAA,IAAI,EAAClB,gBAAgB,CAAtB,iCAAA;AAAyDS,QAAAA,UAAU,EAACM,YAAY,CAAzFR,YAAyF;AAAhF,OAAD,CAARA;AAA4G;AAA7J,GAAA,EAA8J,CAAA,YAAA,EAAA,YAAA,EAA9J,YAA8J,CAA9J;;AAAwM,MAAIY,YAAY,GAAC,SAAA,YAAA,CAAA,IAAA,EAA2B;AAACP,IAAAA,kBAAkB,IAAlBA,IAAAA,GAAyB,KAAzBA,CAAAA,GAAgCA,kBAAkB,CAAC;AAACH,MAAAA,UAAU,EAA9DG;AAAmD,KAAD,CAAlDA;AAAsEJ,IAAAA,iBAAiB,CAAC;AAACU,MAAAA,IAAI,EAAClB,gBAAgB,CAAtB,WAAA;AAAmCS,MAAAA,UAAU,EAA/DD;AAAkB,KAAD,CAAjBA;AAAnH,GAAA;;AAA4L,MAAIY,gBAAgB,GAAC,SAAA,gBAAA,CAAA,IAAA,EAAA,KAAA,EAAqC;AAACP,IAAAA,oBAAoB,IAApBA,IAAAA,GAA2B,KAA3BA,CAAAA,GAAkCA,oBAAoB,CAAtDA,IAAsD,CAAtDA;AAA6DL,IAAAA,iBAAiB,CAAC;AAACU,MAAAA,IAAI,EAAClB,gBAAgB,CAAtB,SAAA;AAAiCqB,MAAAA,KAAK,EAAxDb;AAAkB,KAAD,CAAjBA;;AAAiEc,IAAAA,YAAY,CAAZA,QAAAA,CAAAA,OAAAA;AAAzL,GAAA;;AAA2N,MAAIC,gBAAgB,GAAC,SAAA,gBAAA,CAAA,IAAA,EAAA,KAAA,EAAqC;AAAC,WAAM;AAACC,MAAAA,OAAO,EAAC,SAAA,OAAA,GAAkB;AAAC,eAAOJ,gBAAgB,CAAA,IAAA,EAAvB,KAAuB,CAAvB;AAA5B,OAAA;AAAkEK,MAAAA,UAAU,EAA5E,IAAA;AAAkFC,MAAAA,gBAAgB,EAAxG;AAAM,KAAN;AAA3D,GAAA;;AAAkL,MAAIC,YAAY,GAAC,SAAA,YAAA,GAAuB;AAAC,WAAM;AAACF,MAAAA,UAAU,EAAX,IAAA;AAAiBG,MAAAA,iBAAiB,EAAlC,MAAA;AAA0CC,MAAAA,iBAAiB,EAAC,aAAWlB,KAAK,CAAhB,MAAA,GAAlE;AAAM,KAAN;AAAzC,GAAA;;AAAiJ,MAAImB,oBAAoB,GAAC,SAAA,oBAAA,GAA+B;AAAC,WAAM;AAACN,MAAAA,OAAO,EAAC,SAAA,OAAA,GAAkB;AAAChB,QAAAA,iBAAiB,CAAC;AAACU,UAAAA,IAAI,EAAClB,gBAAgB,CAAxCQ;AAAkB,SAAD,CAAjBA;AAAlC;AAAM,KAAN;AAAzD,GAAA;;AAA6J,MAAIuB,aAAa,GAAC,SAAA,aAAA,CAAA,YAAA,EAAA,gBAAA,EAAqD;AAAC,WAAM;AAACZ,MAAAA,YAAY,EAACa,YAAY,GAAA,gBAAA,GAA1B,YAAA;AAAyDtC,MAAAA,KAAK,EAACsC,YAAY,GAAA,YAAA,GAA3E,UAAA;AAAoGJ,MAAAA,iBAAiB,EAArH,UAAA;AAAiIK,MAAAA,kBAAkB,EAAnJ,iBAAA;AAAsKC,MAAAA,kBAAkB,EAAC;AAACC,QAAAA,QAAQ,EAAxM;AAA+L;AAAzL,KAAN;AAAxE,GAAA;;AAA4R,SAAM;AAACJ,IAAAA,aAAa,EAAd,aAAA;AAA6BR,IAAAA,gBAAgB,EAA7C,gBAAA;AAA+DI,IAAAA,YAAY,EAA3E,YAAA;AAAyFG,IAAAA,oBAAoB,EAA7G,oBAAA;AAAmIpB,IAAAA,MAAM,EAA/I;AAAM,GAAN;AAAyJ","sourcesContent":["var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.useTypeahead=useTypeahead;var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _reducer=require(\"./reducer\");var _react=_interopRequireWildcard(require(\"react\"));var stateChangeTypes=_interopRequireWildcard(require(\"./types\"));var _reactNative=require(\"react-native\");var _utils=require(\"./utils\");function isControlledProp(props,key){return props[key]!==undefined;}function useTypeahead(props){var defaultValues=(0,_extends2.default)({},_utils.dropdownDefaultStateValues);defaultValues.isOpen=(0,_utils.getDefaultValue)(props,'isOpen');var _React$useReducer=_react.default.useReducer(_reducer.useTypeaheadReducer,defaultValues),_React$useReducer2=(0,_slicedToArray2.default)(_React$useReducer,2),state=_React$useReducer2[0],dispatch=_React$useReducer2[1];var dispatchWithProps=function dispatchWithProps(object){dispatch((0,_extends2.default)({},object,{props:props}));};var inputValue=state.inputValue,isOpen=state.isOpen;var items=props.items,onInputValueChange=props.onInputValueChange,onSelectedItemChange=props.onSelectedItemChange,selectedItem=props.selectedItem,itemToString=props.itemToString;var isControlled=isControlledProp(props,'selectedItem');(0,_react.useEffect)(function(){if(isControlled){dispatch({type:stateChangeTypes.ControlledPropUpdatedSelectedItem,inputValue:itemToString(selectedItem)});}},[selectedItem,isControlled,itemToString]);var onChangeText=function onChangeText(text){onInputValueChange==null?void 0:onInputValueChange({inputValue:text});dispatchWithProps({type:stateChangeTypes.InputChange,inputValue:text});};var handleItemSelect=function handleItemSelect(item,index){onSelectedItemChange==null?void 0:onSelectedItemChange(item);dispatchWithProps({type:stateChangeTypes.ItemClick,index:index});_reactNative.Keyboard.dismiss();};var getMenuItemProps=function getMenuItemProps(item,index){return{onPress:function onPress(){return handleItemSelect(item,index);},accessible:true,accessiblityRole:'menuitem'};};var getMenuProps=function getMenuProps(){return{accessible:true,accessibilityRole:'menu',accessibilityHint:\"Showing \"+items.length+\" records\"};};var getToggleButtonProps=function getToggleButtonProps(){return{onPress:function onPress(){dispatchWithProps({type:stateChangeTypes.ToggleButtonClick});}};};var getInputProps=function getInputProps(propInputVal,propOnchangeText){return{onChangeText:propInputVal?propOnchangeText:onChangeText,value:propInputVal?propInputVal:inputValue,accessibilityRole:'combobox',accessibilityLabel:'Typeahead input',accessibilityState:{expanded:isOpen}};};return{getInputProps:getInputProps,getMenuItemProps:getMenuItemProps,getMenuProps:getMenuProps,getToggleButtonProps:getToggleButtonProps,isOpen:isOpen};}\n//# sourceMappingURL=useTypeahead.js.map"]},"metadata":{},"sourceType":"script"}