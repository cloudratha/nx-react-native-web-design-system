{"ast":null,"code":"'use strict';\n\nimport NativeAnimatedHelper from \"../NativeAnimatedHelper\";\nvar startNativeAnimationNextId = 1;\n\nvar Animation = function () {\n  function Animation() {}\n\n  var _proto = Animation.prototype;\n\n  _proto.start = function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {};\n\n  _proto.stop = function stop() {\n    if (this.__nativeId) {\n      NativeAnimatedHelper.API.stopAnimation(this.__nativeId);\n    }\n  };\n\n  _proto.__getNativeAnimationConfig = function __getNativeAnimationConfig() {\n    throw new Error('This animation type cannot be offloaded to native');\n  };\n\n  _proto.__debouncedOnEnd = function __debouncedOnEnd(result) {\n    var onEnd = this.__onEnd;\n    this.__onEnd = null;\n    onEnd && onEnd(result);\n  };\n\n  _proto.__startNativeAnimation = function __startNativeAnimation(animatedValue) {\n    var startNativeAnimationWaitId = startNativeAnimationNextId + \":startAnimation\";\n    startNativeAnimationNextId += 1;\n    NativeAnimatedHelper.API.setWaitingForIdentifier(startNativeAnimationWaitId);\n\n    try {\n      animatedValue.__makeNative();\n\n      this.__nativeId = NativeAnimatedHelper.generateNewAnimationId();\n      NativeAnimatedHelper.API.startAnimatingNode(this.__nativeId, animatedValue.__getNativeTag(), this.__getNativeAnimationConfig(), this.__debouncedOnEnd.bind(this));\n    } catch (e) {\n      throw e;\n    } finally {\n      NativeAnimatedHelper.API.unsetWaitingForIdentifier(startNativeAnimationWaitId);\n    }\n  };\n\n  return Animation;\n}();\n\nexport default Animation;\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/Users/garethcozens/Documents/repo/cloudratha/react-native-web-nx-demo/node_modules/react-native-web/dist/vendor/react-native/Animated/animations/Animation.js"],"names":["startNativeAnimationNextId","Animation","_proto","NativeAnimatedHelper","onEnd","startNativeAnimationWaitId","animatedValue"],"mappings":"AASA;;AAEA,OAAA,oBAAA;AACA,IAAIA,0BAA0B,GAA9B,CAAA;;AAIA,IAAIC,SAAS,GAAgB,YAAY;AACvC,WAAA,SAAA,GAAqB,CAErB;;AAAA,MAAIC,MAAM,GAAGD,SAAS,CAAtB,SAAA;;AAEAC,EAAAA,MAAM,CAANA,KAAAA,GAAe,SAAA,KAAA,CAAA,SAAA,EAAA,QAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,aAAA,EAA6E,CAA5FA,CAAAA;;AAEAA,EAAAA,MAAM,CAANA,IAAAA,GAAc,SAAA,IAAA,GAAgB;AAC5B,QAAI,KAAJ,UAAA,EAAqB;AACnBC,MAAAA,oBAAoB,CAApBA,GAAAA,CAAAA,aAAAA,CAAuC,KAAvCA,UAAAA;AAEH;AAJDD,GAAAA;;AAMAA,EAAAA,MAAM,CAANA,0BAAAA,GAAoC,SAAA,0BAAA,GAAsC;AAGxE,UAAM,IAAA,KAAA,CAAN,mDAAM,CAAN;AAHFA,GAAAA;;AAOAA,EAAAA,MAAM,CAANA,gBAAAA,GAA0B,SAAA,gBAAA,CAAA,MAAA,EAAkC;AAC1D,QAAIE,KAAK,GAAG,KAAZ,OAAA;AACA,SAAA,OAAA,GAAA,IAAA;AACAA,IAAAA,KAAK,IAAIA,KAAK,CAAdA,MAAc,CAAdA;AAHFF,GAAAA;;AAMAA,EAAAA,MAAM,CAANA,sBAAAA,GAAgC,SAAA,sBAAA,CAAA,aAAA,EAA+C;AAC7E,QAAIG,0BAA0B,GAAGL,0BAA0B,GAA3D,iBAAA;AACAA,IAAAA,0BAA0B,IAA1BA,CAAAA;AACAG,IAAAA,oBAAoB,CAApBA,GAAAA,CAAAA,uBAAAA,CAAAA,0BAAAA;;AAEA,QAAI;AACFG,MAAAA,aAAa,CAAbA,YAAAA;;AAEA,WAAA,UAAA,GAAkBH,oBAAoB,CAAtC,sBAAkBA,EAAlB;AACAA,MAAAA,oBAAoB,CAApBA,GAAAA,CAAAA,kBAAAA,CAA4C,KAA5CA,UAAAA,EAA6DG,aAAa,CAA1EH,cAA6DG,EAA7DH,EAA6F,KAA7FA,0BAA6F,EAA7FA,EAAgI,KAAA,gBAAA,CAAA,IAAA,CAAhIA,IAAgI,CAAhIA;AACA,KALF,CAKE,OAAA,CAAA,EAAU;AACV,YAAA,CAAA;AANF,KAAA,SAOU;AACRA,MAAAA,oBAAoB,CAApBA,GAAAA,CAAAA,yBAAAA,CAAAA,0BAAAA;AAEH;AAfDD,GAAAA;;AAiBA,SAAA,SAAA;AA3CF,CAA6B,EAA7B;;AA8CA,eAAA,SAAA","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nvar startNativeAnimationNextId = 1; // Important note: start() and stop() will only be called at most once.\n// Once an animation has been stopped or finished its course, it will\n// not be reused.\n\nvar Animation = /*#__PURE__*/function () {\n  function Animation() {}\n\n  var _proto = Animation.prototype;\n\n  _proto.start = function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {};\n\n  _proto.stop = function stop() {\n    if (this.__nativeId) {\n      NativeAnimatedHelper.API.stopAnimation(this.__nativeId);\n    }\n  };\n\n  _proto.__getNativeAnimationConfig = function __getNativeAnimationConfig() {\n    // Subclasses that have corresponding animation implementation done in native\n    // should override this method\n    throw new Error('This animation type cannot be offloaded to native');\n  } // Helper function for subclasses to make sure onEnd is only called once.\n  ;\n\n  _proto.__debouncedOnEnd = function __debouncedOnEnd(result) {\n    var onEnd = this.__onEnd;\n    this.__onEnd = null;\n    onEnd && onEnd(result);\n  };\n\n  _proto.__startNativeAnimation = function __startNativeAnimation(animatedValue) {\n    var startNativeAnimationWaitId = startNativeAnimationNextId + \":startAnimation\";\n    startNativeAnimationNextId += 1;\n    NativeAnimatedHelper.API.setWaitingForIdentifier(startNativeAnimationWaitId);\n\n    try {\n      animatedValue.__makeNative();\n\n      this.__nativeId = NativeAnimatedHelper.generateNewAnimationId();\n      NativeAnimatedHelper.API.startAnimatingNode(this.__nativeId, animatedValue.__getNativeTag(), this.__getNativeAnimationConfig(), this.__debouncedOnEnd.bind(this));\n    } catch (e) {\n      throw e;\n    } finally {\n      NativeAnimatedHelper.API.unsetWaitingForIdentifier(startNativeAnimationWaitId);\n    }\n  };\n\n  return Animation;\n}();\n\nexport default Animation;"]},"metadata":{},"sourceType":"module"}