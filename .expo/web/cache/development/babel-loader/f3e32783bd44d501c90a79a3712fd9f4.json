{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useLink = useLink;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar linkToHREF = function linkToHREF(URL) {\n  _reactNative.Linking.openURL(URL).catch(function (err) {\n    return console.error('An error occurred', err);\n  });\n};\n\nvar addOnPressFunctionality = function addOnPressFunctionality(href, callback) {\n  href ? linkToHREF(href) : '';\n  callback ? callback() : function () {};\n};\n\nfunction useLink(props) {\n  var href = props.href,\n      isExternal = props.isExternal,\n      _onPress = props.onPress,\n      _ref = props._ref;\n  var platformLinkProps = {};\n\n  if (_reactNative.Platform.OS === 'web') {\n    platformLinkProps = {\n      href: href,\n      onClick: _onPress\n    };\n\n    if (isExternal && _ref.current) {\n      _ref.current.target = '_blank';\n    }\n  } else {\n    platformLinkProps = {\n      onPress: function onPress() {\n        addOnPressFunctionality(href, _onPress);\n      }\n    };\n  }\n\n  return {\n    linkProps: (0, _extends2.default)({}, platformLinkProps, {\n      accessibilityRole: 'link',\n      accessible: true\n    })\n  };\n}","map":{"version":3,"sources":["/Users/garethcozens/Documents/repo/cloudratha/react-native-web-nx-demo/node_modules/native-base/lib/commonjs/components/primitives/Link/useLink.js"],"names":["_interopRequireDefault","require","Object","value","exports","_extends2","linkToHREF","_reactNative","console","addOnPressFunctionality","href","callback","props","isExternal","_onPress","_ref","platformLinkProps","onClick","onPress","linkProps","accessibilityRole","accessible"],"mappings":"AAAA,IAAIA,sBAAsB,GAACC,OAAO,CAAlC,8CAAkC,CAAlC;;AAAmFC,MAAM,CAANA,cAAAA,CAAAA,OAAAA,EAAAA,YAAAA,EAA2C;AAACC,EAAAA,KAAK,EAAjDD;AAA2C,CAA3CA;AAAyDE,OAAO,CAAPA,OAAAA,GAAAA,OAAAA;;AAAwB,IAAIC,SAAS,GAACL,sBAAsB,CAACC,OAAO,CAA5C,gCAA4C,CAAR,CAApC;;;;AAAyH,IAAIK,UAAU,GAAC,SAAA,UAAA,CAAA,GAAA,EAAwB;AAACC,EAAAA,YAAY,CAAZA,OAAAA,CAAAA,OAAAA,CAAAA,GAAAA,EAAAA,KAAAA,CAAwC,UAAA,GAAA,EAAa;AAAC,WAAOC,OAAO,CAAPA,KAAAA,CAAAA,mBAAAA,EAAP,GAAOA,CAAP;AAAtDD,GAAAA;AAAxC,CAAA;;AAAiJ,IAAIE,uBAAuB,GAAC,SAAA,uBAAA,CAAA,IAAA,EAAA,QAAA,EAA+C;AAACC,EAAAA,IAAI,GAACJ,UAAU,CAAX,IAAW,CAAX,GAAJI,EAAAA;AAAyBC,EAAAA,QAAQ,GAACA,QAAD,EAAA,GAAY,YAAU,CAA9BA,CAAAA;AAArG,CAAA;;AAAwI,SAAA,OAAA,CAAA,KAAA,EAAuB;AAAC,MAAID,IAAI,GAACE,KAAK,CAAd,IAAA;AAAA,MAAoBC,UAAU,GAACD,KAAK,CAApC,UAAA;AAAA,MAAgDE,QAAQ,GAACF,KAAK,CAA9D,OAAA;AAAA,MAAuEG,IAAI,GAACH,KAAK,CAAjF,IAAA;AAAuF,MAAII,iBAAiB,GAArB,EAAA;;AAAyB,MAAGT,YAAY,CAAZA,QAAAA,CAAAA,EAAAA,KAAH,KAAA,EAAoC;AAACS,IAAAA,iBAAiB,GAAC;AAACN,MAAAA,IAAI,EAAL,IAAA;AAAWO,MAAAA,OAAO,EAApCD;AAAkB,KAAlBA;;AAA+C,QAAGH,UAAU,IAAEE,IAAI,CAAnB,OAAA,EAA4B;AAACA,MAAAA,IAAI,CAAJA,OAAAA,CAAAA,MAAAA,GAAAA,QAAAA;AAA+B;AAAhJ,GAAA,MAAoJ;AAACC,IAAAA,iBAAiB,GAAC;AAACE,MAAAA,OAAO,EAAC,SAAA,OAAA,GAAkB;AAACT,QAAAA,uBAAuB,CAAA,IAAA,EAAvBA,QAAuB,CAAvBA;AAA9CO;AAAkB,KAAlBA;AAAyF;;AAAA,SAAM;AAACG,IAAAA,SAAS,EAAC,CAAC,GAAEd,SAAS,CAAZ,OAAA,EAAA,EAAA,EAAA,iBAAA,EAA2C;AAACe,MAAAA,iBAAiB,EAAlB,MAAA;AAA0BC,MAAAA,UAAU,EAAhG;AAA4D,KAA3C;AAAX,GAAN;AAA0G","sourcesContent":["var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.useLink=useLink;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _reactNative=require(\"react-native\");var linkToHREF=function linkToHREF(URL){_reactNative.Linking.openURL(URL).catch(function(err){return console.error('An error occurred',err);});};var addOnPressFunctionality=function addOnPressFunctionality(href,callback){href?linkToHREF(href):'';callback?callback():function(){};};function useLink(props){var href=props.href,isExternal=props.isExternal,_onPress=props.onPress,_ref=props._ref;var platformLinkProps={};if(_reactNative.Platform.OS==='web'){platformLinkProps={href:href,onClick:_onPress};if(isExternal&&_ref.current){_ref.current.target='_blank';}}else{platformLinkProps={onPress:function onPress(){addOnPressFunctionality(href,_onPress);}};}return{linkProps:(0,_extends2.default)({},platformLinkProps,{accessibilityRole:'link',accessible:true})};}\n//# sourceMappingURL=useLink.js.map"]},"metadata":{},"sourceType":"script"}