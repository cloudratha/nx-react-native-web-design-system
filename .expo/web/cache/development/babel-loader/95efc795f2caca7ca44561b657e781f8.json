{"ast":null,"code":"'use strict';\n\nimport Platform from \"../../../exports/Platform\";\nimport UIManager from \"../../../exports/UIManager\";\nvar __DEV__ = true;\n\nfunction configureNext(config, onAnimationDidEnd) {\n  if (!Platform.isTesting) {\n    UIManager.configureNextLayoutAnimation(config, onAnimationDidEnd !== null && onAnimationDidEnd !== void 0 ? onAnimationDidEnd : function () {}, function () {});\n  }\n}\n\nfunction create(duration, type, property) {\n  return {\n    duration: duration,\n    create: {\n      type: type,\n      property: property\n    },\n    update: {\n      type: type\n    },\n    delete: {\n      type: type,\n      property: property\n    }\n  };\n}\n\nvar Presets = {\n  easeInEaseOut: create(300, 'easeInEaseOut', 'opacity'),\n  linear: create(500, 'linear', 'opacity'),\n  spring: {\n    duration: 700,\n    create: {\n      type: 'linear',\n      property: 'opacity'\n    },\n    update: {\n      type: 'spring',\n      springDamping: 0.4\n    },\n    delete: {\n      type: 'linear',\n      property: 'opacity'\n    }\n  }\n};\nvar LayoutAnimation = {\n  configureNext: configureNext,\n  create: create,\n  Types: Object.freeze({\n    spring: 'spring',\n    linear: 'linear',\n    easeInEaseOut: 'easeInEaseOut',\n    easeIn: 'easeIn',\n    easeOut: 'easeOut',\n    keyboard: 'keyboard'\n  }),\n  Properties: Object.freeze({\n    opacity: 'opacity',\n    scaleX: 'scaleX',\n    scaleY: 'scaleY',\n    scaleXY: 'scaleXY'\n  }),\n  checkConfig: function checkConfig() {\n    console.error('LayoutAnimation.checkConfig(...) has been disabled.');\n  },\n  Presets: Presets,\n  easeInEaseOut: configureNext.bind(null, Presets.easeInEaseOut),\n  linear: configureNext.bind(null, Presets.linear),\n  spring: configureNext.bind(null, Presets.spring)\n};\nexport default LayoutAnimation;","map":{"version":3,"sources":["/Users/garethcozens/Documents/repo/cloudratha/react-native-web-nx-demo/node_modules/react-native-web/dist/vendor/react-native/LayoutAnimation/index.js"],"names":["__DEV__","Platform","UIManager","onAnimationDidEnd","duration","create","type","property","update","delete","Presets","easeInEaseOut","linear","spring","springDamping","LayoutAnimation","configureNext","Types","Object","easeIn","easeOut","keyboard","Properties","opacity","scaleX","scaleY","scaleXY","checkConfig","console"],"mappings":"AASA;;AAEA,OAAA,QAAA;AACA,OAAA,SAAA;AAEA,IAAIA,OAAO,GAAX,IAAA;;AAEA,SAAA,aAAA,CAAA,MAAA,EAAA,iBAAA,EAAkD;AAChD,MAAI,CAACC,QAAQ,CAAb,SAAA,EAAyB;AACvBC,IAAAA,SAAS,CAATA,4BAAAA,CAAAA,MAAAA,EAA+CC,iBAAiB,KAAjBA,IAAAA,IAA8BA,iBAAiB,KAAK,KAApDA,CAAAA,GAAAA,iBAAAA,GAAiF,YAAY,CAA5ID,CAAAA,EAAgJ,YAAY,CAA5JA,CAAAA;AAIH;AAED;;AAAA,SAAA,MAAA,CAAA,QAAA,EAAA,IAAA,EAAA,QAAA,EAA0C;AACxC,SAAO;AACLE,IAAAA,QAAQ,EADH,QAAA;AAELC,IAAAA,MAAM,EAAE;AACNC,MAAAA,IAAI,EADE,IAAA;AAENC,MAAAA,QAAQ,EAJL;AAEG,KAFH;AAMLC,IAAAA,MAAM,EAAE;AACNF,MAAAA,IAAI,EAPD;AAMG,KANH;AASLG,IAAAA,MAAM,EAAE;AACNH,MAAAA,IAAI,EADE,IAAA;AAENC,MAAAA,QAAQ,EAXZ;AASU;AATH,GAAP;AAgBF;;AAAA,IAAIG,OAAO,GAAG;AACZC,EAAAA,aAAa,EAAEN,MAAM,CAAA,GAAA,EAAA,eAAA,EADT,SACS,CADT;AAEZO,EAAAA,MAAM,EAAEP,MAAM,CAAA,GAAA,EAAA,QAAA,EAFF,SAEE,CAFF;AAGZQ,EAAAA,MAAM,EAAE;AACNT,IAAAA,QAAQ,EADF,GAAA;AAENC,IAAAA,MAAM,EAAE;AACNC,MAAAA,IAAI,EADE,QAAA;AAENC,MAAAA,QAAQ,EAJJ;AAEE,KAFF;AAMNC,IAAAA,MAAM,EAAE;AACNF,MAAAA,IAAI,EADE,QAAA;AAENQ,MAAAA,aAAa,EART;AAME,KANF;AAUNL,IAAAA,MAAM,EAAE;AACNH,MAAAA,IAAI,EADE,QAAA;AAENC,MAAAA,QAAQ,EAfd;AAaY;AAVF;AAHI,CAAd;AA8BA,IAAIQ,eAAe,GAAG;AAcpBC,EAAAA,aAAa,EAdO,aAAA;AAmBpBX,EAAAA,MAAM,EAnBc,MAAA;AAoBpBY,EAAAA,KAAK,EAAEC,MAAM,CAANA,MAAAA,CAAc;AACnBL,IAAAA,MAAM,EADa,QAAA;AAEnBD,IAAAA,MAAM,EAFa,QAAA;AAGnBD,IAAAA,aAAa,EAHM,eAAA;AAInBQ,IAAAA,MAAM,EAJa,QAAA;AAKnBC,IAAAA,OAAO,EALY,SAAA;AAMnBC,IAAAA,QAAQ,EA1BU;AAoBC,GAAdH,CApBa;AA4BpBI,EAAAA,UAAU,EAAEJ,MAAM,CAANA,MAAAA,CAAc;AACxBK,IAAAA,OAAO,EADiB,SAAA;AAExBC,IAAAA,MAAM,EAFkB,QAAA;AAGxBC,IAAAA,MAAM,EAHkB,QAAA;AAIxBC,IAAAA,OAAO,EAhCW;AA4BM,GAAdR,CA5BQ;AAkCpBS,EAAAA,WAAW,EAAE,SAAA,WAAA,GAAuB;AAClCC,IAAAA,OAAO,CAAPA,KAAAA,CAAAA,qDAAAA;AAnCkB,GAAA;AAqCpBlB,EAAAA,OAAO,EArCa,OAAA;AAsCpBC,EAAAA,aAAa,EAAEK,aAAa,CAAbA,IAAAA,CAAAA,IAAAA,EAAyBN,OAAO,CAtC3B,aAsCLM,CAtCK;AAuCpBJ,EAAAA,MAAM,EAAEI,aAAa,CAAbA,IAAAA,CAAAA,IAAAA,EAAyBN,OAAO,CAvCpB,MAuCZM,CAvCY;AAwCpBH,EAAAA,MAAM,EAAEG,aAAa,CAAbA,IAAAA,CAAAA,IAAAA,EAAyBN,OAAO,CAxC1C,MAwCUM;AAxCY,CAAtB;AA0CA,eAAA,eAAA","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport Platform from '../../../exports/Platform';\nimport UIManager from '../../../exports/UIManager';\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nfunction configureNext(config, onAnimationDidEnd) {\n  if (!Platform.isTesting) {\n    UIManager.configureNextLayoutAnimation(config, onAnimationDidEnd !== null && onAnimationDidEnd !== void 0 ? onAnimationDidEnd : function () {}, function () {}\n    /* unused onError */\n    );\n  }\n}\n\nfunction create(duration, type, property) {\n  return {\n    duration: duration,\n    create: {\n      type: type,\n      property: property\n    },\n    update: {\n      type: type\n    },\n    delete: {\n      type: type,\n      property: property\n    }\n  };\n}\n\nvar Presets = {\n  easeInEaseOut: create(300, 'easeInEaseOut', 'opacity'),\n  linear: create(500, 'linear', 'opacity'),\n  spring: {\n    duration: 700,\n    create: {\n      type: 'linear',\n      property: 'opacity'\n    },\n    update: {\n      type: 'spring',\n      springDamping: 0.4\n    },\n    delete: {\n      type: 'linear',\n      property: 'opacity'\n    }\n  }\n};\n/**\n * Automatically animates views to their new positions when the\n * next layout happens.\n *\n * A common way to use this API is to call it before calling `setState`.\n *\n * Note that in order to get this to work on **Android** you need to set the following flags via `UIManager`:\n *\n *     UIManager.setLayoutAnimationEnabledExperimental && UIManager.setLayoutAnimationEnabledExperimental(true);\n */\n\nvar LayoutAnimation = {\n  /**\n   * Schedules an animation to happen on the next layout.\n   *\n   * @param config Specifies animation properties:\n   *\n   *   - `duration` in milliseconds\n   *   - `create`, `AnimationConfig` for animating in new views\n   *   - `update`, `AnimationConfig` for animating views that have been updated\n   *\n   * @param onAnimationDidEnd Called when the animation finished.\n   * Only supported on iOS.\n   * @param onError Called on error. Only supported on iOS.\n   */\n  configureNext: configureNext,\n\n  /**\n   * Helper for creating a config for `configureNext`.\n   */\n  create: create,\n  Types: Object.freeze({\n    spring: 'spring',\n    linear: 'linear',\n    easeInEaseOut: 'easeInEaseOut',\n    easeIn: 'easeIn',\n    easeOut: 'easeOut',\n    keyboard: 'keyboard'\n  }),\n  Properties: Object.freeze({\n    opacity: 'opacity',\n    scaleX: 'scaleX',\n    scaleY: 'scaleY',\n    scaleXY: 'scaleXY'\n  }),\n  checkConfig: function checkConfig() {\n    console.error('LayoutAnimation.checkConfig(...) has been disabled.');\n  },\n  Presets: Presets,\n  easeInEaseOut: configureNext.bind(null, Presets.easeInEaseOut),\n  linear: configureNext.bind(null, Presets.linear),\n  spring: configureNext.bind(null, Presets.spring)\n};\nexport default LayoutAnimation;"]},"metadata":{},"sourceType":"module"}