{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Appearance from \"../Appearance\";\nexport default function useColorScheme() {\n  _s();\n\n  var _React$useState = React.useState(Appearance.getColorScheme()),\n      colorScheme = _React$useState[0],\n      setColorScheme = _React$useState[1];\n\n  React.useEffect(function () {\n    function listener(appearance) {\n      setColorScheme(appearance.colorScheme);\n    }\n\n    Appearance.addChangeListener(listener);\n    return function () {\n      return Appearance.removeChangeListener(listener);\n    };\n  });\n  return colorScheme;\n}\n\n_s(useColorScheme, \"xKQ4eXoX3djgUoDtt9xwuqrPB4E=\");\n\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/Users/garethcozens/Documents/repo/cloudratha/react-native-web-nx-demo/node_modules/react-native-web/dist/exports/useColorScheme/index.js"],"names":["useColorScheme","_React$useState","React","Appearance","colorScheme","setColorScheme","appearance"],"mappings":";;AASA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,OAAA,UAAA;AACA,eAAe,SAAA,cAAA,GAA0B;AAAA,EAAA,EAAA;;AACvC,MAAIC,eAAe,GAAGC,KAAK,CAALA,QAAAA,CAAeC,UAAU,CAA/C,cAAqCA,EAAfD,CAAtB;AAAA,MACIE,WAAW,GAAGH,eAAe,CADjC,CACiC,CADjC;AAAA,MAEII,cAAc,GAAGJ,eAAe,CAFpC,CAEoC,CAFpC;;AAIAC,EAAAA,KAAK,CAALA,SAAAA,CAAgB,YAAY;AAC1B,aAAA,QAAA,CAAA,UAAA,EAA8B;AAC5BG,MAAAA,cAAc,CAACC,UAAU,CAAzBD,WAAc,CAAdA;AAGFF;;AAAAA,IAAAA,UAAU,CAAVA,iBAAAA,CAAAA,QAAAA;AACA,WAAO,YAAY;AACjB,aAAOA,UAAU,CAAVA,oBAAAA,CAAP,QAAOA,CAAP;AADF,KAAA;AANFD,GAAAA;AAUA,SAAA,WAAA;;;GAfsBF,c","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nimport Appearance from '../Appearance';\nexport default function useColorScheme() {\n  var _React$useState = React.useState(Appearance.getColorScheme()),\n      colorScheme = _React$useState[0],\n      setColorScheme = _React$useState[1];\n\n  React.useEffect(function () {\n    function listener(appearance) {\n      setColorScheme(appearance.colorScheme);\n    }\n\n    Appearance.addChangeListener(listener);\n    return function () {\n      return Appearance.removeChangeListener(listener);\n    };\n  });\n  return colorScheme;\n}"]},"metadata":{},"sourceType":"module"}