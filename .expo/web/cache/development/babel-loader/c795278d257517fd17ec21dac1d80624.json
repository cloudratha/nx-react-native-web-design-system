{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useTheme = useTheme;\n\nvar _NativeBaseContext = require(\"./../core/NativeBaseContext\");\n\nfunction useTheme() {\n  var theme = (0, _NativeBaseContext.useNativeBaseConfig)('useTheme').theme;\n\n  if (!theme) {\n    throw Error('useTheme: `theme` is undefined. Seems you forgot to wrap your app in `<NativeBaseProvider />`');\n  }\n\n  return theme;\n}\n\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/Users/garethcozens/Documents/repo/cloudratha/react-native-web-nx-demo/node_modules/native-base/lib/commonjs/hooks/useTheme.js"],"names":["Object","value","exports","_NativeBaseContext","require","theme","Error"],"mappings":"AAAAA,MAAM,CAANA,cAAAA,CAAAA,OAAAA,EAAAA,YAAAA,EAA2C;AAACC,EAAAA,KAAK,EAAjDD;AAA2C,CAA3CA;AAAyDE,OAAO,CAAPA,QAAAA,GAAAA,QAAAA;;AAA0B,IAAIC,kBAAkB,GAACC,OAAvB,+BAAA;;AAA8D,SAAA,QAAA,GAAmB;AAAC,MAAIC,KAAK,GAAC,CAAC,GAAEF,kBAAkB,CAArB,mBAAA,EAAA,UAAA,EAAV,KAAA;;AAAuE,MAAG,CAAH,KAAA,EAAU;AAAC,UAAMG,KAAK,CAAX,+FAAW,CAAX;AAA8G;;AAAA,SAAA,KAAA;AAAc","sourcesContent":["Object.defineProperty(exports,\"__esModule\",{value:true});exports.useTheme=useTheme;var _NativeBaseContext=require(\"./../core/NativeBaseContext\");function useTheme(){var theme=(0,_NativeBaseContext.useNativeBaseConfig)('useTheme').theme;if(!theme){throw Error('useTheme: `theme` is undefined. Seems you forgot to wrap your app in `<NativeBaseProvider />`');}return theme;}\n//# sourceMappingURL=useTheme.js.map"]},"metadata":{},"sourceType":"script"}